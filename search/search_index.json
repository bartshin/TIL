{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"#bartshin-til","title":"\uc548\ub155\ud558\uc138\uc694 bartshin\uc758 TIL\uc785\ub2c8\ub2e4","text":""},{"location":"#_1","title":"\uc5ec\uae30\uc5d0 \uc791\uc131\ub418\ub294 \uac83","text":"<ul> <li>\uc791\uc131\uc790\uac00 \ubab0\ub790\ub358 \ub0b4\uc6a9</li> <li>\ucf54\ub4dc\ub97c \uc9e4 \ub54c \uc790\uc8fc \uc4f0\uc9c0 \uc54a\uc9c0\ub9cc \ub54c\ub85c \uc911\uc694\ud574\uc9c8 \uc218 \uc788\ub294 \ub0b4\uc6a9</li> <li>\ub098\uc911\uc5d0 \ucc3e\uc544\ubcf4\uba74 \ub3c4\uc6c0\uc774 \ub420 \uac83 \uac19\uc740 \ub0b4\uc6a9 </li> </ul>"},{"location":"#_2","title":"\uc5ec\uae30\uc5d0 \uc791\uc131\ub418\uc9c0 \uc54a\ub294 \uac83","text":"<ul> <li>\ud29c\ud1a0\ub9ac\uc5bc\uacfc \uac19\uc740 \uae30\ubcf8\uc801\uc778 \ub0b4\uc6a9</li> <li>\uc791\uc131\uc790\uac00 \uc774\ud574\ud558\uae30\uc5d0 \uc5b4\ub824\uc6b4 \ub0b4\uc6a9</li> <li>\uc2e4\uc81c \ucf54\ub4dc \uc791\uc131\uc5d0 \ud06c\uac8c \uc601\ud5a5\uc774 \uc5c6\ub2e4\uace0 \ud310\ub2e8\ub418\ub294 \ub0b4\uc6a9</li> </ul>"},{"location":"#_3","title":"\uc791\uc131\ubc29\ud5a5","text":"<ul> <li>\uc791\uc131\uc790\uac00 \uae30\uc220\uc801\uc778 \ubc88\uc5ed\uac00\uac00 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 \ucd5c\ub300\ud55c \uc6d0\ub798\uc758 \ub2e8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4</li> <li>\ub0b4\uc6a9\uc758 \ucd9c\ucc98\ub294 \ub300\ubd80\ubd84 \ub354 \uc77d\uc5b4\ubcfc \ub0b4\uc6a9\uc5d0 \uc788\ub294 \ub9c1\ud06c\uc911 \ud558\ub098\uc774\uac70\ub098 \ub610\ub294 \uae30\ubcf8\uc11c\uc5d0 \uc788\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4</li> <li>\uc608\uc2dc \ucf54\ub4dc\ub294 \ub808\ud37c\ub7f0\uc2a4\uc5d0 \uc788\ub294 \ucf54\ub4dc\uc774\uac70\ub098 \ub0b4\uc6a9\uc744 \ubc14\ud0d5\uc73c\ub85c \uc9c1\uc811 \uc791\uc131\ud574 \uc2e4\ud589\ud574\ubcf8 \ucf54\ub4dc\uc785\ub2c8\ub2e4</li> </ul>"},{"location":"#_4","title":"\uae30\ubcf8\uc801\uc778 \ub808\ud37c\ub7f0\uc2a4","text":"<ol> <li>C sharp   <ul> <li>MS learn </li> <li>Pro C# 10 with .Net 6 | Troelsen, Andrew </li> </ul> </li> <li>Unity   <ul> <li>Unity Manual </li> </ul> </li> </ol> <p>\uc2dc\uc791\uc77c: 2025-03-11</p> <p>email: bartshin@icloud.com  templete Publish your Obsidian Notes</p>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/","title":"2025.03.11 \ubcc0\uc218,\uc790\ub8cc\ud615","text":""},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#_1","title":"\ubcc0\uc218","text":""},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#_2","title":"\ubcc0\uc218\uc758 \uc120\uc5b8","text":"<ul> <li>\uac12\uc744 \ud560\ub2f9\ud558\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c (\ucef4\ud30c\uc77c \uc5d0\ub7ec)</li> <li>pointer \ud0c0\uc785\uc740 unsafe\ubb38\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c (rust \uac19\uc740 \ud65c\uc6a9)</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#var","title":"var \ud0a4\uc6cc\ub4dc","text":"<ul> <li>compiler\uac00 \ucd94\ub860\ud560 \uc218 \uc788\uc744 \ub54c\ub294 var\ub97c \uc0ac\uc6a9\uac00\ub2a5 </li> <li>c++\uc758 auto\uc640 \uac19\uc740 \uc6a9\ub3c4      (auto\ub294 function\uc5d0\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5\ud558\uc9c0\ub9cc c#\uc740 \ubcc0\uc218\uc5d0\ub9cc \uac00\ub2a5) <p>MS: C# coding convention \ucf54\ub4dc\ub9cc \ubcf4\uace0 \uc27d\uac8c \ucd94\ub860\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0    \uc758\ub3c4\ud55c \uc790\ub8cc\ud615\uc5d0\uc11c \ubcc0\uacbd\ub420 \uac00\ub2a5\uc131\uc774 \uc5c6\uc744 \ub54c\ub9cc \uc0ac\uc6a9 LINQ\uc758 \uc0ac\uc6a9\uc2dc\uc5d0\ub294 var \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud558\uae30\ub97c \uad8c\ud568    (\ub108\ubb34 \ubcf5\uc7a1\ud55c generic)</p> </li> <li>\uc0ac\uc6a9 \uc608\uc2dc <pre><code>// 1. new \ud0a4\uc6cc\ub4dc\ub85c \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 \uacbd\uc6b0\nvar example = new Example();\n\n// 2. literal\ub4e4\nvar message = \"This is clearly a string.\";\nvar currentTemperature = 27;\n\n// 3. LINQ\nvar seattleCustomers2 = from customer in Customers\n                    where customer.City == \"Seattle\"\n                    orderby customer.Name\n                    select customer;\n// 4. for loop    \nfor (var i = 0; i &lt; 10000; i++)\n{ \n    manyPhrases.Append(phrase);\n}\n</code></pre></li> <li>\uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud558\ub294 \uc608\uc2dc <pre><code>// 1. \uc758\ub3c4\ud55c \uac83\uacfc \ub2e4\ub978 \ud0c0\uc785\uc774 \ub420 \uac00\ub2a5\uc131\uc774 \uc788\ub294 \uacbd\uc6b0\nvar inputInt = Console.ReadLine();\nConsole.WriteLine(inputInt);\n\n// 2. foreach\nforeach (char ch in laugh)\n{\n    if (ch == 'h')\n        Console.Write(\"H\");\n}    \n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#const","title":"const \ud0a4\uc6cc\ub4dc","text":"<ul> <li>simple type\uc5d0\ub9cc \uc0ac\uc6a9\uac00\ub2a5</li> <li>\ucef4\ud30c\uc77c \uc0c1\uc218\ub85c\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5    (C\uc758 macro \ub098 const, c++\uc758 const, constexpr \ub4f1\uacfc \uc720\uc0ac) </li> <li>const\ub85c \uacc4\uc0b0\ub418\ub294 \uac12\uc744 \uc120\uc5b8 \uac00\ub2a5    (runtime \uc804\uc5d0 \ubbf8\ub9ac \uacc4\uc0b0\ud574\uc11c \ucd5c\uc801\ud654\uc5d0 \ud65c\uc6a9?)</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#_3","title":"\uc790\ub8cc\ud615","text":"<ul> <li>\ubaa8\ub4e0 \ud0c0\uc785\uc758 base class\ub294 System.Object </li> <li>\uc5b4\ub5a4 \ud0c0\uc785\uc778\uc9c0\uc5d0 \ub530\ub77c value type, reference type\uc774 \uacb0\uc815    (pointer(*), reference(&amp;)\ub85c \uad6c\ubd84\ub418\ub294 C, C++\uacfc \ub2e4\ub974\ub2e4)</li> <li>value type, reference type \ubaa8\ub450 nullable type \uacfc non nullable type\uc774 \uc788\ub2e4     (\ub0b4\ubd80\uc801\uc73c\ub85c\ub294 rust, swift\ucc98\ub7fc enum\uc73c\ub85c \ucc98\ub9ac\ub428)</li> <li>value type\uc740 nullable\uc77c \uacbd\uc6b0\uc5d0\ub9cc null\uc774 \ub420 \uc218 \uc788\ub2e4</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#value-type","title":"value type","text":"<ul> <li>value type\uc740 struct type\uacfc enum type (int, float \ub4f1\uc740 struct type\uc758 \uc77c\uc885\uc778 simple type)</li> <li>value type\uc744 \uc81c\uc678\ud558\uba74 \uc804\ubd80 reference type\uc774\ub2e4 (stack\uc5d0 \uc120\uc5b8\ud55c array\ub3c4 reference type\uc73c\ub85c heap\uc5d0 \ud560\ub2f9)</li> <li>value type\uc758 baseclass\ub294 System.ValueType &lt; object \uc774\ub2e4 (sealed class\uc774\uae30 \ub54c\ubb38\uc5d0 \ub354\uc774\uc0c1 \ud558\uc704 class\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\ub2e4)</li> <li>default constructor \ubaa8\ub4e0 simple type\uc758 default value\ub294 bit pattern 0\uc774\ub2e4 Enum\uc758 default\ub294 0\ub97c \ud574\ub2f9 \ud0c0\uc785\uc73c\ub85c \ubcc0\uacbd\ud55c \uac12\uc774\ub2e4 struct type\uc758 \uacbd\uc6b0\uc5d4 \ubaa8\ub4e0 value type field\ub97c 0\uc73c\ub85c \ud560\ub2f9\ud558\uace0  \ubaa8\ub4e0 reference type field\ub97c null\ub85c \ud560\ub2f9\ud55c\ub2e4  nullable type\uc758 default\ub294 null\uc774\ub2e4</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#byte-sbyte","title":"byte, sbyte","text":"<ul> <li>c\uc758 char, unsigned char\uc640 \uac19\uc740 \ud06c\uae30</li> <li>sbyte\ub294 CLS \ud45c\uc900\uc774 \uc544\ub2c8\ub77c\uc11c System.Int16\uc744 \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4\uace0 \ud568    sbyte\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Int16 \uc790\ub8cc\ud615\uacfc sbyte.MaxValue,    sbyte.MinValue\ub97c \uc774\uc6a9   unsigned type\ub4e4\ub3c4 CLS \ud45c\uc900\uc774 \uc544\ub2c8\ub2e4</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#int","title":"int","text":"<ul> <li>\ubaa8\ub4e0 \ud50c\ub7ab\ud3fc\uc5d0\uc11c 4byte</li> <li>overflow check\ub97c \uc704\ud574\uc11c\ub294 checked \uc0ac\uc6a9</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#char","title":"char","text":"<ul> <li>16bit UTF-16</li> </ul>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#string","title":"string","text":"<ul> <li>immutable\uc774\uae30 \ub54c\ubb38\uc5d0 concat\ub4f1 mutation\uc744 \uc5f0\uc18d\ud574\uc11c \uc0ac\uc6a9\ud558\uba74 \uc548\ub428  (StringBuilder \uc0ac\uc6a9)</li> <li>C\uc758 string\uacfc \uac19\uc740 8bit char \ud0c0\uc785\uc740 \uc5c6\uace0 byte\uc758 sequence\ub85c\ub9cc \uc0ac\uc6a9 </li> </ul> <p>MS: UTF-8 string <pre><code>    ReadOnlySpan&lt;byte&gt; utf8 = \"Hello World\"u8;\n    string str = System.Text.Encoding.UTF8.GetString(utf8);\n    Console.WriteLine(str);\n</code></pre></p>"},{"location":"c_sharp/2025.03.11_%EB%B3%80%EC%88%98%2C%EC%9E%90%EB%A3%8C%ED%98%95/#_4","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<ul> <li>scope shadowing C#\uc758scope shadowing</li> <li>int\ub294 System.Int32\uc778 struct\uc778\ub370 C\uc758 int\uc640 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9\uac00\ub2a5\ud55c \uc774\uc720  <p>Int32 implemetation constant expression MS: Array Arrays are mechanisms that allow you to treat several items as a single collection. The Microsoft\u00ae .NET Common Language Runtime (CLR) supports single-dimensional arrays, multidimensional arrays, and jagged arrays (arrays of arrays). All array types are implicitly derived from System.Array, which itself is derived from System.Object. This means that all arrays are always reference types which are allocated on the managed heap, and your app's variable contains a reference to the array and not the array itself.</p> </li> </ul>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/","title":"2025.03.12 \uc5f0\uc0b0\uc790","text":""},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#_1","title":"\uc5f0\uc0b0\uc790","text":""},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#_2","title":"\uc5f0\uc0b0\uc790 \uc6b0\uc120\uc21c\uc704","text":"<ol> <li>primary (new, typeof, i++ ...)</li> <li>unary (-i, ++i, (double)i)   &amp;i, *i\uc758 \uacbd\uc6b0 unsafe \uc5d0\uc11c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5</li> <li>multiplicative </li> <li>addtive </li> <li>shift </li> <li>relation, type testing (&gt;, &gt;=, is, as)</li> <li>equality </li> <li>logical    &amp; &gt; ^ &gt; | \uc6b0\uc120\uc21c\uc704\uc774\uae30 \ub54c\ubb38\uc5d0 ()\ub97c \ud65c\uc6a9\ud574\uc11c \uc791\uc131\ud560 \uac83</li> </ol>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#logical-operator","title":"logical operator","text":"<ul> <li>XOR</li> <li>true, false\uc5d0\uc11c \uc0ac\uc6a9 <pre><code>true ^ true    // False\ntrue ^ false   // True\nfalse ^ true   // True\nfalse ^ false  // False\n</code></pre></li> <li> <p>integral numeric\uc5d0\uc11c bitwise  <pre><code>uint a = 0b_1111_1000;\nuint b = 0b_0001_1100;\nuint c = a ^ b;\nConvert.ToString(c, toBase: 2) // 11100100\n</code></pre></p> </li> <li> <p>nullable boolean logical operators</p> </li> </ul> <p>\ub2e4\ub978 \uc5f0\uc0b0\uc790\uc758\uacbd\uc6b0 nullable\uc778 \ud0c0\uc785\uc5d0 \ub300\ud55c \uc5f0\uc0b0\uacb0\uacfc\ub294 null\uc774\ub2e4    \ud558\uc9c0\ub9cc &amp;, | \uc758 \uacbd\uc6b0\uc5d0\ub294 null\uc774 \uc544\ub2cc true, false\uc77c \uac00\ub2a5\uc131\uc774 \uc788\ub2e4    (bool? b = null; !b // null)    |  x  |  y  | x&amp;y | x|y|   |-----|-----|-----|-----|   |true |null |null |true |   |false|null |false|null |   |null |true |null |true |   |null |false|false|null |   |null |null |null |null |</p>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#evaluate","title":"evaluate \ub418\uc9c0 \uc54a\ub294 \uacbd\uc6b0","text":"<ul> <li>conditional logical operators short-circuit evaluation    A = false; A &amp;&amp; B   C = true;  C || D   (A &amp; B, C | D \uc758 \uacbd\uc6b0 B\ub3c4 evaluate)</li> <li>null-coalescing operators    A = null; A?., A?[], A?.</li> </ul>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#null-forgiving-operator","title":"null forgiving operator","text":"<p>null warning\uc744 \ubb34\uc2dc\ud560 \uc218 \uc788\ub294 \uc5f0\uc0b0\uc790    runtime\uc5d0\ub294 \uc601\ud5a5\uc774 \uc5c6\uc5b4\uc11c null\uc774 \uac00\ub2a5\ud558\uc9c0 \uc54a\uc740 \uc0c1\ud669\uc5d0\uc11c\ub294 \ud06c\ub798\uc2dc   compiler\uac00 \uc54c\uc9c0 \ubabb\ud558\uc9c0\ub9cc \ud655\uc2e4\ud788 null\uc774 \uc544\ub2d0 \uacbd\uc6b0\uc5d0\ub9cc \uc0ac\uc6a9</p> <p>MSTest framework   - \uc0ac\uc6a9   <pre><code>  #nullable enable\n  public class Person\n  {\n      public Person(string name) =&gt; Name = name ?? throw new ArgumentNullException(nameof(name));\n\n      public string Name { get; }\n  }\n\n  [TestMethod, ExpectedException(typeof(ArgumentNullException))]\n  public void NullNameShouldThrowTest()\n  {\n      var person = new Person(null!);\n  }\n</code></pre>   - NotNullWhen \uc0ac\uc6a9   <pre><code>  public static void Main()\n  {\n      Person? p = Find(\"John\");\n      if (IsValid(p))\n      {\n          Console.WriteLine($\"Found {p.Name}\");\n      }\n  }\n\n  public static bool IsValid([NotNullWhen(true)] Person? person)\n      =&gt; person is not null &amp;&amp; person.Name is not null;\n</code></pre></p>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#_3","title":"\ud560\ub2f9\uc5f0\uc0b0\uc790","text":"<ul> <li>value type\uc77c \uacbd\uc6b0\uc5d0\ub294 copy</li> <li>ref assignment (C++\uc758 reference\ucc98\ub7fc alias, null \ubd88\uac00\ub2a5)  <pre><code>   void Display(double[] s) =&gt; Console.WriteLine(string.Join(\" \", s));\n\n   double[] arr = { 0.0, 0.0, 0.0 };\n   Display(arr); // 0 0 0\n\n   ref double arrayElement = ref arr[0];\n   arrayElement = 3.0;\n   Display(arr); // 3 0 0\n\n   arrayElement = ref arr[arr.Length - 1];\n   arrayElement = 5.0;\n   Display(arr); // 3 0 5\n</code></pre></li> <li>Null coalescing assignment  \ub300\uc0c1\uc774 null\uc77c \uacbd\uc6b0\uc5d0\ub9cc \ud560\ub2f9  <pre><code>   int? value = null;\n   value = 42;  // value == 42\n   string? str = \"\"; \n   str ??= \"HelloWorld\"; // str == \"\"\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.12_%EC%97%B0%EC%82%B0%EC%9E%90/#_4","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>MS: ref keyword MS: operator overload</p>"},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/","title":"2025.03.13 \ubc18\ubcf5\ubb38","text":""},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/#_1","title":"\ubc18\ubcf5\ubb38","text":""},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/#foreach","title":"foreach","text":"<ul> <li>foreach\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0</li> <li>\ub2e4\uc74c \ub450\uac00\uc9c0 \uc911 \ud558\ub098\uc758 interface\ub97c \ub530\ub974\ub294 \uacbd\uc6b0System.Collections.IEnumerable or System.Collections.Generic.IEnumerable\\ <li>(public) GetEnumerator() \uac00 \uc788\uace0    GetEnumerator()\uc758 return type\uc774 Current\uc640     bool MoveNext()\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uacbd\uc6b0  </li> <li>enumerator\uc758 Current\uac00 ref return\uc778 \uacbd\uc6b0 ref, ref readonly\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c(ref readonly\ub294 C# 12\ubd80\ud130)  <pre><code>  Span&lt;int&gt; storage = stackalloc int[10];\n  int num = 0;\n  foreach (ref int item in storage)\n  {\n      item = num++;\n  }\n  foreach (ref readonly var item in storage)\n  {\n      Console.Write($\"{item} \");\n  }\n</code></pre></li> <li> <p>foreach\uac00 var\uc774 null\uc744 reference \ud558\uba74 exception    csproj\uc5d0\uc11c enable</p> </li> <li> <p>await foreach\ub294 \ubc18\ubcf5\uc911\uc5d0 \uac01\uac01\uc758 element\ub97c \uae30\ub2e4\ub824\uc900\ub2e4  (\uc804\uccb4 \ubc18\ubcf5\ubb38\uc774 suspend)</p> </li> <li>foreach\uc758 var\ub97c collection\uc758 \ud0c0\uc785\uacfc \ub2e4\ub974\uac8c \uc0ac\uc6a9\ud558\uba74 cast exception\uc774 \uc0dd\uae38 \uc218 \uc788\uc74c  <pre><code>    IEnumerable&lt;T&gt; collection = new T[5];\n    foreach (V item in collection) { }\n</code></pre></li>"},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/#_2","title":"\ubd80\ub3d9\uc18c\uc218\uc810","text":"<ul> <li>NaN  0.0/0.0 : NaN NaN == NaN : false NaN.Equals(NaN) : false</li> <li>Infinity 1.0/0.0 (PositiveInfinity) -1.0/0.0 (NegativeInfinity)</li> <li>Cast (bit\uac00 \ud070 \ud0c0\uc785\uc73c\ub85c) float, double =&gt; double  float, float  =&gt; float  float || double, decimal =&gt; explicit integral, decimal =&gt; decimal</li> </ul>"},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/#_3","title":"\uc815\uc218","text":"<ul> <li>\uae30\ubcf8\uc801\uc73c\ub85c \uc790\ub8cc\ud615\uc758 \ud06c\uae30\ub97c \ub118\uc5b4\uc11c\ub294 \uac12\uc744 cast \ud560 \uc218 \uc5c6\ub2e4  <pre><code>    int i = unchecked((int)0xFF_FF_FF_FF); // unchecked \uc0ac\uc6a9\n    int j = unchecked((int)4294967295); // \ucef4\ud30c\uc77c \uc5d0\ub7ec\n    int i = (int)0xFF_FF_FF_FF; // \ucef4\ud30c\uc77c \uc5d0\ub7ec\n</code></pre></li> <li>overflow\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574\uc11c\ub294 try checked\ub97c \uc0ac\uc6a9  unchecked \ube14\ub85d\uc548\uc758 \ub2e4\ub978 method\uc5d0 \ub300\ud574\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c (double =&gt; int \uc5d0\ub3c4 \uc0ac\uc6a9) <pre><code>    int i = 1;\n    while(true) {\n      try {\n        checked {\n          i *= 2;\n        }\n      } catch (OverflowException e) {\n        Console.WriteLine(e.Message);\n        return ;\n      }\n    }\n</code></pre></li> <li>overflow, underflow compiler option   true</li> </ul>"},{"location":"c_sharp/2025.03.13_%EB%B0%98%EB%B3%B5%EB%AC%B8/#_4","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>Ref return</p>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/","title":"2025.03.14 \ud568\uc218","text":""},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#_1","title":"\ud568\uc218","text":""},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#type-widening","title":"type widening","text":"<ul> <li>\ub370\uc774\ud130 \uc190\uc2e4 \uac00\ub2a5\uc131\uc774 \uc5c6\uc744\ub54c upward casting  <pre><code>// short =&gt; int\nshort num1 = 1, num2 = 2;\nint answer = Add(num1, num2);\n\n// compile error \n// short answer = Add(numb1, numb2);\n\nstatic int Add(int x, int y) {\n    return x + y;\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#switch","title":"switch \ud0a4\uc6cc\ub4dc","text":"<ul> <li>fallthrough \uc0ac\uc6a9 \ubd88\uac00, \uc5ec\ub7ec case\uc5d0 \ud574\ub2f9\ud560 \uacbd\uc6b0 \ub3d9\uc77c\ud55c \ucf54\ub4dc\ub9cc \uac00\ub2a5</li> <li>string\ub3c4 \ube44\uad50 \uac00\ub2a5     <pre><code>string s = \"hello\";\nswitch (s) {\n    case \"hello\":\n        Console.WriteLine(\"world\");\n        break;\n    default:\n        Console.WriteLine(\"string ${s}\");\n        break;\n}\n</code></pre></li> <li>Pattern matching (Rust \uc640 \ube44\uc2b7\ud55c \uae30\ub2a5)   <ol> <li>\uac04\uacb0\ud55c \ud560\ub2f9 <pre><code>    int value = 1;\n\n    string str = value switch\n    {\n        1 =&gt; \"one\",\n        2 =&gt; \"two\",\n        _ =&gt; \"\"\n    };\n</code></pre></li> <li>type matching   <pre><code>object value = 1;\nswitch (value)\n{\n  case int i when i == 1:\n    Console.WriteLine(1);\n    break;\n  case int i:\n    Console.WriteLine($\"int {i}\");\n    break;\n}\n// compile error\nswitch (value)\n{\n\u00a0\u00a0case int i:\n    \u00a0\u00a0\u00a0\u00a0//do something\n    \u00a0\u00a0\u00a0\u00a0break;\n\u00a0\u00a0case int i when i == 0:\n    \u00a0\u00a0\u00a0\u00a0//do something\n    \u00a0\u00a0\u00a0\u00a0break;\n}\n</code></pre></li> </ol> </li> </ul>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#local-function","title":"local function","text":"<ul> <li>\uc911\ucca9\ud574\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4</li> <li>static\uc73c\ub85c \uc791\uc131\ud558\uba74 side effect\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\ub294\ub2e4     <pre><code>static int AddTwice(int x, int y) {\n    return (Add(Add(x, y), Add(x, y)));\n\nstatic int Add(int x, int y) {\n    x += y; // no side effect\n    return (x);\n    }\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#parameter-keywords","title":"parameter keywords","text":"<ul> <li>ref, out, in \uc740 \uc804\ubd80 pass by reference\ub85c \ub3d9\uc791</li> <li>ref parameter\ub294 ref variable\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc    \uc6d0\ub798\uc758 variable\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \ub3d9\uc77c\ud558\uac8c \ub3d9\uc791     <pre><code>int num = 42;\nref int numRef = ref num;\nSetZero(ref num); // num = 0;\n// C\uc758 double pointer\ucc98\ub7fc \uc791\ub3d9\ud558\uc9c0 \uc54a\uc74c\nSetZero(ref numRef); // numRef = 0;\n\nstatic void SetZero(ref int i) {\n    i = 0;\n}\n</code></pre></li> <li>out keyword    \uac12\uc744 \ud560\ub2f9\ud558\uae30 \uc804\uc5d0\ub294 \uc77d\uc744 \uc218 \uc5c6\uace0 \ubc18\ub4dc\uc2dc \ud560\ub2f9\ud574\uc57c \ud568   caller\uac00 _\uc744 output parameter\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4    (return \ub418\uae30 \uc804\uc5d0 \ud560\ub2f9 \ub41c \ud6c4 \ubc84\ub824\uc9d0)    non-initialized variable\uc744 out parameter\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc74c  <pre><code>    object value = 1;\n    bool isInteger = GetIntegerValue(value, out _);\n\n    static bool GetIntegerValue(object value, out int output) {\n        switch (value)\n        {\n            case int i: \n                output = i;\n                return (true);\n            default:\n            // \uc758\ubbf8\uac00 \uc5c6\ub294 \uac12\uc774\uc9c0\ub9cc \ud560\ub2f9\ud574\uc57c \ud568\n                output = 0;\n                return (false);\n        }\n    }\n</code></pre></li> <li>in keyword    read-only\ub97c \ubcf4\uc7a5\ud558\uace0 \uc2f6\uc744 \ub54c \uc0ac\uc6a9 (C\uc758 const parameter)    \ud070 struct\ub97c \uc804\ub2ec\ud560 \ub54c \uc0ac\uc6a9   </li> <li>params keyword    \ub3d9\uc77c\ud55c \ud0c0\uc785 \ub610\ub294 \uac19\uc740 base class\ub97c \uac00\uc9c4 class\ub4e4\uc744 comma\ub85c \uad6c\ubd84\ud574\uc11c \uc804\ub2ec \uac00\ub2a5    C, C++\uc758 Variadic function\uacfc\ub294 \ub2e4\ub974\uac8c \ub0b4\ubd80\uc801\uc73c\ub85c array\uac00 \uc0dd\uc131\ub41c\ub2e4\uace0 \ud568    (\ucd5c\uc801\ud654\uac00 \ub418\ub294 \uac83\uc774 \uc544\ub2cc \ub2e8\uc21c\ud55c \ud3b8\uc758\uc131?)</li> </ul>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#named-argument","title":"named argument","text":""},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#_2","title":"\ud574\uacb0\ub418\uc9c0 \uc54a\ub294 \ub0b4\uc6a9","text":"<ul> <li>pointer\ub97c \uc0ac\uc6a9\ud55c C\uc640 \uac19\uc740 swap    string\uc740 managed object\ub77c\uc11c char* \uc640\ub294 \ub2e4\ub974\uc9c0\ub9cc     string*, string** \ub4f1\uc744 \uc0ac\uc6a9\ud574\ub3c4    string\uc744 \ubcf5\uc0ac\ud558\uc9c0 \uc54a\uace0\ub294 swap\uc744 \ud560 \uc218 \uc5c6\uc5c8\uc74c    StringBuilder\ub97c char*\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \ub0b4\uc6a9\uc744 \ubcf4\uae34 \ud588\uc9c0\ub9cc \uc544\uc9c1 \uad6c\ud604\ud558\uc9c0 \uc54a\uc74c  <pre><code>// swap\uc5d0 \uc2e4\ud328\ud55c \uad6c\ud604 \nstring str1 = \"Flip\";\nstring str2 = \"Flop\";\nunsafe {\n    SwapStrings(&amp;str1, &amp;str2);\n}\n\nstatic unsafe void SwapStrings(string* str1, string* str2) {\n    string* temp = str1;\n    *str1 = *str2;\n    *str2 = *temp;\n}\n// \uc791\ub3d9\ud558\uc9c0\ub9cc str1\uacfc str2\ub294 swap \ub418\uc9c0 \uc54a\uace0\n// strPtr1\uacfc strPtr2\ub9cc swap \ub41c \uac83\uc73c\ub85c \ud655\uc778\nstring str1 = \"Flip\";\nstring str2 = \"Flop\";\nunsafe {\n    string* strPtr1 = &amp;str1;\n    string* strPtr2 = &amp;str2;\n    SwapStrings(&amp;strPtr1, &amp;strPtr2);\n}\n\nstatic unsafe void SwapStrings(string** str1, string** str2) {\n    string* temp = *str1;\n    *str1 = *str2;\n    *str2 = temp;\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.14_%ED%95%A8%EC%88%98/#_3","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>MethodImpl(inline function?)</p>"},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/","title":"2025.03.15 \ubc30\uc5f4","text":""},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/#_1","title":"\ubc30\uc5f4","text":""},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/#object","title":"object[ ]","text":"<ul> <li>JS\uc758 array\ub098 C\uc758 void* []\ucc98\ub7fc element \uac01\uac01\uc758 \ud0c0\uc785\uc774 \ub2e4\ub978 array</li> <li>.Net\uc5d0\uc11c System.Object\uac00 \ubaa8\ub4e0 \ud0c0\uc785\uc758 base class\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0dd\uc131 \uac00\ub2a5</li> </ul>"},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/#multidimentional-array","title":"multidimentional array","text":"<ol> <li> <p>rectangular array (\uac01 \ubc30\uc5f4\uc758 \uc0ac\uc774\uc988\uac00 \uac19\uc740 \uacbd\uc6b0)   <pre><code>int[,] matrix;\nmatrix = new int[3,4];\n    for(int i = 0; i &lt; 3; i++) { \n        for(int j = 0; j &lt; 4; j++) {\n            matrix[i, j] = i * j;\n        }\n    }\n}\n</code></pre></p> </li> <li> <p>jagged array (\uac00\uc7a5 \ubc14\uae65\uc744 \uc81c\uc678\ud55c \uac01 \ubc30\uc5f4\uc758 \uc0ac\uc774\uc988\uac00 \ub2e4\ub978 \uacbd\uc6b0)   <pre><code>int[][][] jaggedArray = new int[5][][];\n\nfor (int i = 0; i &lt; jaggedArray.Length; ++i) {\n  jaggedArray[i] = new int[i + 1][];\n  for (int j = 0; j &lt; jaggedArray[i].Length; ++j) {\n    jaggedArray[i][j] = new int [j + i + 1];\n  }\n}\n</code></pre></p> </li> </ol>"},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/#systemarray-method","title":"System.Array\uc758 method","text":"<ul> <li>Sort (static)    \uc0c8\ub85c\uc6b4 array\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\ub294 in-place sort   (custom type\uc740 IComparer interface \uad6c\ud604)</li> <li>Reverse    (static) \uc0c8\ub85c\uc6b4 array\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\uc74c   (non-static) \uc0c8\ub85c\uc6b4 array\ub97c \uc0dd\uc131</li> </ul>"},{"location":"c_sharp/2025.03.15_%EB%B0%B0%EC%97%B4/#range-operator","title":"range operator","text":"<ul> <li>.. operator\ub294 \uac12\uc744 \ubcf5\uc0ac\ud558\uc5ec sub-array\ub97c \uc0dd\uc131\ud55c\ub2e4      <pre><code>int[] arr = [1, 2 ,3, 4];\nRange r = ..3;\nvar subArr = arr[r];\narr[2] = 5;\n    //123\nforeach (int i in subArr) {\n  Console.Write(i);\n}\n    //1254\n    Console.WriteLine();\nforeach (int i in arr) {\n  Console.Write(i);\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/","title":"2025.03.17 \ubc30\uc5f4,\ud568\uc218,enum,struct","text":""},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#_1","title":"\ubc30\uc5f4","text":"<ul> <li>array instance\uac00 \uc0dd\uc131\ub41c \uc774\ud6c4\uc5d0 rank\ub294 constant\ub85c \uc874\uc7ac\ud55c\ub2e4    (resize \ubd88\uac00\ub2a5)   </li> <li>array covariance \ub54c\ubb38\uc5d0 reference type\uc758 array\ub294 element\ub85c\uc11c \ud560\ub2f9\ub420 \uc218 \uc788\ub294\uc9c0 runtime\uc5d0 \uccb4\ud06c\uac00 \uc2e4\ud589\ub428  <pre><code>    static void Fill(object[] array, int index, int count, object value) \n    {\n            for (int i = index; i &lt; index + count; i++)\n            {\n                    array[i] = value;\n            }\n    }\n\n    static void Main() \n    {\n            string[] strings = new string[100];\n            Fill(strings, 0, 100, \"Undefined\");\n            //ArrayTypeMismatchException exception\n            Fill(strings, 0, 10, null);\n            Fill(strings, 90, 10, 0);\n    }\n</code></pre></li> <li>Rank\ub97c \uc774\uc6a9\ud558\uba74 multi-dimension array\uc758 element \uac1c\uc218\ub97c \uad6c\ud560 \uc218 \uc788\ub2e4  <pre><code>    int[,,] array3D = new int[4, 2, 3];\n    var total = 1;\n    for (int i = 0; i &lt; array3D.Rank; i++)\n    {\n        total *= array3D.GetLength(i);\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#_2","title":"\ud568\uc218","text":"<ul> <li>ArgumentNullException  <pre><code>    void Method(string arg) {\n        if (arg == null)\n            throw new  ArgumentNullException(\"arg\");    \n    }\n    static void Method(string arg) {\n    ArgumentNullException.ThrowIfNull(arg);\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#enum","title":"enum","text":"<ul> <li>Flags    \ud55c enum \ud0c0\uc785\uc758 \uc5ec\ub7ec \uac12\uc744 \uacb0\ud569\ud574 bit-field\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4  <pre><code>    [Flags]\n    public enum ContactEnum { \u00a0\u00a0\u00a0\u00a0\n        None = 1,\n        Email = 2, \u00a0\u00a0\u00a0\u00a0\n        Phone = 4,\n    }\n    ContactEnum emailAndPhone = ContactEnum.Email | ContactEnum.Phone;\n    if ((emailAndPhone | ContactEnum.None) == emailAndPhone) {\n    //None\n    }\n    if ((emailAndPhone | ContactEnum.Email) == emailAndPhone) {\n    //Email\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#struct","title":"struct","text":"<ul> <li>reference type\uc744 property\ub85c \uac00\uc9c0\uace0 \uc788\ub294 struct\uc758 \ubcf5\uc0ac\uc5d0 \uc720\uc758    ICloneable interface \uc5c6\uc774 =\uc744 \uc0ac\uc6a9\ud558\uba74 shallow copy   </li> <li>memberwise initializer    swift\ucc98\ub7fc \ub530\ub85c constructor\ub97c \uad6c\ud604 \uc548\ud574\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5   </li> <li>readonly method          method\uac00 struct\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uc758\ubbf8          C++\uc758 const method, swift\uc758 mutating\uc774 \uc544\ub2cc struct\uc758 function  <pre><code>  struct Point {\n    public int X;\n    public int Y;\n        public readonly string Name;\n        readonly public void Display() {\n      Console.WriteLine($\"{this.Name} ({this.X}, {this.Y})\");\n    }\n  }\n    Point p = new Point {X = 1, Y = 1, Name = \"My Point\"};\n</code></pre></li> <li>readonly struct    \ucd5c\uc801\ud654 \uac00\ub2a5  <pre><code>    readonly struct ReadOnlyPoint {\n    public int X { get; }\n    public int Y { get; }\n    public ReadOnlyPoint(int x, int y) {\n      this.X = x;\n      this.Y = y;\n    }\n  }\n  ReadOnlyPoint p = new ReadOnlyPoint(1, 1);\n</code></pre></li> <li>ref struct (stack allocated struct)  <ul> <li>\uae30\ubcf8\uc801\uc73c\ub85c struct\ub294 stack \ub610\ub294 heap\uc5d0 \ud560\ub2f9\ub41c\ub2e4 (implementation detail)      </li> <li>\ub2e4\uc74c\uacfc \uac19\uc740 \uc81c\ud55c\uc774 \uc788\ub2e4    </li> <li>object, dynamic, interface \ud0c0\uc785\uc73c\ub85c \uc0ac\uc6a9 \ubd88\uac00</li> <li>interface \uad6c\ud604 \ubd88\uac00</li> <li>non-ref struct\uc758 property\ub85c \uc0ac\uc6a9 \ubd88\uac00</li> <li>async, iterators, lambda, local function\uacfc \uac19\uc774 \uc0ac\uc6a9 \ubd88\uac00</li> <li>ref struct\uc758 Dispose    ref struct\ub294 IDisposable\uc744 \uad6c\ud604\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ud544\uc694 <pre><code>    ref struct PointWithRef {\n    public int X;\n    public int Y;\n\n    public void Dispose() {\n      // clean up resources\n    }\n    }\n    using ( PointWithRef p = new PointWithRef()) {\n        // using ref struct here\n    }\n</code></pre></li> </ul> </li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#_3","title":"\uad81\uae08\ud55c\uc810","text":"<ul> <li>C#\uc5d0\uc11c struct\ub294 value type\uc774\uace0 swift\uc5d0\uc11c\ub3c4 value type\uc774\ub2e4    swift\uc5d0\uc11c\ub294 struct\uac00 mutate\ub418\uae30 \uc804\uc5d0\ub294 pass-by reference\ub85c \ub3d9\uc791\ud55c\ub2e4    C#\uc5d0\ub3c4 readonly Method\uac00 \uc788\ub294\ub370 \uadf8\ub7ec\ud55c \ucd5c\uc801\ud654\uac00 \uc874\uc7ac\ud558\ub294\uc9c0?    \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ubaa8\ub4e0 struct\ub97c ref variable\ub85c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294\uac74\uc9c0?</li> </ul>"},{"location":"c_sharp/2025.03.17_%EB%B0%B0%EC%97%B4%2C%ED%95%A8%EC%88%98%2Cenum%2Cstruct/#_4","title":"\ub354 \uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>ANTLR tutorial stack value type conversion array covariance </p>"},{"location":"c_sharp/2025.03.18_%EC%BD%98%EC%86%94%EA%B2%8C%EC%9E%84/","title":"2025.03.18 \ucf58\uc194\uac8c\uc784","text":"<ul> <li>\ud14d\uc2a4\ud2b8\uac00 \ub0b4\ub824\uc624\ub294 \uc560\ub2c8\uba54\uc774\uc158 \ud6a8\uacfc\ub97c \ub123\uc5b4 \ubcf4\uae30    System.Threading.Thread.Sleep() \uc0ac\uc6a9\ud574\uc11c \uc7a0\uc2dc \uba48\ucd94\uace0 \ub2e4\uc74c \ud14d\uc2a4\ud2b8 \ucd9c\ub825  <pre><code>    int FrameTime = 30; \n    string emptyLines = \"\";\n    string startText = \"hello world\";\n    for (int i = 0; i &lt; 20; ++i) {\n        System.Threading.Thread.Sleep(FrameTime);\n        Console.Clear();\n        emptyLines += Environment.NewLine;\n        Console.Write(emptyLines);\n        Console.WriteLine(startText);\n    }\n</code></pre></li> <li>Braille Pattern\uc744 \uc0ac\uc6a9\ud574\uc11c \ub354 \ub192\uc740 \ud574\uc0c1\ub3c4\ub85c \ud45c\ud604\ud558\uae30</li> </ul>"},{"location":"c_sharp/2025.03.18_%EC%BD%98%EC%86%94%EA%B2%8C%EC%9E%84/#_1","title":"\ud574\uacb0\ub418\uc9c0 \uc54a\uc740 \ubd80\ubd84","text":"<ul> <li>Console.ReadKey() \ub610\ub294 Console.ReadLine()\uc744 \uc0ac\uc6a9\ud558\uba74 block \ub418\uae30 \ub54c\ubb38\uc5d0 \uac8c\uc784\uc774 \uba48\ucd94\uac8c \ub418\ub294\ub370 \ube44\ub3d9\uae30\ub85c \uc785\ub825\uc744 \ubc1b\uc544 \uc62c \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \uc5c6\uc744\uae4c    <p>Braille Patterns</p> </li> </ul>"},{"location":"c_sharp/2025.03.19_%EC%BD%98%EC%86%94%EA%B2%8C%EC%9E%84/","title":"2025.03.19 \ucf58\uc194\uac8c\uc784","text":""},{"location":"c_sharp/2025.03.19_%EC%BD%98%EC%86%94%EA%B2%8C%EC%9E%84/#_1","title":"\ud3ec\ubb3c\uc120","text":"<ul> <li>\uc0ac\uc6a9\uc790\ub97c \ub9de\ucd94\uae30 \uc704\ud574\uc11c \ud3ec\ubb3c\uc120\uc73c\ub85c \ud0c4\ud658\uc744 \ubc1c\uc0ac\ud560 \ucd08\uae30 \uc18d\ub825\uc744 \uad6c\ud558\uae30</li> <li>\ubc1c\uc0ac\ubd80\ud130 \ub545\uc5d0 \ub5a8\uc5b4\uc9c8 \ub54c\uae4c\uc9c0 \uc791\uc6a9\ud558\ub294 \ud798\uc740 \uc911\ub825\uc774 \uc720\uc77c\ud558\ub2e4</li> <li>\uc218\ud3c9 \ubc29\ud5a5\uc73c\ub85c\ub294 \uc77c\uc815\ud55c \uc18d\ub3c4\ub85c, \uc218\uc9c1 \ubc29\ud5a5\uc73c\ub85c\ub294 \uc77c\uc815\ud55c \uac00\uc18d\ub3c4\ub85c \uc6c0\uc9c1\uc778\ub2e4</li> <li>\ub545\uc5d0 \ub5a8\uc5b4\uc9c0\ub294 \uc0c1\ud669\uc744 \uac00\uc815\ud560\ub54c \uc218\ud3c9 \ubc29\ud5a5\uc758 \uac70\ub9ac\ub294 0\uc774 \ub41c\ub2e4     \ucd08\uae30 \uc704\uce58 h = 0, \ucd08\uae30 \uc18d\ub825 v<sub>0</sub>, \uac01\ub3c4 A\ub85c \ubb3c\uccb4\ub97c \ub358\uc9c8 \ub54c      \uc911\ub825\uac00\uc18d\ub3c4\ub97c g, \ucd1d \uc774\ub3d9\uc2dc\uac04\uc744 t\ub77c\uace0 \ud558\uba74     \uc218\ud3c9 \uc18d\ub825 v<sub>x</sub> = v<sub>0</sub>cosA      \uc218\uc9c1 \uc18d\ub825 V<sub>y</sub> = v<sub>0</sub>sinA      \uc218\ud3c9 \uc774\ub3d9\uac70\ub9ac d<sub>x</sub> = v<sub>x</sub>t      t = d<sub>x</sub> / v<sub>x</sub>      \uc218\uc9c1 \uc774\ub3d9\uac70\ub9ac d<sub>y</sub> = h + v<sub>y</sub>t - (1 / 2) * gt<sup>2</sup>  : h = 0      \uc5ec\uae30\uc5d0 t\ub97c \ub300\uc785\ud558\uba74      d<sub>y</sub> = d<sub>x</sub>(v<sub>y</sub> / v<sub>x</sub>) - (1 / 2) * g(x / (v<sub>0</sub>cosA))<sup>2</sup>     = d<sub>x</sub>tanA - (gd<sub>x</sub><sup>2</sup> / (2v<sub>0</sub><sup>2</sup>cos<sup>2</sup>A))   </li> <li>\ub9cc\uc57d A\uc758 \uac01\ub3c4\ub85c k\ub9cc\ud07c \ub5a8\uc5b4\uc9c4 \ubb3c\uccb4\ub97c \ud5a5\ud574 \ub358\uc9c8 \ub54c \uc18d\ub825 v\ub97c \uad6c\ud558\ub824 \ud55c\ub2e4\uba74 (\uc544\uc9c1 \ucf54\ub4dc\ub85c \ubbf8\uad6c\ud604)    v = (gk<sup>2</sup> / (2 * kcos<sup>2</sup>AtanA))<sup>0.5</sup> </li> </ul>"},{"location":"c_sharp/2025.03.19_%EC%BD%98%EC%86%94%EA%B2%8C%EC%9E%84/#_2","title":"\ud574\uacb0\ub418\uc9c0 \uc54a\uc740 \ubd80\ubd84","text":"<ul> <li>\uc0ac\uc6a9\uc790\uac00 \uc0c1\ub300\ud558\ub294 \uc801\uc758 \ud589\ub3d9 \ud328\ud134\uc740 \uc5b4\ub5a4 \uac83\uc744 \uae30\uc900\uc73c\ub85c \ud574\uc57c \ud558\ub294\uc9c0   \uc0ac\uc6a9\uc790\uc758 \ud589\ub3d9\uc744 \ubaa8\ubc29\ud574\uc57c \ud558\ub294\uc9c0 \uc544\ub2c8\uba74 \ucef4\ud4e8\ud130\uc758 \uacc4\uc0b0\uc744 \ud1b5\ud574 \uacb0\uc815\ud574\uc57c \ud558\ub294\uc9c0 \ub79c\ub364\uc131\uc744 \ubd80\uc5ec\ud574\uc57c \ud558\ub294\uc9c0</li> </ul>"},{"location":"c_sharp/2025.03.21_test%EC%BD%94%EB%93%9C/","title":"2025.03.21 test\ucf54\ub4dc","text":""},{"location":"c_sharp/2025.03.21_test%EC%BD%94%EB%93%9C/#_1","title":"\uc2ec\ud654 \uacf5\ud1b5","text":"<pre><code>class Program {\n\n  public static int FindKeyIndex(in string text, char key) {\n    for (int i = 0; i &lt; text.Length; ++i) {\n      if (text[i] == key)\n        return (i);\n    }\n    return (-1);\n  }\n\n  public static bool IsPrime(int number) {\n    if (number &lt; 2)\n      return (false);\n    for (int i = 2; i &lt; number; ++i) {\n      if (number % i == 0)\n        return (false);\n    }\n    return (true);\n  }\n\n  public static int SumOfDigits(int number) {\n    int sum = 0;\n    bool isNegative = number &lt; 0;\n\n    while (number != 0) {\n      sum += number % 10 * (isNegative ? -1: 1);\n      number /= 10;\n    } \n    return (sum);\n  }\n\n  public static int[] FindCommonItems(int[] array1, int[] array2) {\n    int[] smaller = array1.Length &gt; array2.Length ? array2: array1;\n    int[] bigger = array1.Length &gt; array2.Length ? array1: array2;\n    int?[] found = new int?[smaller.Length];\n    int nextIndex = 0;\n    for (int i = 0; i &lt; smaller.Length; ++i) {\n      int target = smaller[i];\n      if (Array.IndexOf(found, target) != -1) {\n        continue;\n      }\n      if (Array.IndexOf(bigger, target) != -1) {\n        found[nextIndex++] = target;\n      }\n    }\n    if (nextIndex &lt; 1)\n      return (new int[0]);\n    int[] answer = new int[nextIndex];\n    for (int i = 0; i &lt; answer.Length; ++i) {\n      answer[i] = found[i].Value;\n    }\n    return (answer);\n  }\n\n  public static int FindClosestNumber(int[] array, int number) {\n    int closest = array[0];\n    int minimumDiff = number &gt; closest ? number - closest: closest - number;\n    for (int i = 1; i &lt; array.Length; ++i) {\n      int diff = number &gt; array[i] ? number - array[i]: array[i] - number;\n      if (diff &lt; minimumDiff) {\n        minimumDiff = diff;\n        closest = array[i];\n      }\n    }\n    return (closest);\n  }\n\n  public static int FindModeNumber(int[] array) {\n    int answer = array[0];\n    int biggestCount = 1;\n    int?[] counts = new int?[array.Length];\n    for (int i = 0; i &lt; array.Length; ++i) {\n      int target = array[i];\n      int index = Array.IndexOf(array, target);\n      if (index != i)\n        continue;\n      int count = Array.FindAll(array, i =&gt; i == target).Length;\n      counts[i] = count;\n      if ((count &gt; biggestCount) || \n         (count == biggestCount &amp;&amp; array[i] &lt; answer)) {\n        answer = array[i];\n        biggestCount = count;\n      }\n    }\n    return (answer);\n  }\n}\n</code></pre>"},{"location":"c_sharp/2025.03.21_test%EC%BD%94%EB%93%9C/#_2","title":"\uc22b\uc790 \uc57c\uad6c","text":"<pre><code>class BaseBall {\n\n  static public void Play() {\n    Random random = new Random();\n    int[] answer = new int[4];\n    for (int i = 0; i &lt; answer.Length; ++i) {\n      int num;\n      do {\n        num = random.Next(1, 10);\n      } while (Array.IndexOf(answer, num) != -1);\n      answer[i] = num;\n    }\n    int chance = 1;\n\n    PrintIntro();\n    while (chance &lt;= 10) {\n      PrintChanceNumber(chance);\n      int[] input = GetUserInput();\n      GuessResult result = GetResult(input, answer);\n      PrintResult(result); \n      if (result.Strike == 4)\n        return ;\n      chance += 1;\n    }\n    PrintAnswer(answer);\n  }\n\n  struct GuessResult {\n    public int Strike;\n    public int Ball;\n  }\n\n  static void PrintIntro() {\n    const int width = 40;\n    string line = new string('*', width);\n    string text = \" \uc22b\uc790 \uc57c\uad6c \";\n\n    Console.WriteLine(line);\n    Console.Write(new string('*', width / 2 - text.Length + 1));\n    Console.Write(text);\n    Console.WriteLine(new string('*', width / 2 - text.Length + 2));\n    Console.WriteLine(line);\n  }\n\n  static void PrintChanceNumber(int n) {\n    string line = new string('=', 13);\n    string text = string.Format($\" {n} \ubc88\uc9f8 \uae30\ud68c \");\n    Console.Write(line);\n    Console.Write(text);\n    Console.WriteLine(line);\n  }\n\n  static int[] GetUserInput() {\n\n    bool isValid = false;\n    int[] digits = [];\n    while (!isValid) {\n      Console.Write(\"\uc22b\uc790\ub97c \uc785\ub825\ud558\uc138\uc694 : \");\n      string input = Console.ReadLine();\n      if (input == null)\n        continue;\n      bool isParsed = int.TryParse(input, out int userInputNumber);\n      if (!isParsed || userInputNumber &lt; 1000 || userInputNumber &gt; 9999)\n        continue;\n      input = input.Trim();\n      digits = new int[4];\n      for (int i = 0; i &lt; digits.Length; ++i) {\n        int digit = input[i] - '0';\n        if (digit == 0) \n          break;\n        if (Array.IndexOf(digits, digit) != -1)\n          break;\n        digits[i] = digit;\n        if (i == digits.Length - 1) {\n          isValid = true;\n        }\n      }\n    }\n    return (digits);\n  }\n\n  static GuessResult GetResult(in int[] input, in int[] answer) {\n    GuessResult result = new GuessResult();\n    for (int i = 0; i &lt; input.Length; ++i) {\n      if (answer[i] == input[i]) \n        result.Strike += 1;\n      else if (Array.IndexOf(answer, input[i]) != -1)\n        result.Ball += 1;\n    }\n\n    return (result);\n  }\n\n  static void PrintResult(in GuessResult result) {\n    if (result.Strike == 4) \n      Console.WriteLine(\"Home Run!\");\n    else if (result.Strike == 0 &amp;&amp; result.Ball == 0) \n      Console.WriteLine(\"Out!\");\n    else {\n      Console.WriteLine($\"Strike : {result.Strike}\\tBall : {result.Ball}\");\n    }\n  }\n\n  static void PrintAnswer(in int[] answer) {\n    Console.Write(\"Game Over\\nAnswer: \");\n    for (int i = 0; i &lt; answer.Length; i++)\n    {\n      Console.Write($\"{answer[i]}\");\n    }\n    Console.WriteLine();\n  }\n}\n</code></pre>"},{"location":"c_sharp/2025.03.21_test%EC%BD%94%EB%93%9C/#_3","title":"\uc544\uc774\ud15c \uc0c1\uc810","text":"<pre><code>class ItemStore {\n\n  static public void Play() {\n    Character user = new Character(10_000);\n\n    PrintIntro();\n    while (true) {\n      PrintMenu();\n      MenuOption menu = SelectMenu(); \n      Console.WriteLine();\n      switch (menu)\n      {\n        case MenuOption.BuyItem:\n          EnterPurchaseItem(ref user);\n          break;\n        case MenuOption.SellItem:\n          EnterSellItem(ref user);\n          break;\n        case MenuOption.ViewItem:\n          EnterViewItem(user);\n          break;\n          default:\n            break;\n      }\n      Console.WriteLine();\n    }\n  }\n\n  static void EnterViewItem(in Character character) {\n    PrintViewIntro(character);\n    foreach (Stat stat in Enum.GetValues(typeof(Stat))) {\n      PrintCharacterStat(stat, character);\n    }\n    Console.WriteLine();\n    PrintInventoryItems(character.Inventory);\n  }\n\n  static void PrintViewIntro(in Character character) {\n    PrintMenuTitle(\"\uc544\uc774\ud15c \ud655\uc778\");\n    Console.WriteLine(\n        $\"\ud50c\ub808\uc774\uc5b4 {\"\uace8\ub4dc\".PadLeft(5)} \ubcf4\uc720\ub7c9 : {character.Gold:n0}G\"\n        );\n  }\n\n  static void PrintCharacterStat(Stat stat, in Character character) {\n    int amount = character.Stats[(int)stat];\n    Console.WriteLine(\n        $\"\ud50c\ub808\uc774\uc5b4 {GetStatLebel(stat).PadLeft(5)} \uc0c1\uc2b9\ub7c9 : {amount}\"\n        );\n  }\n\n  static void EnterSellItem(ref Character character) {\n    if (CheckInventoryEmpty(character))\n      return ;\n    PrintSellIntro();\n    PrintInventoryItems(character.Inventory);\n    int? number = SelectItemNumberToSell(character.Inventory);\n    if (number == null)\n      return ;\n    Item item = UnEquipItemAt(ref character, number.Value);\n    character.Gold += item.Price;\n    PrintSellItemResult(item, character);\n  }\n\n  static bool CheckInventoryEmpty(in Character character) {\n    int itemCount = CountItem(character.Inventory);\n    if (itemCount == 0) {\n      Console.WriteLine(\"\uc778\ubca4\ud1a0\ub9ac\uc5d0 \uc544\uc774\ud15c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\");\n      return (true);\n    }\n    return (false);\n  }\n\n  static void PrintSellIntro() {\n    PrintMenuTitle(\"\uc544\uc774\ud15c \ud310\ub9e4\");\n    Console.WriteLine();\n  }\n\n  static void PrintInventoryItems(in Item?[] inventory) {\n    int itemNumber = 1;\n    for (int i = 0; i &lt; inventory.Length; ++i) {\n      if (inventory[i] == null)\n        continue;\n      Console.WriteLine($\"{itemNumber++}. {inventory[i].Value.Name}\");\n      PrintItemInfo(inventory[i].Value); \n    }\n  }\n\n  static int? SelectItemNumberToSell(in Item?[] inventory) {\n    int itemCount = CountItem(inventory);\n    while (true) {\n      Console.Write(\"\ud310\ub9e4\ud560 \uc544\uc774\ud15c\uc744 \uc120\ud0dd\ud558\uc138\uc694 (\ucde8\uc18c 0) : \");\n      int? inputNumber = GetUserInputNumber(0, itemCount);\n      if (inputNumber == null)\n        continue;\n      if (inputNumber == 0)\n        return (null);\n      return (inputNumber.Value);\n    }\n  }\n\n  static Item UnEquipItemAt(ref Character character, int number) {\n\n    int inventoryIndex = GetInventoryIndex(number, character.Inventory);\n\n    Item item = character.Inventory[inventoryIndex].Value;\n    RemoveItemEffect(item, ref character);\n    character.Inventory[inventoryIndex] = null;\n    return (item);\n  }\n\n  static int GetInventoryIndex(int number, in Item?[] inventory) {\n    int current = 1;\n    for (int i = 0; i &lt; inventory.Length; ++i) {\n      if (inventory[i] == null) \n        continue;\n      if (number == current)\n        return (i);\n      current += 1;\n    }\n    return (-1);\n  }\n\n  static void RemoveItemEffect(in Item item, ref Character character) {\n    foreach (ItemEffect effect in item.Effects) {\n      character.Stats[(int)effect.Stat] -= effect.Amount;\n    }\n  }\n\n  static void PrintSellItemResult(in Item item, in Character character) {\n\n    Console.WriteLine($\"{item.Name}\uc744 \ud310\ub9e4\ud569\ub2c8\ub2e4.\");\n\n    foreach (ItemEffect effect in item.Effects) {\n      PrintStatChange(\n          effect.Stat, \n          -1 * effect.Amount, \n          character.Stats[(int)effect.Stat]\n          );\n    }\n    Console.WriteLine($\"\ubcf4\uc720\ud55c \uace8\ub4dc\uac00 {item.Price} \uc99d\uac00\ud558\uc5ec {character.Gold:n0}G\uac00 \ub429\ub2c8\ub2e4\");\n  }\n\n  static void EnterPurchaseItem(ref Character character) {\n\n    if (CheckInventoryFull(character))\n      return ;\n    PrintBuyIntro(character.Gold);\n    PrintSellerItem();\n    Item? item = SelectItemToBuy();\n    if (item == null)\n      return ;\n    DeductItemPrice(item.Value, ref character);\n    EquipItem(ref character, item.Value);\n    PrintPurchaseResult(character, item.Value);\n    return ;\n  }\n\n  static bool CheckInventoryFull(in Character character) {\n    int itemCount = CountItem(character.Inventory);\n    if (itemCount == character.Inventory.Length) {\n      Console.WriteLine(\"\uc778\ubca4\ud1a0\ub9ac\uac00 \uac00\ub4dd \ucc3c\uc2b5\ub2c8\ub2e4\");\n      return (true);\n    }\n    return (false);\n  }\n\n  static void PrintSellerItem() {\n    for (int i = 0; i &lt; SellerInventory.Length; ++i) {\n      Console.WriteLine($\"{i + 1}. {SellerInventory[i].Name}\");\n      PrintItemInfo(SellerInventory[i]);\n      Console.WriteLine();\n    }\n  }\n\n  static Item? SelectItemToBuy() {\n    while (true)\n    {\n      Console.Write(\"\uad6c\ub9e4\ud560 \uc544\uc774\ud15c\uc744 \uc120\ud0dd\ud558\uc138\uc694 (\ucde8\uc18c 0) : \"); \n      int? inputNumber = GetUserInputNumber(0, SellerInventory.Length);\n      if (inputNumber == null)\n        continue;\n      if (inputNumber == 0)\n        return (null);\n      int sellerIndex = inputNumber.Value - 1;\n      return (SellerInventory[sellerIndex]);\n    }\n  }\n\n  static bool DeductItemPrice(in Item item, ref Character character) {\n\n    int price = item.Price;\n    if (character.Gold &lt; price) {\n      Console.WriteLine(\"\uace8\ub4dc\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4\");\n      return (false);\n    }\n    character.Gold -= price; \n    return (true);\n  }\n\n  static void EquipItem(ref Character character, in Item item) {\n    int userIndex = GetEmptyIndex(character.Inventory);\n    character.Inventory[userIndex] = item;\n    ApplyItemEffect(ref character, item);\n  }\n\n  static void ApplyItemEffect(ref Character character, in Item item) {\n    foreach (ItemEffect effect in item.Effects) {\n       character.Stats[(int)effect.Stat] += effect.Amount;\n    }\n  }\n\n  static void PrintPurchaseResult(in Character character, in Item item) {\n    Console.WriteLine($\"{item.Name}(\uc744/\ub97c) \uad6c\ub9e4\ud569\ub2c8\ub2e4.\");\n    foreach (ItemEffect effect in item.Effects) {\n      PrintStatChange(effect.Stat, effect.Amount, character.Stats[(int)effect.Stat]);\n    }\n    Console.WriteLine($\"\ubcf4\uc720\ud55c \uace8\ub4dc\uac00 {item.Price} \uac10\uc18c\ud558\uc5ec {character.Gold:n0}G\uac00 \ub429\ub2c8\ub2e4\");\n  }\n\n  static void PrintStatChange(Stat stat, int amount, int statResult) {\n    const string prefix = \"\ud50c\ub808\uc774\uc5b4\uc758\";\n    string statText = GetStatLebel(stat) + \"(\uc774/\uac00)\";\n    string transitionText = GetTransitionText(amount);\n    Console.WriteLine(\n        prefix + \" \" + statText + \" \" + Math.Abs(amount) + \" \"\n        + transitionText + \"\ud558\uc5ec \"\n          + statResult + \"\uc774 \ub429\ub2c8\ub2e4\"\n          );\n  }\n\n  static int GetEmptyIndex(in Item?[] inventory) {\n    for (int i = 0; i &lt; inventory.Length; ++i) {\n      if (inventory[i] == null)\n        return (i);\n    }\n    return (-1);\n  }\n\n  static void PrintBuyIntro(int gold) {\n\n    PrintMenuTitle(\"\uc544\uc774\ud15c \uad6c\ub9e4\"); \n    Console.WriteLine($\"\ubcf4\uc720\ud55c \uace8\ub4dc: {gold:n0}G\");\n    Console.WriteLine();\n  }\n\n  static int CountItem(in Item?[] inventory) {\n    int count = 0;\n    for (int i = 0; i &lt; inventory.Length; ++i) {\n      if (inventory[i] != null)\n        count += 1;\n    }\n    return (count);\n  }\n\n  static void PrintIntro() {\n    const int width = 40;\n    string line = new string('*', width);\n    string text = \" \uc544\uc774\ud15c \uc0c1\uc810 \";\n\n    Console.WriteLine(line);\n    Console.Write(new string('*', width / 2 - text.Length + 1));\n    Console.Write(text);\n    Console.WriteLine(new string('*', width / 2 - text.Length + 2));\n    Console.WriteLine(line);\n  }\n\n  static void PrintMenu() {\n    string line = new string('=', 15);\n    MenuOption[] options = [MenuOption.BuyItem, MenuOption.SellItem, MenuOption.ViewItem];\n    PrintMenuTitle(\"\uc0c1\uc810 \uba54\ub274\");\n    for (int i = 0; i &lt; options.Length; i++) {\n      Console.WriteLine($\"{i + 1}. {GetMenuLabel(options[i])}\");\n    }\n  }\n\n  static void PrintMenuTitle(in string title) {\n\n    string line = new string('=', 15);\n    Console.WriteLine(line + \" \" + title + \" \" + line);\n  }\n\n  static MenuOption SelectMenu() {\n    int totalMenu = Enum.GetValues(typeof(MenuOption)).Length;\n    while (true) {\n      Console.Write(\"\uba54\ub274\ub97c \uc120\ud0dd\ud558\uc138\uc694 : \");\n      int? inputNumber = GetUserInputNumber(1, totalMenu);\n      if (inputNumber == null)\n        continue;\n      return ((MenuOption)(inputNumber - 1));\n    }\n  }\n\n  static int? GetUserInputNumber(int min, int max) {\n    string userInput = Console.ReadLine();\n    if (userInput == null)\n      return null;\n    if (!int.TryParse(userInput, out int inputNumber))\n      return null;\n    if (inputNumber &lt; min || inputNumber &gt; max) \n      return null;\n    return (inputNumber);\n  }\n\n  struct Item {\n    public readonly string Name;\n    public readonly string Description;\n    public int Price;\n    public ItemEffect[] Effects;\n\n    public Item(in string name, in string description, int price, in ItemEffect[]? effects = null) {\n      this.Name = name;\n      this.Description = description;\n      this.Price = price;\n      if (effects != null)\n        this.Effects = (ItemEffect[])effects.Clone();\n      else \n        this.Effects = new ItemEffect[0];\n    }\n  }\n\n  struct ItemEffect {\n    public readonly Stat Stat;\n    public readonly int Amount;\n\n    public ItemEffect(Stat stat, int amount) {\n      this.Stat = stat;\n      this.Amount = amount;\n    }\n  }\n\n  enum Stat {\n    AttackDamage,\n    DefencePower,\n    SpritualPower\n  }\n\n  struct Character {\n    public int[] Stats;\n    public int Gold;\n    public Item?[] Inventory;\n\n\n    public Character(int gold) {\n      this.Stats = new int[Enum.GetValues(typeof(Stat)).Length];\n      this.Gold = gold;\n      this.Inventory = new Item?[6];\n    }\n  }\n\n  enum MenuOption {\n    BuyItem,\n    SellItem,\n    ViewItem\n  }\n\n  static string GetMenuLabel(MenuOption menu) {\n    switch (menu)\n    {\n      case MenuOption.BuyItem:\n        return (\"\uc544\uc774\ud15c \uad6c\ub9e4\");\n      case MenuOption.SellItem:\n        return (\"\uc544\uc774\ud15c \ud310\ub9e4\");\n      case MenuOption.ViewItem:\n        return (\"\uc544\uc774\ud15c \ud655\uc778\");\n      default:\n        return (\"\");\n    }\n  }\n\n  static void PrintItemInfo(in Item item) {\n    const int paddingLeft = 10;\n    string padding = new string(' ', paddingLeft);\n    string priceText = string.Format($\"\uac00\uaca9 : {item.Price}\");\n    string descriptionText = string.Format($\"\uc124\uba85 : {item.Description}\");\n    Console.WriteLine(padding + priceText);\n    Console.WriteLine(padding + descriptionText);\n    for (int i = 0; i &lt; item.Effects.Length; ++i) {\n      Console.WriteLine(padding + GetEffectText(item.Effects[i]));\n    }\n  }\n\n  static string GetEffectText(in ItemEffect effect) {\n    return (GetStatLebel(effect.Stat) + \" \" \n        + GetTransitionText(effect.Amount) + \" : \" \n        + effect.Amount);\n  }\n\n  static string GetStatLebel(in Stat stat) {\n    return (stat switch {\n        Stat.AttackDamage =&gt; \"\uacf5\uaca9\ub825\",\n        Stat.DefencePower =&gt; \"\ubc29\uc5b4\ub825\",\n        Stat.SpritualPower =&gt; \"\uc815\uc2e0\ub825\",\n        _ =&gt; \"\"\n    });\n  }\n\n  static string GetTransitionText(int amount) {\n    if (amount &lt; 0)\n      return (\"\uac10\uc18c\");\n    return (\"\uc0c1\uc2b9\");\n  }\n\n  static Item[] SellerInventory = [\n      new Item(\n          \"\ub3c4\ub8e8\ucf54 \ub300\uac70\",\n          \"\uc0c1\uc810: \uc554\ud5c8\uc2a4\ud2b8, \uc804\uc9c1\uc5c5 \ucc29\uc6a9\uac00\ub2a5\",\n          250,\n          [ new ItemEffect(Stat.AttackDamage, 20)]\n          ),\n      new Item(\n          \"\ud6c4\ub8e8\uce20 \ub300\uac70\",\n          \"\uc0c1\uc810: \ub9ac\uc2a4\ud56d\uad6c, \uc804\uc9c1\uc5c5 \ucc29\uc6a9\uac00\ub2a5\",\n          500,\n          [ new ItemEffect(Stat.AttackDamage, 20)]\n          ),\n      new Item(\n          \"\ub178\ub780\uc0c9 \uba38\ub9ac\ub760\",\n          \"\uc0c1\uc810: \ub9ac\uc2a4\ud56d\uad6c\",\n          225,\n          [ new ItemEffect(Stat.DefencePower, 5)]\n          ),\n      new Item(\n          \"\ube68\uac04\uc0c9 \uba38\ub9ac\ub760\",\n          \"\uc0c1\uc810: \ub9ac\uc2a4\ud56d\uad6c, \uba85\uc904\ub960 + 1 (\uad6c\ud604 \uc548\ub428)\",\n          500,\n          [ new ItemEffect(Stat.DefencePower, 5)]\n          ),\n      new Item(\n          \"\ubd84\ud64d \ubcc4\ubb34\ub2ac \ud2f0\uc154\uce20\",\n          \"\uc0c1\uc810: \ub9ac\uc2a4\ud56d\uad6c\",\n          1500,\n          [ new ItemEffect(Stat.DefencePower, 11)]\n          ),\n      new Item(\n          \"\ud30c\ub780 \uce60\ubd80\ubc14\uc9c0\",\n          \"\uc0c1\uc810: \ub9ac\uc2a4\ud56d\uad6c, \ub4dc\ub78d: \ud30c\ub780 \ub2ec\ud33d\uc774\",\n          1400,\n          [ new ItemEffect(Stat.DefencePower, 5)]\n          ),\n      new Item(\n          \"\ub098\ubb34 \uc2a4\ud0dc\ud504\",\n          \"\uc0c1\uc810: \uc5d8\ub9ac\ub2c8\uc544, \ub4dc\ub78d: \ub2e4\ud06c \uc2a4\ud140\ud504\",\n          1400,\n          [ \n          new ItemEffect(Stat.AttackDamage, 20),\n          new ItemEffect(Stat.SpritualPower, 25)\n          ]\n          ),\n      new Item(\n          \"\uc0ac\ud30c\uc774\uc5b4 \uc2a4\ud0dc\ud504\",\n          \"\uc0c1\uc810: \uc5d8\ub9ac\ub2c8\uc544\",\n          3000,\n          [ \n          new ItemEffect(Stat.AttackDamage, 23),\n          new ItemEffect(Stat.SpritualPower, 30)\n          ]\n          ),\n\n    ];\n}\n</code></pre>"},{"location":"c_sharp/2025.03.22_tuple%2Cclass/","title":"2025.03.22 tuple,class","text":""},{"location":"c_sharp/2025.03.22_tuple%2Cclass/#tuple","title":"tuple","text":"<ul> <li>field\ub294 validate \ub418\uc9c0 \uc54a\ub294\ub2e4</li> <li>\uae30\ubcf8\uc801\uc73c\ub85c property\uc758 \uc774\ub984\uc740 Item1\ubd80\ud130 \uc2dc\uc791\ud55c\ub2e4  <pre><code>    (int, char) value1 = (1, 'a'); \n    value1.Item1 = 2;\n    value1.Item2 = 'b';\n    // custom named property\n    (int Number, char Character) value2 = (3, 'c');\n    value2.Number = 4;\n    // access Item2 \n    value2.Item2 = 'd'; \n</code></pre></li> <li>tuple \uac04\uc758 == \ube44\uad50\ub294 \uac01 property \uac04\uc758 implicit conversion\uc744 \ud3ec\ud568\ud55c\ub2e4    </li> <li>deconstruct   <pre><code>    (int, int) point = (1, 1);\n    (int x, int y) = point;\n</code></pre></li> <li>struct deconstruct  <pre><code>    struct Point {\n        int X;\n        in Y;\n        public (int x, int y) Deconstruct() =&gt; (this.X, this.Y);\n  }\n</code></pre></li> <li>implicit struct deconstruct     Deconstruct\ub97c \uad6c\ud604\ud558\uba74 \uc9c1\uc811 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\ub3c4 \uac00\ub2a5  <pre><code>    Point p2 = new Point(8,3);\n    (int xp2, int yp2) = p2;\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.22_tuple%2Cclass/#class","title":"class","text":""},{"location":"c_sharp/2025.03.22_tuple%2Cclass/#constructor","title":"constructor","text":"<ul> <li>constructor chaining    \uc5ec\ub7ec constructor\ub97c \ud558\ub098\uc758 constructor\ub85c forward   <pre><code>    class Motorcycle {\n        public int DrieverIntensity;\n        public string DriverName;\n\n        public Motorcycle(int intensity)\n            : this(intensity, \"\") {\n            // executed after master constructor\n            }\n        public Motorcycle(string name)\n            : this(0, name) {\n            // executed after master constructor\n            }\n\n        // master constructor\n        public Motorcycle(int intensity, string name) {\n            this.DriverIntensity = intensity;\n            this.DriverName = name;\n        }\n    }\n</code></pre></li> <li> <p>optional parameter constructor     \ud568\uc218\uc758 optional parameter \uc640 \ub3d9\uc77c  <pre><code>    class Motorcycle {\n        public int DriverIntensity;\n        public string DriverName;\n\n        public Motorcycle(int intensity = 0, strhing name = \"\") {\n            this.DriverIntensity = intensity;\n            this.DriverName = name;\n        }\n    }\n\n    Motorcycle motor = new Motorcycle(name: \"bart\");\n</code></pre></p> </li> <li> <p>static constructor    static property \ub97c runtime \uc5d0 \ud560\ub2f9     class instance\ub97c \ub9cc\ub4e4\uac70\ub098 class\uc758 static property, method\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 \uc2e4\ud589\ub428    parameter\ub97c \uc804\ub2ec\ud560 \uc218 \uc5c6\uace0 overload\ub97c \ud560 \uc218 \uc5c6\uc74c    runtime\uc5d0 \ud55c\ubc88\ub9cc \uc2e4\ud589\ub418\ub294 \uac83\uc774 \ubcf4\uc7a5\ub428  <pre><code>    class SavingAccounts {\n        public static double CurrentInterestRate;\n        public double CurrentBalance; \n        // object constructor\n        public SavingAccount(double balance) {\n            this.CurrentBalance = balance;\n        }\n        // static constructor\n        static SavingAccount() {\n            // connect database...\n            CurrentInterestRate = 0.05;\n        }\n    }\n</code></pre></p> </li> <li>static class     utility class, C++ \ub4f1\uc758 class\uac00 \uc5c6\ub294 namespace \uc640 \ube44\uc2b7\ud55c \uc5ed\ud560     instance\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\uace0, static property \uc640 static method \ub9cc\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc74c    </li> <li>using static    class\uc758 static member\ub97c class\ub97c \uc801\uc9c0 \uc54a\uace0 \uc0ac\uc6a9 \uac00\ub2a5  <pre><code>    using static System.Console;\n\n    WriteLine(\"Hello, world!\");\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.22_tuple%2Cclass/#oop","title":"OOP","text":"<ol> <li>encapsulation       class\uc758 implementation\uc744 \uc0ac\uc6a9\uc790\uc5d0\uac8c\uc11c \uc228\uae30\uace0, private data\ub4e4\uc744 \ubcf4\ud638\ud558\ub294 \uc5ed\ud560      </li> <li>inheritance     parent-child \uad00\uacc4\uc77c \ub54c\ub9cc inheritance\ub97c \uc0ac\uc6a9\ud55c\ub2e4 ( A is-a B \uad00\uacc4 )     \uc608\uc2dc: Truck is-a Car     has-a \uad00\uacc4\uc77c \ub54c\ub294 delegate\ub97c \uc0ac\uc6a9\ud55c\ub2e4     \uc608\uc2dc: Car has-a Radio   </li> <li>polymorphism     base class\uac00 derived class\ub4e4\uc744 \ub300\uc0c1\uc73c\ub85c \uad6c\ud604\ud55c interface \uac19\uc740 \uc5ed\ud560   </li> </ol>"},{"location":"c_sharp/2025.03.24_class%2Crecord/","title":"2025.03.24 class,record","text":""},{"location":"c_sharp/2025.03.24_class%2Crecord/#class","title":"class","text":""},{"location":"c_sharp/2025.03.24_class%2Crecord/#property","title":"property","text":"<ul> <li>private member\uc758 getter, setter \uc5ed\ud560\uc744 \ud55c\ub2e4, swift\uc640 \ub2e4\ub974\uac8c \ub530\ub85c private member\ub294 \ub530\ub85c \uc788\ub2e4 (automatic property \uc81c\uc678)   </li> <li>class \ub0b4\ubd80\uc5d0\uc11c\ub3c4 property\ub97c \uc801\uadf9\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560\uac83   </li> <li>expression-bodied members  <pre><code>    class Person {\n        private int _age;\n        public int Age {\n            get { return this._age; }\n            set { this._age = value; }\n        }\n    }\n</code></pre></li> <li>read-only property  <pre><code>    class Person {\n        private string _name;\n        public string Name =&gt; this._name;\n        public Person(string name) {\n            this._name = name;\n        }\n    }\n</code></pre></li> <li>private set property  <pre><code>    class Person {\n        private string _address;\n        public string Address {\n                get =&gt; this._address;\n                private set {\n                // check address here\n                    this._address = value;\n                }\n        }\n        public Person(string address) {\n            this.Address = address;\n        }   \n    }\n</code></pre></li> <li>static property  <pre><code>    class SavingAccounts {\n        public double CurrentBalance; \n        private static double _currentInterestRate;\n        public static double InterestRate {\n            get =&gt; this._currentInterestRate;\n            set { this._currentInterestRate = value; }\n        }\n    }\n</code></pre></li> <li>property pattern matching   switch curly brace \uc548\uc758 \ub610 \ub2e4\ub978 curly brace\uc5d0 \uc720\uc758\ud55c\ub2e4  <pre><code>    public enum PayTypeEnum {\n    \u00a0\u00a0Hourly,\n    \u00a0\u00a0Salaried,\n    \u00a0\u00a0Commission\n    }\n    class Employee {\n        private double _pay;\n        private DateTime _hireDate;\n        public double Pay {\n            get =&gt; this._pay; \n            set { this._pay = value; }\n        }\n        // automatic property can be assigned to initial value \n        public double WorkedHours { get; set; } = 0;\n        public DateTime HireDate =&gt; this._hireDate;\n        private PayTypeEnum _payType;\n        public PayTypeEnum PayType {\n            get =&gt; this._payType;\n            set { this._payType = value; }\n        }\n        public void GiveBonus(double amount) {\n            Pay = this switch {\n            // nested curly braces\n                { PayType: PayTypeEnum.Commission }\n                    =&gt; this.Pay += 0.1F * amount,\n                { PayType: PayTypeEnum.Hourly } \n                    =&gt; this.Pay += 40F * amount / 2080F,\n                { PayType: PayTypeEnum.Salaried }\n                    =&gt; this.Pay += amount,\n                _ =&gt; this.Pay += 0\n            };\n        }\n        public void GiveOverTimeBonus(double rate) {\n            Pay = this switch {\n            // multiple properties, nested property\n                {\n                    WorkedHours: &gt; 60, \n                    PayType: PayTypeEnum.Hourly,\n                    HireDate: { Year &lt; 2020} \n                } =&gt; this.pay *= ( 1 + rate * 2);\n                { WorkedHours: &gt; 60, PayType: PayTypeEnum.Hourly }\n                    =&gt; this.Pay *= ( 1 + rate );\n                _ =&gt; this.Pay += 0;\n            }       \n        }\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#object-initialization","title":"object initialization","text":"<ul> <li>curly braces\ub97c \uc0ac\uc6a9\ud574\uc11c \uac04\uacb0\ud558\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4    \ubaa8\ub4e0 public property\uc640 public field\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4          \ub0b4\ubd80\uc801\uc73c\ub85c\ub294 default constructor\ub97c \uc0ac\uc6a9\ud55c\ub2e4  <pre><code>    class Point {\n        public int X { get; set; }\n        public int Y { get; set; }\n        public Point() {}\n        public Point(int x, int Y) {\n            this.X = x;\n            this.Y = y;\n        }\n    }\n\n    Point p1 = new Point(1, 2);\n    Point p2 = new Point { X = 3, Y = 4 };\n</code></pre></li> <li>init-only setter    constructor \ub610\ub294 initialization \uc5d0\uc11c\ub9cc \uac12\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4  <pre><code>    class ImmutablePoint {\n        public int X { get; init; }\n        public int Y { get; init; }\n        public ImmutablePoint() {}\n        public ImmutablePoint(int x, int y) {\n            this.X = x;\n            this.Y = y;\n        }\n        public ImmutablePoint(int i) {\n            this.X = i;\n            this.Y = i;\n        }\n    }\n    ImmutablePoint p1 = new Point(1, 2);\n    ImmutablePoint p2 = new Point { X = 3, Y = 4 };\n    // p3: { X: 5, Y: 6 }\n    ImmutablePoint p3 = new Point(5) { Y = 6 };\n    // compile error    \n    p1.X = 5;   \n    p2.Y = 6;\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#nested-type","title":"nested type","text":"<ul> <li>nested type\uc740 construct\ub97c \ud1b5\ud574 \ub0b4\ubd80\uc5d0\uc11c \uc678\ubd80\uc5d0 \uc811\uadfc \uac00\ub2a5\ud558\ub2e4 (private\ub3c4 \uac00\ub2a5)    <p>nested types <pre><code>    public class Container {\n        public class Nested {\n            private Container _parent?;\n            public Nested() {\n                this._parent = null;\n            }\n            public Nested(Container parent) {\n                this._parent = parent;\n            }\n        }\n    }\n    Container.Nested nest = new Container.Nested();\n</code></pre></p> </li> </ul>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#partial","title":"partial","text":"<ul> <li>\ud558\ub098\uc758 class\ub97c \uc5ec\ub7ec \ud30c\uc77c\uc5d0 \ub098\ub204\uc5b4 \uad6c\ud604\ud558\ub294 \uac83  <pre><code>/* A.cs */\n    class A {\n        // propeties...\n        public A() {}\n    }\n/* A.Core.cs */ \npartial class A {\n    // method...\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#record","title":"record","text":""},{"location":"c_sharp/2025.03.24_class%2Crecord/#record-class","title":"record (class)","text":"<ul> <li>record keyword\uc640 record class \ud0a4\uc6cc\ub4dc\ub294 \uac19\ub2e4    \uae30\ubcf8\uc801\uc73c\ub85c record (class)\ub294 immutable\uc774\ub2e4    mutable type\uc740 init\ub97c set\uc73c\ub85c \ubc14\uafb8\uba74 \ub418\uc9c0\ub9cc \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc74c  <pre><code>// positinal syntax: Pascal case, immutable\nrecord Car(string Make, string Model);\n// property syntax, init\ub97c set\uc73c\ub85c \ubc14\uafb8\uba74 mutable\nrecord Car {    \n    public string Make { get; init; }\n    public string Model { get; init; }\n    public Car() {}\n}\nCar car = new Car() { Make = \"GMC\", Model = \"Terrain\" }\nConsole.WriteLine(car.ToString());\n//Car { Make = \"GMC\", Model = \"Terrain\" }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#record-struct","title":"record struct","text":"<p>read-only\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\uba74 \uae30\ubcf8\uc801\uc73c\ub85c mutable\uc774\ub2e4 <pre><code>    // positional syntax \n    public record struct Point(double X, double Y);\n  // property syntax, read-only\n    public readonly record struct Point {\n        public readonly double X { get; init; }\n        public readonly double Y { get; init; }\n    }\n    // Deconstruct struct \n    Point p = new Point(1.0, 2.0);\n    var (x1, y2) = p;\n    p.Deconsturct(out double x2, out double y2);\n</code></pre></p>"},{"location":"c_sharp/2025.03.24_class%2Crecord/#record_1","title":"record \uacf5\ud1b5","text":"<ul> <li>deconstruct  <pre><code>    // ... Car record\n    // Deconstuct based on positions not parameter names\n    car.Deconstruct(out string make, out string model);\n    // tuple syntax: out keyword\uac00 \uc5c6\uc74c type\uc740 (string?, string?)\n    var (carMake, carModel) = car;\n</code></pre></li> <li>equals    class\ub294 reference type\uc774\uae30 \ub54c\ubb38\uc5d0 equal\uc744 \ube44\uad50\ud560 \uc218 \uc5c6\uc9c0\ub9cc record\ub294 \uac19\uc740 \ud0c0\uc785\uc758 \uac19\uc740 \uac12\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4\uba74 \uac00\ub2a5\ud558\ub2e4  <pre><code>    // ... Car record\n    Car car1 = new Car() {  Make = \"GMC\", Model = \"Terrain\" }\n    Car car2 = new Car() {  Make = \"GMC\", Model = \"Terrain\" }\n    // compare types, values\n    Console.WriteLine(car1.Equals(car2)); // true\n    Console.WriteLine(car1 == car2); // true\n    // compare object(address) in memory\n    Console.WriteLine(ReferenceEquals(car1, car2)); // false\n</code></pre></li> <li>copy    with \ud0a4\uc6cc\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud2b9\uc815 property\ub97c \uc6d0\ud558\ub294 \uac12\uc73c\ub85c \ubc14\uafb8\uc5b4\uc11c \ubcf5\uc0ac\ud560 \uc218 \uc788\ub2e4  <pre><code>    // ... Car record\n    Car car = new Car() {  Make = \"GMC\", Model = \"Terrain\" }\n    // copy all property allocate new record\n    Car carA = car with {};\n    // copy and set property with diffent value \n    Car carB = car with { Model = \"Canyon\" };\n    // not copy, same object in memory\n    Car carC = car;\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.25_class/","title":"2025.03.25 class","text":""},{"location":"c_sharp/2025.03.25_class/#class","title":"class","text":""},{"location":"c_sharp/2025.03.25_class/#property","title":"property","text":"<ul> <li>\ub9ce\uc774 \uc4f0\uc774\ub294 \ud615\ud0dc\uc758 get,set accessor \ucf54\ub4dc\ub294 C# compiler\uc5d0 \uc758\ud574 \ucd5c\uc801\ud654 \ub41c\ub2e4   data \ubcc0\ud615 \uc5c6\uc774 \ub2e8\uc21c\ud788 field\ub97c \uc77d\ub294 \ucf54\ub4dc -&gt; \ud574\ub2f9 \uba54\ubaa8\ub9ac\ub97c \uc9c1\uc811 \uc77d\ub294 \ucf54\ub4dc\ub85c \ucef4\ud30c\uc77c   virtual get,set\uc740 compiler\uac00 \uc54c \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 inlined \ub420 \uc218 \uc5c6\ub2e4         get accessor\uc5d0\uc11c object\ub97c \ubcc0\ud615\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\ub294\ub2e4          (lazy property\uc77c \uacbd\uc6b0\uc5d0\ub294 \uc608\uc678)   </li> <li>virtual\uc774 \uc544\ub2cc field, property\ub294 base class\uc640 derived class\uc5d0\uc11c \ub530\ub85c \uc874\uc7ac\ud560 \uc218 \uc788\ub2e4 (C++\uacfc \uc720\uc0ac)          derived class\uc5d0\uc11c \uac19\uc740 \uc774\ub984\uc758 property\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c\ub294 new\ub97c \uc0ac\uc6a9\ud55c\ub2e4    base class\uc758 \ub370\uc774\ud130\uc5d0 \uc811\uadfc\ud558\uae30 \uc704\ud574\uc11c\ub294 base class\ub85c \uce90\uc2a4\ud305\ud574\uc11c \uc0ac\uc6a9\ud55c\ub2e4          &gt;hidden property example <pre><code>public class Employee {\n    private string _name;\n    public string Name {\n        get =&gt; _name;\n        set { _name = value; }\n    }\n}\npublic class Manager : Employee {\n    private string _name;\n\n    // Notice the use of the *new* modifier:\n    public new string Name {\n            get =&gt; _name;\n            set { _name = value + \", Manager\"; }\n    }\n}\n\nManager m1 = new Manager();\n\n// Derived class property.\nm1.Name = \"John\";\n// Base class property.\n((Employee)m1).Name = \"Mary\";\n//Name in the derived class is: John, Manager\nSystem.Console.WriteLine(\"Name in the derived class is: {0}\", m1.Name);\n\n//Name in the base class is: Mary\nSystem.Console.WriteLine(\"Name in the base class is: {0}\", ((Employee)m1).Name);\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.25_class/#method","title":"method","text":"<ul> <li>method\ub97c overloading \ud560 \ub54c compiler\ub294 ref, ref readonly, in, out \uac04\uc758 method signature \ucc28\uc774\ub97c \uad6c\ubcc4\ud560 \uc218 \uc788\ub2e4 (ref readonly\ub294 C# 12\ubd80\ud130)    \ud558\uc9c0\ub9cc class member\uc758 \uacbd\uc6b0\uc5d0\ub294 \uad6c\ubcc4\ud560 \uc218 \uc5c6\ub2e4   </li> <li>in parameter\uc640 ref readonly parameter\uc758 \ucc28\uc774   in\uc744 \uc0ac\uc6a9\ud558\uba74 compiler\uac00 \ud544\uc694\ud558\uba74 \uc784\uc758\uc758 \ubcc0\uc218\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4 \ubc18\ub4dc\uc2dc ref\ub85c \uc0ac\uc6a9\ub418\uae30\ub97c \uc6d0\ud55c\ub2e4\uba74 ref readonly\ub97c \uc0ac\uc6a9\ud558\uc790       (argument\uac00 variable\uc774 \uc544\ub2cc literal \uc77c \ub54c, implicit conversion\uc774 \ud544\uc694\ud560 \ub54c, class\uc758 property, expression\uc758 \uac12 \ub4f1)   </li> <li>in parameter\ub97c \uc694\uad6c\ud558\ub294 method\uc758 caller\ub294 in \uc744 argument \uc55e\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \ub3c4 \uc788\uace0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\ub2e4    in\uc744 \uba85\uc2dc\ud558\uba74 ref readonly \uac19\uc774 \uac12\uc744 \ubcf5\uc0ac\ud558\uc9c0 \uc54a\uac8c \ub41c\ub2e4    in\uc744 \uba85\uc2dc\ud558\uba74 variable \ub300\uc2e0 expression\uc774\ub098 constant\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4    \ub3d9\uc77c\ud55c method signature\ub97c \uac00\uc9c0\ub294 (in, pass-by-value) overload\uac00 \uc788\uc744 \ub54c \uc6d0\ud558\ub294 \uac83\uc744 \uc815\ud655\ud788 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.25_class/#inheritance","title":"inheritance","text":"<ul> <li>(static, instance) constructor \uc640 Finalizer\ub294 inherit \ub418\uc9c0 \uc54a\ub294\ub2e4   </li> <li>nested class\uc758 \uacbd\uc6b0\uc5d0\ub294 derived class\uc5d0\uc11c base class\uc758 private\uc5d0 \uc811\uadfc \uac00\ub2a5\ud558\ub2e4   </li> <li>struct\ub294 interface\ub97c implement \ud560 \uc218 \uc788\uc9c0\ub9cc inherit\ud560 \uc218\ub294 \uc5c6\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.25_class/#_1","title":"\ub354 \uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>[partial class] (https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/partial-classes-and-methods)   </p>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/","title":"2025.03.26 class,generic,interface","text":""},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#class","title":"class","text":""},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#override","title":"override","text":"<ul> <li>override \ud558\ub294 method\ub97c sealed\ub85c \ubc14\uafb8\uc5b4 \ub354 \uc774\uc0c1 override \ud560 \uc218 \uc5c6\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4    method\ub97c \ubcc0\ud615 \ud560 \uc218 \uc788\ub294 \uc790\uc720\ub3c4\uac00 \uc5c6\uc5b4 \uc9c0\ub354\ub77c\ub3c4 \uc801\uc808\ud558\uac8c \ub3d9\uc791\ud558\ub294 \uac83\uc744 \ubcf4\uc7a5\ud560 \uc218 \uc788\ub2e4   </li> <li>Object.Equals\ub97c override \ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 \ubc18\ub4dc\uc2dc GetHashCode\ub97c override \ud574\uc57c \ud55c\ub2e4 </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#abstract","title":"abstract","text":"<ul> <li>abstract\uc740 class, method, property, indexer, event\uc5d0 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4   </li> <li>abstract class\ub294 \ubaa8\ub4e0 field, method \ub4e4\uc774 abstract\uac00 \uc544\ub2c8\uc5b4\ub3c4 instantiate \ud560 \uc218 \uc5c6\ub2e4   </li> <li>abstract method\ub294 static\uc77c \uc218 \uc5c6\ub2e4   </li> <li>abstract class\ub294 instantiate \ud560 \uc218 \uc5c6\uc9c0\ub9cc (\ub300\ubd80\ubd84 protected) constructor\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4 \uc774 \uacbd\uc6b0 derived class\uac00 \ud574\ub2f9 construct\ub97c \uc0ac\uc6a9\ud574 \uac12\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4    \uc774 \uacbd\uc6b0 \uae30\ubcf8 parameterless constructor\uac00 \uc5c6\uc73c\ubbc0\ub85c \uba85\uc2dc\uc801\uc73c\ub85c base()\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4    (abstract class\uc758 constructor\uc758 parameter\uac00 \uc5c6\uac70\ub098 default value\uac00 \uc788\uc73c\uba74 \uc0dd\ub7b5 \uac00\ub2a5)   </li> <li>abstract base class\uc5d0 \uc788\ub358 virtual method\ub97c abstract derived class\uc5d0\uc11c abstract method\ub85c \ubcc0\uacbd\ud574 implementation\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#cast","title":"cast","text":"<ul> <li>( )\ub97c \uc0ac\uc6a9\ud55c casting\uc740 InvalidCastException\uc744 throw \ud560 \uc218 \uc788\ub2e4   </li> <li>as/is\ub97c \uc0ac\uc6a9\ud574\uc11c \uc548\uc804\ud558\uac8c \uce90\uc2a4\ud305 \ud560 \uc218 \uc788\ub2e4    </li> <li>\ub610\ub294 switch\uc758 \ud328\ud134 \uc77c\uce58\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4  <code>C#             static void Method(ValueType? val) {                 switch (val)                 {                     case int number:                                 // use int                         break;                     case long number:                       // use long                         break;                             default:                         break;             }</code></li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#boxing","title":"boxing","text":"<ul> <li>boxing\uc740 value type\uc744 object (\ub610\ub294 value type\uc5d0 implement \ub41c interface)\ub85c \ubcc0\uacbd\ud558\ub294 \uac83\uc774\ub2e4   </li> <li>CLR\uc740 System.Object\ub97c \uc0dd\uc131\ud574 value type \uac12\uc744 \ubcf5\uc0ac\ud558\uace0 heap\uc5d0 \uc800\uc7a5\ud55c\ub2e4   </li> <li>null\uc744 unboxing \ud558\ub294 \uac83\uc744 \uc2dc\ub3c4\ud558\uba74 NullReferenceException\uc774 throw \ub41c\ub2e4</li> <li>boxing \ud558\uc600\ub358 value type\uc744 \uc774\uc6a9\ud574 unboxing \ud574\uc57c \ud55c\ub2e4, \ub2e4\ub978 \ud0c0\uc785\uc73c\ub85c casting \ubd88\uac00\ub2a5   </li> <li>unboxing\uc740 object\uc758 \uac12\uc774 casting \ud558\ub824\ub294 value type\uc774 \ub9de\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uacfc\uc815\uc774 \ud3ec\ud568\ub41c\ub2e4    \uadf8 \ud6c4 \uac12\uc744 \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud55c\ub2e4  </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#generic","title":"generic","text":"<ul> <li>generic delegate\ub97c \uc774\uc6a9\ud558\uba74 \uc548\uc804\ud55c callback\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4    <p>\uc608\uc2dc Predicate\\&lt;T&gt; </p> </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#nested-type","title":"nested type","text":"<ul> <li>generic type\uc758 nested type\uc740 \uadf8 \uc790\uccb4\uac00 generic type\uc774 \uc544\ub2c8\ub354\ub77c\ub3c4 \uc0c1\uc704 type\uc758 generic type\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc73c\uba74 \uc0ac\uc6a9 \ubd88\uac00\ub2a5 \ud558\ub2e4   </li> <li>nested generic type \uc608\uc2dc  <pre><code>    class MyList&lt;T&gt; {\n\n      private Node? head;\n      public void AddHead(T t) {\n        // skip\n      }\n      public IEnumerator&lt;T&gt; GetEnumerator() {\n        //skip\n      }\n\n      private class Node(T t) {\n        public T Data { get; set; } = t;\n        public Node? Next { get; set; }\n      }\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#where","title":"where","text":"<ul> <li>where\ub85c generic type\uc5d0 constraint\ub97c \ud560 \ub54c\ub3c4 generic\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4  <code>C#      public class AGenericClass&lt;T&gt; where T : IComparable&lt;T&gt; { }</code></li> <li>base class\ub85c constraint \ud560 \ub54c\ub294 \uac00\uc7a5 \uba3c\uc800 \uba85\uc2dc\ud574\uc57c \ud55c\ub2e4   </li> <li>Object, Array, ValueType\uc740 base class\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4  </li> <li>nullable\uc774 generic type\uc774 \ub418\ub824\uba74 \uba85\uc2dc\uc801\uc73c\ub85c Base?\uc73c\ub85c \ud45c\uae30\ud574\uc57c \ud55c\ub2e4    nullable\uc778 generic type\uc5d0 non-nullable\uc744 \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4 (\uc608\uc2dc \uad6c\ud604 \uc2e4\ud328)   </li> <li>where\uc744 \uc774\uc6a9\ud574 notnull\uc73c\ub85c type\uc744 constraint \ud560 \uc218 \uc788\ub2e4 (compiler warning \ub9cc \ubc1c\uc0dd)   </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#interface","title":"interface","text":"<ul> <li>interface\ub294 static constructor\ub9cc \uac00\uc9c8 \uc218 \uc788\uace0 instance constructor, finalizer\ub97c \uac00\uc9c8 \uc218 \uc5c6\ub2e4    </li> <li>interface\ub97c \uad6c\ud604\ud558\ub294 class, struct\uc5d0\uc11c\ub294 \uad6c\ud604\ud558\ub824\ub294 member\uc758 signature\ub97c interface\uc758 \uac83\uacfc \ub3d9\uc77c\ud558\uac8c \ud558\uace0 public, non-static\uc73c\ub85c \ud574\uc57c \ud55c\ub2e4    </li> <li>interface\ub97c \uad6c\ud604\ud558\ub294 class, struct\uc758 static member\ub294 interface\uc758 \uac83\uc744 override \ud558\uc9c0 \uc54a\ub294\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#default-implementation","title":"default implementation","text":"<ul> <li>interface\uc758 method\ub294 implementation\uc774 \uc788\uc744 \uc218\ub3c4 \uc788\ub2e4 (swift\uc758 protocol, rust\uc758 trait\uc640 \uc720\uc0ac)   </li> <li>interface\uc758 default implementation\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 class\ub97c \uadf8 interface\ub85c casting \ud574\uc57c \ud55c\ub2e4   </li> <li>interface\uc758 abstract\uac00 \uc544\ub2cc static method\ub294 implementation\uc774 \uc788\uc5b4\uc57c \ud55c\ub2e4    (static abstract\ub294 C#11 \ubd80\ud130)   </li> <li>interface\uc758 member\ub294 body\uac00 \uc788\ub354\ub77c\ub3c4 implicit virtual\uc774\ub2e4 (sealed\uc758 \uacbd\uc6b0\ub294 \uc608\uc678)   </li> <li>class\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c interface\uc758 derived interface\ub294 \ud2b9\uc815 method\uc758 base interface\uc758 implementation\uc774 \uad6c\ud604\ub418\uc5b4 \uc788\ub354\ub77c\ub3c4 abstract\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4   </li> <li>default implementation\uc774 \uc788\ub294 interface\ub97c \uc5ec\ub7ec\uac1c implement\ud560 \uacbd\uc6b0 \uac19\uc740 method\uc5d0\uc11c \ucda9\ub3cc\uc774 \uc77c\uc5b4\ub0a0 \uc218 \uc788\ub2e4 (C++\uc758 \ub2e4\uc774\uc544\ubaac\ub4dc\uc640 \uac19\uc740 \uacbd\uc6b0) \uc774 \uacbd\uc6b0 \uba85\uc2dc\uc801\uc73c\ub85c \ub2e4\uc2dc \uad6c\ud604\ud574\uc57c \ud55c\ub2e4    <p>the most specific implementation rule </p> </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#_1","title":"\ud574\uacb0\ub418\uc9c0 \uc54a\uc740 \ub0b4\uc6a9","text":"<ul> <li>nullable\uacfc where\uc744 \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud558\uae30    <p>where constraint </p> </li> </ul>"},{"location":"c_sharp/2025.03.26_class%2Cgeneric%2Cinterface/#_2","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>performance: boxing unboxing DynamicMethod </p>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/","title":"2025.03.27 delegate,event","text":""},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#delegate","title":"delegate","text":"<ul> <li>delegate\ub294 \ud568\uc218\ub97c referent \ud558\ub294 \uac1d\uccb4\uc774\ub2e4   </li> <li>constructor\uc5d0\uc11c method \ub610\ub294 lambda function, Func\ub97c argument\ub85c \ubc1b\ub294\ub2e4 </li> <li>+= \ub97c \ud1b5\ud574\uc11c \ud568\uc218\ub97c \ucd94\uac00\ud560 \uc218 \uc788\ub2e4   </li> <li>-= \ub97c \ud1b5\ud574\uc11c \ud568\uc218\ub97c \uc804\ubd80 \uc81c\uac70\ud558\uba74 delegate\ub294 null\uc774 \ub41c\ub2e4    \uc774\ub54c Invoke \ub610\ub294 ()\uc73c\ub85c \ud568\uc218\ub97c \ud638\ucd9c\ud558\uba74 NullReferenceException\uc774 throw \ub41c\ub2e4   </li> <li>delegate declare \uc5c6\uc774 lambda function \ub610\ub294 Func\ub97c \uc0ac\uc6a9\ud574 \uc0dd\uc131\ud558\ub354\ub77c\ub3c4 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4   (delegate type\uc744 \ub9cc\ub4e4\uc9c0 \uc54a\uace0 var \ud0a4\uc6cc\ub4dc \ub610\ub294 Func\ub97c \uc0ac\uc6a9\ud574\ub3c4 delegate\ub85c \uc0dd\uc131\ub41c\ub2e4)   </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#multicast","title":"multicast","text":"<ul> <li>\ud568\uc218\uac00 \ucd94\uac00\ub41c \uc21c\uc11c\ub300\ub85c \uc2e4\ud589\ub41c\ub2e4</li> <li>\ud568\uc218\uc758 argument\uac00 reference type\uc774\ub77c\uba74 \ud568\uc218\uac00 \uc2e4\ud589\ub41c \ud6c4\uc758 \ubcc0\ud615\ub41c argument\uac00 \ub2e4\uc74c \ud568\uc218\ub85c \uc804\ub2ec\ub41c\ub2e4    argument\uc758 \ub370\uc774\ud130\ub97c \ubcc0\uacbd\ud558\uac70\ub098 \ub370\uc774\ud130\uc5d0 \uc758\uc874\ud558\ub294 \uacbd\uc6b0\ub294 \uc8fc\uc758  <pre><code>  delegate void ActionRef&lt;T&gt;(ref T item);\n  static void Add1(A a) { a.i += 1; }\n  static void Multiply2(A a) { a.i *= 2; }\n  static void Add1Ref(ref int i) { i += 1; }\n  static void Multiply2Ref(ref int i) { i *= 2; }\n  class A { public int i; }\n\n    /* reference type */\n    A a = new A();\n    Action&lt;A&gt; action = Add1;\n    action += Multiply2;\n    a.i = 0;\n    action(a);\n    // (0 + 1) * 2 = 2\n    Console.WriteLine(a.i);\n\n    action = Multiply2;\n    action += Add1;\n    a.i = 0;\n    action(a);\n    // (0 * 2) + 1 = 1;\n    Console.WriteLine(a.i);\n\n    /* value type pass by reference */\n    int i;\n    ActionRef&lt;int&gt; actionRef = Add1Ref;\n    actionRef += Multiply2Ref;\n    i = 0;\n    actionRef(ref i);\n    // (0 + 1) * 2 = 2\n    Console.WriteLine(i);\n\n    i = 0;\n    actionRef = Multiply2Ref;\n    actionRef += Add1Ref;\n    actionRef(ref i);\n    // (0 * 2) + 1 = 1;\n    Console.WriteLine(i);\n</code></pre></li> <li>return value\ub294 \ub9c8\uc9c0\ub9c9 \ud568\uc218\uc758 return value\ub9cc\uc744 \uac00\uc838\uc628\ub2e4    \uc911\ucca9\ud574\uc11c \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 out parameter\ub97c \uc0ac\uc6a9\ud558\uc790   </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#lamda","title":"lamda","text":"<ul> <li>default parameter, params parameter\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Func\ub098 Action\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4 \uba85\uc2dc\uc801\uc73c\ub85c delegate\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4  <pre><code>    delegate int IncrementByDelegate(int source, int increment = 1);\n    delegate int SumDelegate(params int[] values);\n</code></pre></li> <li>tuple\uc744 parameter\ub098 return type\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 var \ub300\uc2e0 Func \ub098 Action\uc744 \uc0ac\uc6a9\ud574\uc11c \ud0c0\uc785\uc744 \uc9c0\uc815\ud558\uc790   </li> <li>\ub300\ubd80\ubd84 return type\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc9c0\ub9cc \ud544\uc694\ud558\ub2e4\uba74 \uac00\ub2a5\ud558\ub2e4  <pre><code>    // Func&lt;bool, object&gt;\n    var choose = object (bool b) =&gt; b? 1: \"two\";\n</code></pre></li> <li>attribute\ub3c4 \ucd94\uac00 \uac00\ub2a5\ud558\ub2e4 \ud558\uc9c0\ub9cc System.Diagnostics.ConditionalAttribute\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c   </li> <li>lambda\uc5d0 \uc758\ud574 capture \ub41c reference\ub294 \ud574\ub2f9 lambda\uac00 garbage-collected \ub418\uae30 \uc804\uc5d0\ub294 garbage-collected \ub418\uc9c0 \uc54a\ub294\ub2e4   </li> <li>lambda\ub294 \uc0dd\uc131\ub41c method\uc758 in, ref, out parameter\ub97c capture \ud560 \uc218 \uc5c6\ub2e4   </li> <li>static\uc744 \uc0ac\uc6a9\ud558\uba74 \uc5b4\ub5a4 local variable\ub3c4 capture \ud558\uc9c0 \uc54a\ub294\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#event","title":"event","text":"<ul> <li>event\uc5d0 \uc5ec\ub7ec subscriber\ub4e4\uc774 \uc788\uc744 \ub54c event\uac00 \ubc1c\uc0dd\ud558\uba74 subscriber\ub4e4\uc740 \uae30\ubcf8\uc801\uc73c\ub85c synchronously \ud558\uac8c \uc2e4\ud589 \ub41c\ub2e4    <p>async event call </p> </li> <li>base class\uc5d0\uc11c event\ub97c virtual\ub85c \ub9cc\ub4e4\uc9c0 \ub9d0 \uac83 compiler\ub294 \uadf8\uac83\uc744 \ucc98\ub9ac\ud574 \uc8fc\uc9c0 \uc54a\ub294\ub2e4    \ub300\uc2e0 event\ub97c raise \ud560 \uc218 \uc788\ub294 protected method\ub97c \ub530\ub85c \ub9cc\ub4e4\uac83 Example </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#unsubscribe","title":"unsubscribe","text":"<ul> <li>resource leak\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574\uc11c\ub294 subscriber object\uac00 dispose \ud558\uae30 \uc804\uc5d0 event\ub97c unsubscribe \ud574\uc57c \ud55c\ub2e4    (publishing object\uac00 reference\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0)   </li> <li>\ubaa8\ub4e0 subscriber\uac00 unsubscribe\ub97c \ud558\uba74 event instance\ub294 null\uc774 \ub41c\ub2e4 (sub, pub \uba54\ubaa8\ub9ac \uc815\ub9ac)  </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#multiple-event","title":"multiple event","text":"<ul> <li>event\uac00 \uc5ec\ub7ec \uac00\uc9c0\uc77c \uacbd\uc6b0 overhead\uac00 \uc788\uc744 \uc218 \uc788\ub2e4    delegate\ub97c \uc800\uc7a5\ud558\ub294 colleciton\uc744 \ub9cc\ub4e4\uace0    JS\uc758 addEventLister\uac19\uc774 \ub0b4\ubd80\uc801\uc73c\ub85c\ub294 key\ub97c \uc0ac\uc6a9\ud574\uc11c \ud55c\ubc88\uc5d0 \uc800\uc7a5\ud560 \uc218 \uc788\ub2e4 (Hashtable, EventHandlerList \ub4f1)   </li> <li>event \ub9c8\ub2e4 unique\ud55c \ud0a4\ub97c \ub9cc\ub4e4\uc5b4\uc11c add \uc640 remove\ub97c \uad6c\ud604\ud55c\ub2e4 Example </li> </ul>"},{"location":"c_sharp/2025.03.27_delegate%2Cevent/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>.NET observer pattern INotifyPropertyChanged async/await </p>"},{"location":"c_sharp/2025.03.28_generic_collection/","title":"2025.03.28 generic collection","text":""},{"location":"c_sharp/2025.03.28_generic_collection/#generic-collection","title":"generic collection","text":"<ul> <li>KeyedCollection\uc740 key\ub97c value\uc5d0 \ud3ec\ud568\ud558\uace0 \uc788\ub294 collection\uc774\ub2e4    list\uc640 dictionary \ub450\uac00\uc9c0\ub85c\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4    (list\ub85c \uc0dd\uc131\ub418\uc9c0\ub9cc \ud2b9\uc815 threshold \uc774\uc0c1\uc774 \ub418\uba74 lookup dictionary\ub97c \uc0dd\uc131\ud55c\ub2e4)   </li> <li>\ud558\ub098\uc758 key\uc5d0 \uc5ec\ub7ec value\ub97c \uc800\uc7a5\ud558\uace0 \uc2f6\ub2e4\uba74 NameValueCollection\uc744 \uc0ac\uc6a9\ud558\uc790   </li> <li>IEnumerable\ub97c \uad6c\ud604\ud558\uba74 LINQ\ub97c collection\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4    <p>LINQ to Objects </p> </li> <li>list\uc5d0\uc11c \uc5ec\ub7ec element\ub97c \uc0ad\uc81c\ud560 \ub54c index\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 \ub4a4\uc5d0\uc11c\ubd80\ud130 \uc0ad\uc81c\ud574\uc57c \ud55c\ub2e4  <pre><code>    List&lt;int&gt; numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    // Remove odd numbers.\n    for (var index = numbers.Count - 1; index &gt;= 0; index--) {\n        if (numbers[index] % 2 == 1) {\n                // Remove the element by specifying\n                // the zero-based index in the list.\n                numbers.RemoveAt(index);\n        }\n    }\n</code></pre></li> <li>SortedDictionary \uc640 SortedList\ub294 Key\ub97c \uc0ac\uc6a9\ud574\uc11c \uc815\ub82c\ud55c\ub2e4    (SortedDictionary\ub294 \ub354 \ub9ce\uc740 memory\ub97c \uc0ac\uc6a9\ud574\uc11c \ub354 \uc88b\uc740 \uc131\ub2a5\uc744 \uc81c\uacf5\ud55c\ub2e4)   </li> <li>Dictionary\ub294 SortedDictionary \ubcf4\ub2e4 \ube60\ub978 lookup\uc744 \uc81c\uacf5\ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#generic-delegate","title":"generic delegate","text":"<ul> <li>\ud568\uc218\ub97c array, list\uc758 \uac01 element \ub300\ud574 \uc2e4\ud589\ud558\uae30 \uc704\ud574 Action\uc744 \uc804\ub2ec\ud55c\ub2e4   </li> <li>\ud568\uc218\ub85c \ud2b9\uc815 element\uc744 bool\ub85c \ud310\ubcc4\ud558\uae30 \uc704\ud574\uc11c Predicate\uc744 \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>\uae30\ubcf8\uc801\uc73c\ub85c sort order \uac00\uc9c0\uc9c0 \uc54a\ub294 element\ub098 \uae30\uc874\uc758 sort order\ub97c override \ud558\uae30 \uc704\ud574\uc11c Comparison\uc744 \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>array/list\ub85c\ubd80\ud130 \ub2e4\ub978 element type\uc744 \uac00\uc9c4 array/list\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c Converter\uc640 ConvertAll\ub97c \uc0ac\uc6a9\ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#generic-interface","title":"generic interface","text":"<ul> <li>IComparable\uc774\ub098 IEquatable\uc744 \uad6c\ud604\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 IComparer\uacfc IEqualityComparer\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4    (Icomparer object\ub97c \uc774\uc6a9\ud574 SortedDictionary\ub97c \ub9cc\ub4e4 \uc218 \uc788\ub2e4)  </li> <li>ICollection\uc744 \uc0ac\uc6a9\ud558\uba74 add, remove, copy\ub97c \ud560 \uc218 \uc788\uace0 element\uac00 IEnumerable\uc744 \uad6c\ud604\ud55c \uacbd\uc6b0 enumerate \ud560 \uc218 \uc788\ub2e4    </li> <li>IDictionary\ub97c \uc0ac\uc6a9\ud574\uc11c dictionary \ud0c0\uc785\ub4e4\uc744 \uc0ac\uc6a9\ud558\ub294 interface\ub97c \uad6c\ud604\ud560 \uc218 \uc788\ub2e4    </li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#linked-list","title":"linked list","text":"<ul> <li>LinkedList\ub294 Count property\ub97c \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc22b\uc790\ub97c \uc140 \ud544\uc694\ub294 \uc5c6\ub2e4   </li> <li>LinkedList\ub294 double linked list\uc774\uae30 \ub54c\ubb38\uc5d0 LinkedListNode\ub294 Previous, Next\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4   </li> <li>LinkedList\uc758 Value\ub85c null\uc774 \ud5c8\uc6a9\ub418\uc9c0\ub9cc \ucd5c\uc801\ud654\ub97c \uc704\ud574\uc11c\ub294 node\uc640 value\ub97c \ub3d9\uc2dc\uc5d0 \uc0dd\uc131\ud558\uc790  </li> <li>multithread\uc758 \uc0c1\ud669\uc5d0\uc11c LinkedList\uc5d0 \uc9c0\uc6d0\ub418\ub294 \uac83\uc740 read \ubfd0\uc774\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#iterator","title":"iterator","text":"<ul> <li>iterator\ub294 yield return\uc744 \uc0ac\uc6a9\ud574\uc11c method \ub610\ub294 get accessor\ub85c \uad6c\ud604\ud55c\ub2e4   </li> <li>iterator\ub97c \uad6c\ud604\ud574 \ubbf8\ub9ac \ud070 list\ub4f1\uc744 \ubd88\ub7ec\uc624\uc9c0 \uc54a\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4  </li> <li>iteration\uc744 \uc911\ub2e8\ud558\uae30 \uc704\ud574\uc11c yield break\ub97c \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>foreach\uc5d0\uc11c\ub294 loop \ub9c8\ub2e4 iterator\ub97c \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>iterator method\ub294 complier\uc5d0 \uc758\ud574 state machine\uc778 nested class\ub85c \ubcc0\ud658\ub41c\ub2e4   </li> <li>method\ub97c \ud1b5\ud574 \uad6c\ud604\ud55c IEnumerable \uc608\uc2dc  <pre><code>    private static void ListEvenNumbers() {\n        foreach (int number in EvenSequence(5, 18))\n        {\n                Console.Write(number.ToString() + \" \");\n        }\n        // Output: 6 8 10 12 14 16 18\n        Console.WriteLine();\n    }\n    private static IEnumerable&lt;int&gt; EvenSequence(int firstNumber, int lastNumber) {\n        // Yield even numbers in the range.\n        for (var number = firstNumber; number &lt;= lastNumber; number++) {\n            if (number % 2 == 0) {\n                yield return number;\n            }\n        }\n    }\n</code></pre></li> <li>class\uc758 IEnumerable \uc608\uc2dc  <pre><code>    public class DaysOfTheWeek : IEnumerable {\n        private string[] days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n        public IEnumerator GetEnumerator() {\n            for (int index = 0; index &lt; days.Length; index++) {\n                    // Yield each day of the week.\n                    yield return days[index];\n            }\n        }\n    }\n DaysOfTheWeek days = new DaysOfTheWeek();\n // Output: Sun Mon Tue Wed Thu Fri Sat\n    foreach (string day in days) {\n            Console.Write(day + \" \");\n    }\n</code></pre></li> <li>\uc5ec\ub7ec\uac1c\uc758 IEnumerable \uc608\uc2dc (\ud558\ub098\uc758 list\uc5d0 \ubaa8\ub4e0 enumerable\uc758 source\ub97c \uc800\uc7a5)  <pre><code>    public class Zoo : IEnumerable {\n        // Private members.\n        private List&lt;Animal&gt; animals = new List&lt;Animal&gt;();\n        // Public methods.\n        public void AddMammal(string name) {\n            animals.Add(new Animal { Name = name, Type = Animal.TypeEnum.Mammal });\n        }\n        public void AddBird(string name) {\n            animals.Add(new Animal { Name = name, Type = Animal.TypeEnum.Bird });\n        }\n        // Public members.\n        public IEnumerable Mammals {\n            get { return AnimalsForType(Animal.TypeEnum.Mammal); }\n        }\n        public IEnumerable Birds {\n            get { return AnimalsForType(Animal.TypeEnum.Bird); }\n        }\n        // Private methods.\n        private IEnumerable AnimalsForType(Animal.TypeEnum type) {\n            foreach (Animal theAnimal in animals) {\n                if (theAnimal.Type == type) {\n                    yield return theAnimal.Name;\n                }\n            }\n        }\n        // Private class.\n        private class Animal {\n            public enum TypeEnum { Bird, Mammal }\n            public string Name { get; set; }\n            public TypeEnum Type { get; set; }\n        }\n    }\n\n    foreach (string name in theZoo.Birds) {\n            Console.Write(name + \" \");\n    }   \n\n    foreach (string name in theZoo.Birds) {\n            Console.Write(name + \" \");\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#span-memory","title":"span, memory","text":"<ul> <li>span\uc740 ref struct\uc73c\ub85c\uc11c stack\uc5d0\uc11c \uc5ec\ub7ec element\ub4e4\uc744 \ubcf5\uc0ac\ud558\uc9c0 \uc54a\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574 \uc900\ub2e4    \uc5f0\uc18d\ub41c memory\ub97c \ub098\ud0c0\ub0b4\uba70 array\ub098 stackalloc\ub418\uc5b4 \uc788\ub294 buffer\ub098 unmanaged memory\uc758 pointer\ub97c \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>memory\ub294 ref struct\uac00 \uc544\ub2c8\uba70 heap\uc5d0 \ud560\ub2f9\ub420 \uc218 \uc788\ub2e4    span\uacfc \ub2e4\ub974\uac8c class\uc758 field\uac00 \ub420 \uc218 \uc788\uace0 await \ub610\ub294 yield \uacfc \uac19\uc774 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4   </li> <li>memory\ub294 \uc5ec\ub7ec component\ub4e4\uacfc multi-threads\uc5d0\uc11c \uc811\uadfc\uc774 \uac00\ub2a5\ud558\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.28_generic_collection/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>IEnumerable ArraySegment span, memory usage guidelines </p>"},{"location":"c_sharp/2025.03.31_hash_table%2Cdictionary/","title":"2025.03.31 hash table,dictionary","text":""},{"location":"c_sharp/2025.03.31_hash_table%2Cdictionary/#hash-table","title":"hash table","text":""},{"location":"c_sharp/2025.03.31_hash_table%2Cdictionary/#hash-function","title":"hash function","text":"<ul> <li>C#\uc5d0\uc11c\ub294 key\ub85c \uc4f0\uc774\ub294 type\uc758 GetHashCode method\ub97c \uc0ac\uc6a9\ud55c\ub2e4   </li> <li>Equals\ub97c override \ud588\ub2e4\uba74 \ubc18\ub4dc\uc2dc GetHashCode\ub3c4 override \ud574\uc57c \ud55c\ub2e4    GetHashCode\ub97c override \ud588\ub2e4\uba74 Equals\ub97c override \ud574\uc57c \ud55c\ub2e4</li> <li>mutable reference type\uc758 GetHashCode\ub294 \ub2e4\uc74c\uc744 \uc9c0\ucf1c\uc57c \ud55c\ub2e4    object\uc758 life time \ub3d9\uc548 hashcode\ub294 \ud56d\uc0c1 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4    GetHashCode\ub97c override \ud558\ub294 \uacbd\uc6b0 immutable\uc778 non-static field \ub9cc\uc744 \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4   </li> <li>immutable type\uc758 GetHashCode\ub294 \uae30\ubcf8\uc801\uc73c\ub85c reflection\uc744 \uc0ac\uc6a9\ud55c\ub2e4    override\ub97c \ud1b5\ud574 \ucd5c\uc801\ud654 \ud560 \uc218 \uc788\ub2e4   </li> <li>a\uc640 b \ub450 object\uc758 Equals method\uac00 true\ub77c\uba74 GetHashCode\uc758 \uacb0\uacfc\ub3c4 \ub3d9\uc77c\ud574\uc57c \ud55c\ub2e4    a\uc640 b \ub450 object\uc758 Equals method\uac00 false\ub77c\uba74 GetHashCode\uc758 \uacb0\uacfc\ub294 \uac19\uc9c0 \uc54a\uc544\ub3c4 \ub41c\ub2e4     </li> <li>\uc88b\uc740 \uc131\ub2a5\uc744 \uc704\ud574\uc11c\ub294 hash function\uc740 \uace0\ub978 \ubd84\ud3ec\ub97c \uac00\uc838\uc57c \ud55c\ub2e4    object\uc5d0 \uc791\uc740 \ubcc0\uacbd\uc774 \uc788\uc5b4\ub3c4 GetHashCode\uc758 \uacb0\uacfc\uac00 \ud06c\uac8c \ub2ec\ub77c\uc9c0\ub294 \uac83\uc774 \uc88b\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.03.31_hash_table%2Cdictionary/#thread-safety","title":"thread safety","text":"<ul> <li>\ud558\ub098\uc758 thread\ub9cc write operation\uc744 \ud560 \ub54c\uc5d0 \ub2e4\ub978 thread\ub4e4\uc740 lock-free read operation\uc744 \ud560 \uc218 \uc788\ub2e4   </li> <li>\uc5ec\ub7ec thread\uac00 write operation\uc744 \ud558\ub294 \uacbd\uc6b0\uc5d0\ub294 Synchronized(Hashtable) wrapper\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4</li> </ul>"},{"location":"c_sharp/2025.03.31_hash_table%2Cdictionary/#dictionary","title":"dictionary","text":"<ul> <li>\uc911\ubcf5\ub41c key\uc5d0 \ub300\ud55c Add method \uc0ac\uc6a9\uc740 ArguementExeption\uc744 throw \ud55c\ub2e4   </li> <li>\uc5c6\ub294 key\uc5d0 \ub300\ud55c Item[] property\uc758 \uc811\uadfc\uc740 KeyNotFoundException\uc744 throw \ud55c\ub2e4   </li> <li>key\ub97c \ud3ec\ud568\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc744 \ub54c\uc5d0\ub294 TryAdd, TryGetValue\uac00 \ud6a8\uc728\uc801\uc774\ub2e4</li> <li>dictionary\uc758 constructor\ub97c \ud1b5\ud574 IEqualityComparer\ub97c \uc0ac\uc6a9\ud574 key \uac12\uc744 \ube44\uad50\ud558\uac8c \ud560 \uc218 \uc788\ub2e4    \ub610\ub294 initial capacity\ub97c \uc9c1\uc811 \uc124\uc815\ud560 \uc218 \uc788\ub2e4   </li> <li>XML \ub4f1\uc744 dictionary\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4 Example </li> <li>key\ub9cc\uc774 \ud544\uc694\ud558\uace0 set operation\uc774 \ud544\uc694\ud558\ub2e4\uba74 HashSet\uc744 \uc0ac\uc6a9\ud558\uc790   </li> </ul>"},{"location":"c_sharp/2025.04.01_text_rpg/","title":"2025.04.01 text rpg","text":""},{"location":"c_sharp/2025.04.01_text_rpg/#objectequals","title":"Object.Equals","text":"<ul> <li>Equals\ub97c override \ud560 \ub54c base class\uac00 \uc788\ub2e4\uba74 base.Equals\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4    \ud558\uc9c0\ub9cc Obejct\uac00 base class\ub77c\uba74 base.Equals\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud55c\ub2e4 (reference equality)   </li> <li>Equals\ub97c override \ud588\ub2e4\uba74 operator == \uc640 != \ub3c4 \uc5ed\uc2dc override \ud558\uc790   </li> <li>Obejct.GetHashCode \ub3c4 override \ud574\uc57c \ud55c\ub2e4 Equals\uc758 \uacb0\uacfc\uac00 true \ub77c\uba74 \ubc18\ub4dc\uc2dc GetHashCode\uc758 \uacb0\uacfc\ub3c4 \uac19\uc544\uc57c \ud55c\ub2e4   </li> <li>IComparable\ub3c4 override \ud558\uba74 &lt;= \uc640 &gt;= \ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4   </li> <li>record\ub97c \uc0ac\uc6a9\ud558\uba74 value equality semantic\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4   </li> <li>Object.ReferenceEquals\ub97c \uc0ac\uc6a9\ud558\uba74 \ub3d9\uc77c\ud55c object\ub97c \ube60\ub974\uac8c \ud310\ubcc4\ud560 \uc218 \uc788\ub2e4   </li> <li>Object.Equals\ub294 compile-time type\uc5d0 \ub9de\uac8c \uc2e4\ud589\ub41c\ub2e4    (record type\uc740 \ub2e4\uc74c \uc0c1\ud669\uc5d0\uc11c \uad6c\ubcc4 \uac00\ub2a5\ud558\ub2e4 Equality in record type)  <pre><code>    TwoDPoint p1 = new ThreeDPoint(1, 2, 3);\n    TwoDPoint p2 = new ThreeDPoint(1, 2, 4);\n    // True\n    Console.WriteLine(p1.Equals(p2));\n    // False\n    Cnosole.WriteLine(((ThreeDPoint)p1).Equals((ThreeDPoint)p2));\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.04.01_text_rpg/#constructor-list","title":"constructor list","text":"<ul> <li>element\ub85c constructor\ub97c \uc800\uc7a5\ud574 \ud544\uc694\ud560 \ub54c \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 container\ub97c \ub9cc\ub4e4 \ubc29\ubc95   </li> <li>\uc6d0\ud558\ub294 parameter\ub97c Javascript\uc758 object\ucc98\ub7fc \uc790\uc720\ub86d\uac8c \ub118\uaca8\uc8fc\ub294 \ubc29\ubc95\uc774 \ud544\uc694    \ud604\uc7ac\ub294 Dictionary\ub85c \uc804\ub2ec\ud558\uc9c0\ub9cc \ub2e4\ub978 interface \ub610\ub294 constants\uac00 \ud544\uc694\ud568    Dictionary\uc5d0 \uc815\ud574\uc9c4 key, value\uac00 \uc81c\ub300\ub85c \uc804\ub2ec\ub418\uc9c0 \uc54a\uc744 \uac00\ub2a5\uc131\uc774 \uc788\uace0 \uc81c\ub300\ub85c \ucc98\ub9ac\uac00 \ub418\uc9c0 \uc54a\uc74c  <pre><code>class Window {\n    private Dictionary&lt;string, Func&lt;Scene&gt;&gt; sceneConstructors;\n}\nclass ImageScene: Scene {\n  public ImageScene(Dictionary&lt;string, string&gt; param): this(\n  param[\"name\"],\n  param[\"image\"],\n  param.ContainsKey(\"nextSceneName\") ?\n  param[\"nextSceneName\"]: null\n  ) {}\n}\nclass SelectScene: Scene {\n    public SelectScene(Dictionary&lt;string, object&gt; param)\n    : base((string)param[\"name\"], SceneState.Rendering) {\n    if (param[\"prompt\"] is string prompt)\n        this.prompt = prompt;\n    else\n        throw (new ArgumentException());\n    // skip\n}\n</code></pre>"},{"location":"c_sharp/2025.04.01_text_rpg/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>dynamic </p>"},{"location":"c_sharp/2025.04.02_sort/","title":"2025.04.02 sort","text":""},{"location":"c_sharp/2025.04.02_sort/#sort","title":"Sort","text":""},{"location":"c_sharp/2025.04.02_sort/#merge-sort","title":"merge sort","text":"<pre><code>    Function MergeSort(Array arr, int start, int end): Array {\n      if start &gt;= end\n        return arr\n      if start + 1 == end \n        if arr[start] &gt; end \n          Array newArr = [ arr[end], arr[start] ]\n          return newArr\n        else\n          return arr\n      int mid = start + (end - start) / 2\n      Array left = MergeSort(start, mid, arr)\n      Array right = MergeSort(mid + 1, end, arr)\n      int leftIndex = 0, rightIndex = 0, i = 0\n      Array newArr\n      while leftIndex &lt; left.Length and rightIndex &lt; right.Length \n        if left[leftIndex] &lt; right[rightIndex] \n          newArr[i] = left[leftIndex]\n          leftIndex++\n        else \n          newArr[i] = right[rightIndex]\n          rightIndex++\n        i++\n      if leftIndex &lt; rightIndex \n        while i &lt; arr.Length \n          newArr[i] = left[leftIndex]\n          leftIndex++\n          i++\n      else \n        while i &lt; arr.Length \n          newArr[i] = right[rightIndex]\n          rightIndex++\n          i++\n    }\n</code></pre>"},{"location":"c_sharp/2025.04.02_sort/#quick-sort","title":"quick sort","text":"<pre><code>    Function QuickSort(Array arr, int start, int end) {\n      if start &gt;= end\n        return \n      if start + 1 == end \n        if arr[start] &gt; arr[end]\n          Swap(start, end, arr)\n        return\n      pivot = arr[arr.Length - 1]\n      int left = start, right = end\n      while left &lt;= right \n        while arr[left] &lt; pivot\n          left++\n        while arr[right] &gt; pivot\n          right--\n        if left &gt; right \n          break\n        Swap(left, right, arr)\n        left++\n        right++\n      QuickSort(arr, start, right)\n      QuickSort(arr, left, end)\n    }\n</code></pre>"},{"location":"c_sharp/2025.04.02_sort/#selection-sort","title":"selection sort","text":"<pre><code>    Function SelectionSort(Array arr) {\n      int firstIndex = PickSmallestIndex(0, arr)\n      Swap(firstIndex, 0, arr)\n      int sortedIndex = 0\n      while sortedIndex &lt; arr.Length - 1 \n        int smallestIndex = PickSmallestIndex(sortedIndex + 1, arr)\n        Swap(smallestIndex, sortedIndex + 1, arr)\n        sortedIndex++\n    }\n\n    Function PickSmallestIndex(int start, Array arr) {\n      smallestIndex = start\n      for int i = start + 1; i &lt; arr.Length; ++i \n        if arr[i] &lt; arr[smallestIndex]\n          smallestIndex = i\n      return smallestIndex\n    }\n</code></pre>"},{"location":"c_sharp/2025.04.02_sort/#insertion-sort","title":"insertion sort","text":"<pre><code>    Function InsertionSort(Array arr) {\n      int sortedIndex = 0\n      while sortedIndex &lt; arr.Length - 1 \n        int i = sortedIndex + 1\n        if arr[i] &lt; arr[sortedIndex]\n          Insert(i, arr)\n        sortedIndex++\n    }\n\n    Function Insert(int index, Array arr) {\n      value valueToInsert = arr[index]\n      int indexToInsert = 0\n      while arr[indexInsert] &lt; valueToInsert\n        indexToInsert++\n      for int i = index; i &gt; indexToInsert; --i \n        arr[i] = arr[i - 1] \n      arr[indexToInsert] = valueToInsert\n    }\n</code></pre>"},{"location":"c_sharp/2025.04.02_sort/#bubble-sort","title":"bubble sort","text":"<pre><code>    Function BubbleSort(Array arr) {\n      int end = arr.Length - 1\n      while end &lt; 1 \n        current = 0\n        while current &lt; end - 1 \n          if arr[current] &lt; arr[current + 1] \n            Swap(current, current + 1, arr) \n          current += 1\n        end -= 1\n    }\n</code></pre>"},{"location":"c_sharp/2025.04.02_sort/#observer-pattern","title":"observer pattern","text":"<ul> <li>provider\ub294 IObservable\uc744 \uad6c\ud604\ud574\uc11c Subscribe method\ub97c \uc81c\uacf5\ud55c\ub2e4   </li> <li>observer\ub294 IObserver\ub97c \ud1b5\ud574 OnNext, OnError, OnCompleted method\ub97c \uad6c\ud604\ud55c\ub2e4   </li> <li>provider\ub294 IObserver\ub4e4\uc744 \uc800\uc7a5\ud574\uc11c publish \ud55c\ub2e4</li> <li>provider\ub294 Subscribe\uc5d0\uc11c IDisposable\uc744 observer\uc5d0 \ub118\uaca8\uc900\ub2e4    observer\ub294 Dispose method\ub97c \ud1b5\ud574 unsubscribe \ud560 \uc218 \uc788\ub2e4   </li> <li>\uc608\uc2dc\ucf54\ub4dc </li> </ul>"},{"location":"c_sharp/2025.04.03_algorithm/","title":"2025.04.03 algorithm","text":""},{"location":"c_sharp/2025.04.03_algorithm/#algorithm","title":"algorithm","text":"<ul> <li>algorithm\uc740 \uc8fc\uc5b4\uc9c4 \uc785\ub825\uc5d0 \ub300\ud574 \ubb38\uc81c\ub97c \ud574\uacb0\ud574 \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud55c procedure\uc774\ub2e4   </li> <li>algorithm\uc758 \ud6a8\uc728\uc744 \uce21\uc815\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc2dc\uac04\uc774 \uc544\ub2c8\ub77c \ud544\uc694\ud55c operation\uc744 \uce21\uc815\ud55c\ub2e4 (asymptotic analysis)   </li> <li>big-\u03a9 \ub294 lower bounds, big-\u039f \ub294 upper bounds, \u03b8\ub294 \ub450\uac00\uc9c0\ub97c \ubaa8\ub450 \uc758\ubbf8\ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.03_algorithm/#procedure-generated-terrain","title":"procedure generated terrain","text":""},{"location":"c_sharp/2025.04.03_algorithm/#demo","title":"demo","text":"<ul> <li>\uc774\uc804\uc5d0 \uc9c4\ud589\ud588\ub358 \uc0ac\uc774\ub4dc \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \ud544\uc694\ud588\ub358 algorithm\uc73c\ub85c pseudocode\ub97c \uc791\uc131 (reference      )</li> <li>Terrain    \ud544\uc694\ud560 \ub54c\ub9c8\ub2e4 center\ub97c \ubcc0\uacbd\ud558\uace0 Update\ub97c \uc2e4\ud589\ud574 map\uc744 \uadf8\ub9ac\ub294 \ub2e8\uc704\uc778 chunk\ub4e4\uc744 \uc0dd\uc131, \uc0ad\uc81c  <pre><code>class Terrain {\n\n    Dict&lt;string, Chunk&gt; currentChunks\n    (double, double) center\n    List&lt;Chunk&gt; recycles\n    double size\n    Noise noise\n\n    Update() {\n        QuadTree tree = QuadTree { center, size }\n\n        Dict&lt;string, ChunkData&gt; newChunkData\n        for node in tree.GetChildren()\n            newChunkData.Add(node)\n        List&lt;Chunk, ChunkData&gt; difference\n        List&lt;Chunk, ChunkData&gt; intersection\n\n        for chunkData in newChunkData\n            if currentChunks.Contain(chunkData.key)\n                intersection.Add(chunkData)\n            else\n                difference.Add(data)\n\n        for chunk in currentChunks\n            if !newChunkData.Contain(chunk.key)\n                recycles.Add(chunk) \n        if difference.Count != 0\n            foreach chunkData in difference\n                AllocateChunk(chunkData)\n    }\n\n    AllocateChunk(chunkData) {\n        recycle = recycles.pop()\n        if recycle is not null\n            ChangeChunkData(chunkData)\n        else\n            currentChunks.Add(CreateChunk(chunkData))\n    } \n\n    Chunk CreateChunk(chunkData) {\n        Array&lt;(double, double, double)&gt; terrainVertices\n        Dict&lt;(double, double, double), Color&gt; colors\n        (double, double) size = chunkData.size\n        (double, double) center = chunkData.center\n        double STEP\n\n        for double x = center.x - size.x / 2; x &lt; center.x + size.x / 2; x += STEP\n            for double y = center.y - size.y / 2; y &lt; center.y + size.y / 2; y += STEP\n                (double, double) pos\n                double height = noise.Get(pos.x, pos.y)\n                terrainVertices.Add(x, y, height)\n                // CalcColor use another noise\n                colors.Add(CalcColor(x, y, height))\n\n        return Chunk { terrainVertices, colors}\n    }\n}\n</code></pre></li> <li> <p>Noise    \uc6d0\ud558\ub294 \uc9c0\uc810\uc5d0\uc11c\uc758 \uc790\uc5f0\uc2a4\ub7ec\uc6b4 height \uac12\uc744 \uc0dd\uc131    \uc785\ub825 x, y \uac12\uc774 \uac19\ub2e4\uba74 \ud56d\uc0c1 \uac19\uc740 height \uac12\uc744 \uc0dd\uc131\ud558\uae30 \ub54c\ubb38\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc5c6\uc74c  <pre><code>class Noise {\n\n  int octaves;\n  double persistence;\n\n  // generate noise (perlin noise, simplex noise)\n  Func&lt;double, double, double&gt; noiseFunc;\n\n  // random \ub192\uc774 \uac12\uc744 \uc0dd\uc131\n  double Get(double x, double y) {\n    double amplitude = 1.0;\n    double normalization = 0;\n    double value = 0;\n\n    // \uacc4\uc0b0\ub41c noise\uc5d0 octave \ub9c8\ub2e4 amplitude\ub85c \ub354 \uc791\uc740 \uac12\uc744 \ub354\ud574\uc11c\n    // \ud30c\ub3c4\uc640 \uac19\uc740 \ub514\ud14c\uc77c\uc744 \ucd94\uac00\ud55c\ub2e4\n    for int i = 0; i &lt; this.octaves; ++i \n      double noiseValue = noiseFunc(x, y)\n      value += noiseValue * amplitude\n      normalization += amplitude\n      // lower amplitude\n      amplitude *= persistence\n    total /= normalization\n    return value\n  }\n}\n</code></pre></p> </li> <li> <p>QuadTree    \uc911\uc2ec\uc810\uc774 \uc774\ub3d9\ud560 \ub54c\ub9c8\ub2e4 \uae30\uc874\uc5d0 \uc0dd\uc131\ub41c \ub9f5\uc5d0 \ucd94\uac00\ud574\uc57c \ud558\ub294 \ubd80\ubd84\uacfc \uc81c\uac70\ud574\uc57c \ud558\ub294 \ubd80\ubd84\uc744 \ud310\ubcc4\ud558\uae30 \uc704\ud55c tree \uad6c\uc870  <pre><code>class QuadTree {\n  class Node {\n    (double, double) center\n    Array&lt;Node&gt; children\n    (double, double) size\n  }\n\n  Node root\n  List&lt;string&gt;\n\n  QuadTree((double, double) center, (double, double) size) {\n    Node root = {\n      center = center,\n      size = size,\n      children = []\n    }\n  }\n\n  // \ud604\uc7ac \uc911\uc2ec\uc744 \uae30\uc900\uc73c\ub85c \ub098\ud0c0\ub0b4\uc57c \ud558\ub294 \ubaa8\ub4e0 Node\ub97c \ucc3e\uae30\n  Array&lt;Node&gt; GetChildren() =&gt; root.children\n\n  // \uc911\uc2ec\uc774 \ub418\ub294 \uc88c\ud45c\ub97c \ubcc0\uacbd\ud574 root\uc758 children\uc744 \ub2e4\uc2dc \uacc4\uc0b0 \n  UpdateCenter((double, double) center) {\n    // \uc911\uc2ec\uc774 \ub418\ub294 root\uc5d0\uc11c \ubd80\ud130 Tree\uc5d0 \ud3ec\ud568\uc2dc\ud0a4\ub824\ub294 \uac70\ub9ac\ub97c \uc124\uc815\n    double threshold \n    InsertCenter(root, center, threshold)\n  }\n\n  // target Node\uc5d0\uc11c center \uae4c\uc9c0\uc758 \uac70\ub9ac\ub97c \uc774\uc6a9\ud574 Tree\uc5d0 \ud3ec\ud568\ud558\uace0 \ud544\uc694\ud558\ub2e4 \uba74 chlidren\uc744 \uc0dd\uc131\n  InsertCenter(Node target, (double, double) center, double threshold) {\n    double dist = distanceTo(target, center)\n    if dist &lt; threshold\n      target.children = CreateChildren(target)\n      foreach child in children\n        InsertCenter(child, center, threshold)\n  }\n\n  // parent\ub97c \uae30\uc900\uc73c\ub85c \ub124 \ubc29\ud5a5\uc5d0 \ud574\ub2f9\ud558\ub294 Node\ub97c \uc0dd\uc131\n  Array&lt;Node&gt; CreateChildren(Node parent) \n}\n</code></pre></p> </li> </ul>"},{"location":"c_sharp/2025.04.03_algorithm/#exception","title":"exception","text":"<ul> <li>\uc5ec\ub7ec\uac1c\uc758 catch\uac00 \uc788\uc744 \ub54c\ub294 if\ucc98\ub7fc \uc704\ucabd\uc758 catch\uc5d0 \ud574\ub2f9 \ub418\uba74 \uc544\ub798\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294\ub2e4   </li> <li>try, catch\uc5d0\uc11c when\uc744 \uc0ac\uc6a9\ud574 error\ub97c filter \ud560 \uc218 \uc788\ub2e4  <pre><code>try {\n    int[] values = GetValuesFromArray(-1, end, array);\n} catch(ArgumentOutOfRangeException e) when (e.ParamName == \"start\") {\n    //invalid start parameter \n}\n\nint[] GetValueFromArray(int start, int end, int[] array) {\n    if (start &lt; 0)    \n        throw (new ArgumentOutOfRangeException(nameof(start)));\n}\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.04.04_interface/","title":"2025.04.04 interface","text":""},{"location":"c_sharp/2025.04.04_interface/#interface","title":"interface","text":"<ul> <li>explicit implemented interface\ub294 (implicit) private\ub9cc \uac00\ub2a5\ud558\ub2e4          method\uc758 \uc0ac\uc6a9\uc740 casting \ud6c4\uc5d0\ub9cc \uac00\ub2a5\ud558\ub2e4  <pre><code>    class Octagon : IDrawToForm, IDrawToPrinter {\n    \u00a0\u00a0\u00a0// Explicitly bind Draw() implementations\n    \u00a0\u00a0\u00a0// to a given interface.\n        void IDrawToForm.Draw() {\n             Console.WriteLine(\"Drawing to form...\");\n        }\n        void IDrawToPrinter.Draw() {\n         Console.WriteLine(\"Drawing to a printer...\");\n        }\n    }\n\n    Octagon octagon = new Octagon();\n    // compile error\n    octagon.Draw();\n    ((IDrawToPrinter)octagon).Draw();\n    if (octagon is IDrawToForm drawToForm) {\n        drawToForm.Draw();\n    }\n</code></pre></li> <li>method\uc758 default implementation\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 object\ub97c interface\ub85c casting \ud6c4\uc5d0 \uac00\ub2a5\ud558\ub2e4    </li> <li>derived interface\uac00 base\uc758 method\uc758 default implementation\uc744 hide \ud558\ub294 \uac83\uc744 \uc758\ub3c4\ud55c\ub2e4\uba74 new\ub97c \uc0ac\uc6a9\ud558\uc790    base\uc758 method\ub97c explicit implementation \ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 derived\uc758 method\uac00 \uc2e4\ud589\ub41c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.04_interface/#ienumerable","title":"IEnumerable","text":"<ul> <li>yield\ub97c \uc774\uc6a9\ud574 \ubbf8\ub9ac \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc544\ub3c4 IEnumerable\uc744 \uad6c\ud604\ud560 \uc218 \uc788\ub2e4  <pre><code>    public class ChunkGenerator: IEnumerable&lt;ChunkGenerator.Chunk&gt; {\n        (double min, double max) XBounds;\n        (double min, double max) YBounds;\n        double Step;\n\n      public class Chunk(double x, double y) {// create Chunk for position}\n\n      IEnumerator IEnumerable.GetEnumerator() =&gt; GetEnumerator();\n    \u00a0\u00a0IEnumerator&lt;Chunk&gt; GetEnumerator() \u00a0{\n        for (double x = this.XBounds.min; x &lt; this.XBounds.max; x += Step) {\n    \u00a0\u00a0\u00a0\u00a0  for (double y = this.YBounds.min; y &lt; this.YBounds.max; y += Step) {\n      \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0yield return (new Chunk(x, y));\n      \u00a0\u00a0\u00a0\u00a0}\n        }\n    \u00a0\u00a0}\n    }\n\n    ChunkGenerator generator = new ();\n    foreach (ChunkGenerator.Chunk chunk in generator) {\n    // async Render \ub610\ub294 \uc911\uac04\uc5d0 \ub2e4\ub978 \uac83\uc744 \ucc98\ub9ac\n        Render(chunk);\n    }\n</code></pre></li> </ul>"},{"location":"c_sharp/2025.04.05_hashing/","title":"2025.04.05 hashing","text":""},{"location":"c_sharp/2025.04.05_hashing/#hashing","title":"hashing","text":"<ul> <li>container\uc5d0\uc11c \uc6d0\ud558\ub294 \uac83\uc744 \ucc3e\uae30 \uc704\ud574 comparison\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc2e4\ud589 \uacfc\uc815\uc774 binary tree\ub97c \uc774\ub8e8\uac8c \ub418\uace0 \uc804\uccb4 \uacfc\uc815\uc740 \ucd5c\uc18c O(log n)\uc774 \ud544\uc694\ud558\uac8c \ub41c\ub2e4 (\uc815\ub82c\uc774 \uc548\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \uc99d\uac00\ud568)   </li> <li>\ucef4\ud4e8\ud130\ub294 Ram\uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc6d0\ud558\ub294 memory \uc704\uce58\uc5d0 constant time\uc5d0 \uc811\uadfc\uc774 \uac00\ub2a5\ud558\ub2e4    \uc774\uac83\uc744 \ud65c\uc6a9\ud558\ub294 \uac83\uc774 hashing \uc774\ub2e4   </li> <li>\ud558\uc9c0\ub9cc key\uc758 \ucd5c\ub300\uac12\ub9cc\ud07c memory\ub97c \ud560\ub2f9\ud560 \uc218\ub294 \uc5c6\uae30 \ub54c\ubb38\uc5d0 hash function\uc744 \uc0ac\uc6a9\ud574 \ud544\uc694\ud55c memory\ub97c \uadf8\ubcf4\ub2e4 \uc801\uac8c \ud560\ub2f9\ud55c\ub2e4 \uc774\ub85c \uc778\ud574 \uc11c\ub85c \ub2e4\ub978 key\uac00 \ub3d9\uc77c\ud55c location\uc5d0 \uc800\uc7a5 \ub420 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.05_hashing/#hash-function","title":"hash function","text":"<ul> <li>division hash function    key\uc758 distribution\uc774 \uc77c\uc815\ud560 \ub54c \ud6a8\uacfc\uac00 \uc88b\ub2e4          k\uac00 key, m\uc774 hash table\uc758 size\uc77c \ub54c          h(k) = k mod m   </li> <li>universal hash function    division hash function\uc740 \ud2b9\uc815\ud55c \uc785\ub825\uc5d0 \ub300\ud574 \uc131\ub2a5\uc774 \uc88b\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc784\uc758\uc758     hash function\uc744 \uc0dd\uc131\ud55c\ub2e4    u\uac00 key\uc758 \ucd5c\ub300 \uac12, k\uac00 key, m\uc774 hash table\uc758 size\uc77c \ub54c          h<sub>ab</sub> = ( ak + b ) mod p ) mod m          p\ub294 u\ubcf4\ub2e4 \ud070 \uc784\uc758\uc758 \uc18c\uc218\uc774\uace0 a, b\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\ud0dd         H<sub>(p, m)</sub> = { h<sub>ab</sub>(k) | \\(a,b \\in\\{0, ..., p - 1\\}\\) and \\(a \\neq 0\\) }   </li> </ul>"},{"location":"c_sharp/2025.04.06_sorting/","title":"2025.04.06 sorting","text":""},{"location":"c_sharp/2025.04.06_sorting/#sorting","title":"sorting","text":""},{"location":"c_sharp/2025.04.06_sorting/#comparison-sort","title":"comparison sort","text":"<ol> <li>n\uac1c\uc758 \uac83\uc73c\ub85c \uc774\ub8e8\uc5b4\uc9c4 list\ub97c sorting \ud55c \uac83\uc758 \uacb0\uacfc\ub294 n!\uac1c \uc774\ub2e4 (\uac01 \uc6d0\uc18c\uac00 \uc815\ub82c\ub41c \ud6c4\uc758 \uc704\uce58\ub97c \ub098\uc5f4\ud55c \uc21c\uc5f4)   </li> <li>comparison model\uc5d0\uc11c \uc6d0\ud558\ub294 \uac83\uc744 \ucc3e\uae30 \uc704\ud574 binary (decision) tree\ub97c \uc774\uc6a9\ud558\uba74 O(log n)\uc758 \ub2e8\uacc4\ub97c \uac70\uccd0 O(n)\uc758 leaf\uac00 \ud544\uc694\ud558\ub4ef\uc774 sorting\uc758 \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud574\uc11c \\(\\Omega\\)(log n!)\uc758 \ub2e8\uacc4\ub97c \uac70\uccd0 \u03a9(n!)\uc758 leaf\uac00 \ud544\uc694\ud558\ub2e4   </li> <li>log(n!)\uc740 nlog(n) \ubcf4\ub2e4 \ud06c\uae30 \ub54c\ubb38\uc5d0 list\uc758 sorting\uc740 \ucd5c\uc18c nlog(n)\uc758 \uacfc\uc815\uc774 \ud544\uc694\ud558\ub2e4   </li> </ol>"},{"location":"c_sharp/2025.04.06_sorting/#direct-access-array-sort","title":"direct access array sort","text":"<ul> <li>key\uc758 \uc911\ubcf5\uc774 \uc5c6\ub2e4\uba74 comparison \uc5c6\uc774 hashing\uc73c\ub85c search\ub97c \ud588\ub358 \uac83\uc640 \uac19\uc774 Direction-Access-Array(DAA)\uc744 \uc0dd\uc131\ud574 \uac01 key\ub97c \ub123\uc740 \ud6c4 DAA\uc744 \uc21c\ud68c\ud558\uba70 key\ub97c \uac00\uc838\uc624\uba74 sorting\uc774 \ub418\uc5b4 \uc788\ub2e4\uace0 \ubcfc \uc218 \uc788\ub2e4   </li> <li>key\uc758 \ucd5c\ub300\uac12\uc774 u\ub77c\uace0 \ud55c\ub2e4\uba74 DAA\ub97c \uc0dd\uc131\ud558\ub294\ub370 O(u), \uac01 \ud0a4\ub97c \ub123\ub294\ub370 n, DAA\ub97c \uc21c\ud68c\ud574 \uacb0\uacfc\ub97c list\ub85c \ub9cc\ub4dc\ub294\ub370 O(u)\uac00 \ud544\uc694\ud574\uc11c \ucd1d O( n + u )\uc758 \uacfc\uc815\uc774 \ud544\uc694\ud558\ub2e4 ( u &gt;= n )    </li> </ul>"},{"location":"c_sharp/2025.04.06_sorting/#tuple-sort","title":"tuple sort","text":"<ul> <li>\ud558\uc9c0\ub9cc u\uac00 \\(\\theta(n)\\)\uc774 \uc544\ub2cc u &lt; n<sup>2</sup>\uac00 \ub418\uba74 \ud6a8\uc728\uc774 \ub5a8\uc5b4\uc9c0\uae30 \ub54c\ubb38\uc5d0 \ub098\ub204\ub294 \uc218 n\uc744 \uc815\ud558\uace0 key\ub97c k = an + b (a, b)\uc758 \uc30d\uc73c\ub85c \ub9cc\ub4e4\uc5b4 u\ub97c \uc791\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub2e4    (\ubaa8\ub4e0 key\uc5d0 \ub300\ud574 \ub098\ub204\ub294 \uc218 n\uc744 100\uc73c\ub85c \uc815\ud55c \ub4a4 key\uac00 10001\uc774\ub77c\uba74 (100,1)\uc73c\ub85c \ud45c\ud604 )   </li> <li>key\ub97c \uc804\ubd80 tuple\ub85c \ubc14\uafbc list\ub97c \uba3c\uc800 b\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud55c \ud6c4 \uc815\ub82c\ub41c list\ub97c \ub2e4\uc2dc a\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc804\uccb4\uac00 \uc815\ub82c\ub418\uac8c \ub41c\ub2e4 (stable sorting \uc0ac\uc6a9)   </li> <li>[  4,    5,    32,      808,    128,     23 ] \ub97c n = 10\uc73c\ub85c \ub098\ub204\uba74    [ (0,4), (0,5), (3, 2), (80,8), (12,8), (2,3) ] \uac00 \ub418\uace0 b\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74    [ (3,2), (2,3), (0,4), (0,5), (80,8), (12,8) ] \uc774 \ub41c\ub2e4 \uc774\uac83\uc744 \ub2e4\uc2dc a\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74          [ (0,4), (0,5), (2,3), (3,2), (12,8), (80,8) ] \uc774 \ub418\uc5b4 \uc804\uccb4\uac00 \uc815\ub82c\ub41c\ub2e4   </li> <li>\ud558\uc9c0\ub9cc list\uc758 key\uc5d0 \uc911\ubcf5\uc774 \uc5c6\ub354\ub77c\ub3c4 a, b\uac00 \uac01\uac01 \uc911\ubcf5\uc774 \uc0dd\uae30\uae30 \ub54c\ubb38\uc5d0 DAA sort\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4       </li> </ul>"},{"location":"c_sharp/2025.04.06_sorting/#counting-sort","title":"counting sort","text":"<ul> <li>tuple sort\uc5d0\uc11c key\uac00 \uc911\ubcf5\ub418\uae30 \ub54c\ubb38\uc5d0 hash table\ucc98\ub7fc array\uc5d0 \uc911\ubcf5\ub418\ub294 key\uc758 sequence\ub97c pointer\ub85c \ub0a8\uae30\ub294 \ubc29\ubc95   </li> </ul>"},{"location":"c_sharp/2025.04.07_class_diagram/","title":"2025.04.07 class diagram","text":""},{"location":"c_sharp/2025.04.07_class_diagram/#class-diagram","title":"class diagram","text":"<p>\"In software engineering, a class diagram in the Unified Modeling Language (UML<sup>1</sup>) is a type of static structure diagram that describes the structure of a system by showing the system's classes, their attributes, operations (or methods), and the relationships among objects.\" - Wikipedia</p> <ul> <li>class diagram\uc758 \uac01 class\ub294 \uc774\ub984 \ubd80\ubd84, attribute \ubd80\ubd84, method \ubd80\ubd84\uc73c\ub85c \uad6c\uc131\ub41c\ub2e4   </li> <li>class diagram\uc740 application\uc758 conceptual modeling \uc5d0\ub3c4 \uc0ac\uc6a9\ub418\uace0 detailed modeling, data modeling \ub4f1\uc5d0\ub3c4 \uc0ac\uc6a9\ub41c\ub2e4   </li> <li>visibility  \\(+\\): pulic, \\(-\\) : private, \\(\\#\\): protected, ~: package   </li> <li>derived property: \uc774\ub984 \uc55e\uc5d0 /\uc744 \ub123\ub294\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.07_class_diagram/#class-relation-instance","title":"class relation (instance \uac04\uc758 \uad00\uacc4)","text":"<p>  relationship\uc5d0\ub294 \uc5ec\ub7ec\uac00\uc9c0\uac00 \uc788\uc73c\uba70 \uc544\ub798\ub294 \uba87\uba87 \uc804\ud615\uc801\uc778 \uacbd\uc6b0\ub2e4   </p>"},{"location":"c_sharp/2025.04.07_class_diagram/#dependency","title":"dependency","text":"<p>\ud558\ub098\uc758 element\uc758 \ubcc0\uacbd(supplier)\uc774 \ub2e4\ub978 element(client)\uc758 \ubcc0\uacbd\uc744 \ubc1c\uc0dd\uc2dc\ud0a4\ub294 \uacbd\uc6b0    \uc8fc\ub85c supplier\ub97c constructor, method\uc758 parameter\ub85c \uc804\ub2ec \ubc1b\ub294 \uacbd\uc6b0\uc774\ub2e4    client\ub85c\ubd80\ud130 supplier\uc744 \ud5a5\ud574 \ud654\uc0b4\ud45c\ub85c \ud45c\ud604\ud55c\ub2e4   </p>"},{"location":"c_sharp/2025.04.07_class_diagram/#association","title":"Association","text":"<ul> <li>\uac01 class\uac00 \uc11c\ub85c \ud2b9\uc815\ud55c \uc5f0\uad00\uc774 \uc788\uc74c\uc744 \ud45c\ud604\ud55c\ub2e4   </li> <li>association\uc758 \uc774\ub984\uc744 \ubd99\uc77c \uc218 \uc788\uace0 \ub05d \ubd80\ubd84\uc5d0 \uc5ec\ub7ec\uac00\uc9c0 property\ub97c \ub123\uc744 \uc218 \uc788\ub2e4   </li> <li>\ub2e4\uc74c \uc138 \uc885\ub958\uac00 \uc788\ub2e4 simple association, shared aggregation, composite aggregation    </li> <li>\ud654\uc0b4\ud45c\ub97c \uc774\uc6a9\ud574\uc11c \ud45c\ud604\ud558\uba74 \ucd9c\ubc1c class\uc5d0\uc11c \ub300\uc0c1 class\ub97c run-time\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4 (unidirectional)   </li> <li>\ud654\uc0b4\ud45c\uc758 \ubc18\ub300\ucabd\uc5d0 \\(X\\)\uac00 \uc788\ub2e4\uba74 \uc811\uadfc\ud560 \uc218 \uc5c6\ub294 \ubc29\ud5a5\uc744 \uc758\ubbf8\ud55c\ub2e4   </li> <li>Aggregation    \ube44\uc5b4\uc788\ub294 \ub2e4\uc774\uc544\ubaac\ub4dc\uac00 \uc788\ub294 \ucabd\uc774 container\uac00 \ub418\ub294 has-a \uad00\uacc4\ub97c \uc758\ubbf8\ud55c\ub2e4    \ub2e4\ub978 association\uacfc \ub2ec\ub9ac \ub450 class \uc774\uc0c1\uc5d0\uc11c \ud45c\ud604\ub420 \uc218 \uc5c6\ub2e4   </li> <li>composition    aggregation \ubcf4\ub2e4 \uac15\ud55c has-a \uad00\uacc4\ub85c container\uc5d0 \uc758\ud574 life-cycle\uc774 \uacb0\uc815\ub418\ub294 \uacbd\uc6b0    container\uac00 \ud30c\uad34\ub420 \ub54c contained class\ub3c4 \ud30c\uad34\ub41c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.07_class_diagram/#inheritance","title":"inheritance","text":"<ul> <li>super-class\ub294 sub-class\uc758 generalization\uc774\ub2e4   </li> <li>sub-class\uc5d0\uc11c super-class\ub85c \ube44\uc5b4\uc788\ub294 \uc2e4\uc120 \ud654\uc0b4\ud45c\ub97c \uadf8\ub824\uc11c \ud45c\ud604\ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.07_class_diagram/#realization","title":"realization","text":"<ul> <li>interface\ub97c implement \ud558\ub294 \uacbd\uc6b0   </li> <li>concrete class\uc5d0\uc11c interface\ub85c \ube44\uc5b4\uc788\ub294 \uc810\uc120 \ud654\uc0b4\ud45c\ub97c \uadf8\ub824\uc11c \ud45c\ud604\ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.07_class_diagram/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>dependency relationships </p> <ol> <li> <p>\ud1b5\ud569 \ubaa8\ub378\ub9c1 \uc5b8\uc5b4\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\ud559\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ud45c\uc900\ud654\ub41c \ubc94\uc6a9 \ubaa8\ub378\ub9c1 \uc5b8\uc5b4\uc774\ub2e4. \uc774 \ud45c\uc900\uc740 UML\uc744 \uace0\uc548\ud55c \uac1d\uccb4 \uad00\ub9ac \uadf8\ub8f9\uc5d0\uc11c \uad00\ub9ac \ud558\uace0 \uc788\ub2e4. UML\uc740 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc9d1\uc57d \uc2dc\uc2a4\ud15c\uc758 \uc2dc\uac01\uc801 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uae30 \uc704\ud55c \ub3c4\uc548 \ud45c\uae30\ubc95\uc744 \ud3ec\ud568\ud55c\ub2e4\u00a0\u21a9</p> </li> </ol>"},{"location":"c_sharp/2025.04.11_life_cycle/","title":"2025.04.11 life cycle","text":""},{"location":"c_sharp/2025.04.11_life_cycle/#object-life-cycle","title":"object life cycle","text":""},{"location":"c_sharp/2025.04.11_life_cycle/#c-new-keyword","title":"c#\uc758 new keyword \ub3d9\uc791","text":"<p>(G.C\ub294 next (\ub610\ub294 new)\ub97c \uac00\ub9ac\ud0a4\ub294 pointer\ub97c \uad00\ub9ac\ud558\uace0 \uc788\ub2e4)  1. \ud574\ub2f9 object\uc5d0 \ud544\uc694\ud55c \uc804\uccb4 \uba54\ubaa8\ub9ac\ub97c \uacc4\uc0b0 (class\uc758 \uacbd\uc6b0 base class\ub3c4 \ud3ec\ud568)  2. managed heap\uc5d0 \ud544\uc694\ud55c \uba54\ubaa8\ub9ac\uac00 \uc788\ub294\uc9c0\ub97c \ud310\ub2e8\ud558\uc5ec \ucda9\ubd84\ud55c \uacbd\uc6b0 constructor\ub97c \uc2e4\ud589          \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud55c \uacbd\uc6b0 Garbage collection\uc744 \uc2e4\ud589\ud55c\ub2e4  3. next pointer\ub97c \ub2e4\uc74c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba54\ubaa8\ub9ac \uc704\uce58\ub85c \uc774\ub3d9 \ud6c4 caller\uc5d0\uac8c object\ub97c \uac00\ub9ac\ud0a4\ub294 pointer\ub97c \ubc18\ud658    </p>"},{"location":"c_sharp/2025.04.11_life_cycle/#garbage-collector","title":"garbage collector","text":"<ul> <li>reference variable\uc744 null\ub85c \ub9cc\ub4dc\ub294 \uac83\uc740 garbage collector\uc5d0\uac8c \uc5b4\ub5a4 \uac83\ub3c4 \uac15\uc81c\ud558\uc9c0 \uc54a\ub294\ub2e4   </li> <li>garbage collect\uc5d0\uc11c \uc81c\uc678\ub418\ub294 object   <ol> <li>compiler\uc640 (call)stack walker\uac00 \uc81c\uacf5\ud558\ub294 variable\ub4e4  The CLR makes heavy use of a technique known as stack walking (or stack crawling). This involves iterating the sequence of call frames for a particular thread, from the most recent (the thread\u2019s current function) back down to the base of the stack. </li> <li>runtime\uc5d0 garbage collection\uc774 \uc2e4\ud589\ub418\ub294 \uc2dc\uc810\uc5d0 \uc811\uadfc \uac00\ub2a5\ud55c managed object\uc758 handle\ub4e4   </li> <li>static data\ub4e4   </li> </ol> </li> <li>garbage collection\uc774 \uc2e4\ud589\ub420 \ub54c G.C\ub294 object graph\ub97c \uc0dd\uc131\ud574 object\uc5d0 \uc811\uadfc \uac00\ub2a5\ud55c \uac83\uc744 \ud310\ub2e8\ud55c\ub2e4  </li> <li>client(workstation)\uc5d0\uc11c\uc758 garbage collection\uc740 application thread\uc5d0\uc11c \uc2e4\ud589\uc804\uacfc \ub3d9\uc77c\ud55c \uc6b0\uc120\uc21c\uc704\ub85c \uc2e4\ud589\ub41c\ub2e4 (\ub2e4\ub978 thread\ub4e4\uacfc \uacbd\uc7c1)   </li> <li>G.C\ub294 background garbage collection\uc73c\ub85c grade 2,3(\uac00\uc7a5 \uc624\ub798\ub41c object\ub4e4)\ub97c \ucc98\ub9ac\ud568\uacfc \ub3d9\uc2dc\uc5d0 grade 0,1\uc758 object\ub4e4\uc744 \ucc98\ub9ac\ud568\uc73c\ub85c GC stoptime\uc744 \ucd5c\uc801\ud654 \ud55c\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.11_life_cycle/#garbage-collection","title":"garbage collection \uc2e4\ud589\uc744 \uace0\ub824\ud560 \uc0c1\ud669","text":"<ul> <li>\ud2b9\uc815 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\uae30 \uc804 \uadf8 \ub3c4\uc911\uc5d0 garbage collection\uc758 \uc601\ud5a5\uc744 \ubc1b\uae30\ub97c \uc6d0\ud558\uc9c0 \uc54a\uc744 \ub54c   </li> <li>\ud2b9\ubcc4\ud788 \ub9ce\uc740 object\ub4e4\uc744 \ud560\ub2f9\ud55c \ub4a4 \ucd5c\ub300\ud55c \uba54\ubaa8\ub9ac\ub97c \ud655\ubcf4\ud558\uae30 \uc704\ud574\uc11c   </li> <li>GC.Collect\ub97c \uc2e4\ud589\ud558\uace0 GC.WaitForPedingFinalizers\ub97c \uc2e4\ud589    </li> </ul>"},{"location":"c_sharp/2025.04.11_life_cycle/#finalize","title":"finalize","text":"<p>c++\uc5d0\uc11c\uc758 deconstructor\uc640 \uc0ac\uc6a9\ubc95\uc774 \uac19\ub2e4 \ud558\uc9c0\ub9cc G.C\uc5d0 \uc758\ud574 \uc791\ub3d9\ub418\ubbc0\ub85c \uc2e4\ud589 \uacfc\uc815\uc774 \ub2e4\ub974\ub2e4   finalize\uc5d0\uc11c class\uc758 reference type\uc5d0 \uc811\uadfc\ud558\ub294 \uac83\uc740 \uc548\uc804\ud558\uc9c0 \uc54a\ub2e4  1.  object\uc758 \uba54\ubaa8\ub9ac\ub97c \ud560\ub2f9\ud560 \ub54c finalize\uac00 \uc788\ub294 object\ub294 \ub530\ub85c finalization queue\uc5d0 \ub4f1\ub85d\ud55c\ub2e4  2.  G.C\uac00 \uba54\ubaa8\ub9ac\ub97c \ud574\uc81c\ud560 \ub54c finalization queue\uc758 object\ub97c f-reachable table\ub85c \ubcf5\uc0ac\ud55c\ub2e4  3.  \uc774\ud6c4 \ub2e4\uc74c garbage collection \uc2dc\uc810\uc5d0 \uc0c8\ub85c\uc6b4 thread\uac00 \uc0dd\uc131\ub418 \uac01 object\uc758 finalize\ub97c \uc2e4\ud589\ud55c\ub2e4    </p>"},{"location":"c_sharp/2025.04.11_life_cycle/#idisposable","title":"IDisposable","text":"<ul> <li>finalize\uc640\ub294 \ub2ec\ub9ac G.C\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\uace0 object\uc758 reference\uac00 \ud574\uc81c\ub420 \ub54c user code\uc5d0\uc11c \uba85\uc2dc\uc801\uc73c\ub85c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ub354\uc6b1 \ube60\ub974\uace0 finalization queue\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub294\ub2e4   </li> <li>interface\uc774\uae30 \ub54c\ubb38\uc5d0 value type\uc778 struct\ub3c4 \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud558\ub2e4   </li> <li>object \ub0b4\uc758 \ubaa8\ub4e0 reference type\uc5d0 \uc548\uc804\ud558\uac8c \uc811\uadfc\ud560 \uc218 \uc788\ub2e4    </li> </ul>"},{"location":"c_sharp/2025.04.13_generic/","title":"2025.04.13 generic","text":""},{"location":"c_sharp/2025.04.13_generic/#generic","title":"generic","text":""},{"location":"c_sharp/2025.04.13_generic/#boxing-unboxing","title":"boxing, unboxing","text":"<ul> <li>boxing    value type\uc744 System.Object\ub85c \uba85\uc2dc\uc801\uc73c\ub85c \ubcc0\ud658\ud558\uba74 heap\uc5d0 \uac12\uc744 \ubcf5\uc0ac\ud558\uc5ec \uc800\uc7a5\ud558\uac8c \ub41c\ub2e4   \uadf8\ud6c4 \uc0ac\uc6a9\uc790\uc5d0\uac8c reference\ub97c \ubc18\ud658\ud574 \uc900\ub2e4   </li> <li>unboxing    CLR\uc740 boxing \ub41c object\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub9c8\ub2e4 data type\uc774 boxing \ud558\uae30 \uc804\uacfc \uac19\uc740\uc9c0 \uac80\uc99d\ud558\uace0 stack\uc5d0 \uac12\uc744 \ubcf5\uc0ac\ud55c \ud6c4 \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4    unboxing\uc740 casting\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 boxing \ud588\ub358 data type\uc73c\ub85c\ub9cc \uac00\ub2a5\ud558\ub2e4   </li> </ul>"},{"location":"c_sharp/2025.04.13_generic/#dictionary","title":"dictionary","text":"<ul> <li>dictionary initializer  <code>C#     // index style     Dictionary&lt;string, Person&gt; people = new Dictionary&lt;string, Person&gt;() {         [\"Homer\"] = new Person { FirstName = \"Homer\", LastName = \"Simpson\", Age = 47 }, \u00a0\u00a0\u00a0\u00a0[\"Marge\"] = new Person { FirstName = \"Marge\", LastName = \"Simpson\", Age = 45 }, \u00a0\u00a0\u00a0\u00a0[\"Lisa\"] = new Person { FirstName = \"Lisa\", LastName = \"Simpson\", Age = 9 }     };     // tuple style     Dictionary&lt;string, Person&gt; people = new Dictionary&lt;string, Person&gt;() {         { \"Homer\", new Person { FirstName = \"Homer\", LastName = \"Simpson\", Age = 47 } },         { \"Marge\", new Person { FirstName = \"Marge\", LastName = \"Simpson\", Age = 45 } },         { \"Lisa\", new Person { FirstName = \"Lisa\", LastName = \"Simpson\", Age = 9 } } \u00a0\u00a0};</code></li> </ul>"},{"location":"c_sharp/2025.04.13_generic/#observable-collection","title":"observable collection","text":"<ul> <li>CollectionChanged event\ub97c \ud1b5\ud574\uc11c \ub370\uc774\ud130 \ubcc0\uacbd\uc744 \uc54c\ub824\uc904 \uc218 \uc788\ub2e4    (\uc0c8\ub85c\uc6b4 \ud56d\ubaa9\uc774 \ucd94\uac00\ub418\uac70\ub098 \uae30\uc874 \ud56d\ubaa9\uc758 \uc0ad\uc81c, \uc774\ub3d9, collection \uc804\uccb4\uc758 \ubcc0\uacbd\uc774 \uc788\uc744 \ub54c \uc2e4\ud589\ub428, \ud558\ub098\uc758 \ud56d\ubaa9\uc758 \ub0b4\uc6a9\uc774 \ubcc0\uacbd\ub420 \ub54c\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc74c)       ```C#     class Person {       public string FirstName;       public string LastName;       public int Age;     }</li> </ul> <p>static void people_CollectionChanged(object sender,       \u00a0\u00a0\u00a0\u00a0System.Collections.Specialized.NotifyCollectionChangedEventArgs e) {     Console.WriteLine(\"Action for this event: {0}\", e.Action);         if (e.Action == NotifyCollectionChangedAction.Remove)\u00a0{             // They removed something.             foreach (Person p in e.OldItems) {                 // handle removed item             }          if (e.Action == NotifyCollectionChangedAction.Add)\u00a0{             foreach (Person p in e.NewItems) {                 // Now show the NEW items that were inserted.             }         }     }</p> <pre><code>ObservableCollection&lt;Person&gt; people = new ObservableCollection&lt;Person&gt;() {\n  new Person{ FirstName = \"Peter\", LastName = \"Murphy\", Age = 52 }\n</code></pre> <p>};     people.CollectionChanged += people_CollectionChanged;     // trigger event     people.Add(         new Person{ FirstName = \"Kevin\", LastName = \"Key\", Age = 48 });     // not trigger event     people[0].FirstName= \"Bart\";     ```</p>"},{"location":"c_sharp/2025.04.13_generic/#generic-pattern-matching","title":"generic pattern matching","text":"<ul> <li>generic variable\uc5d0 \ub300\ud574\uc11c switch\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4  <code>C#     struct Point&lt;T&gt; {         T x;         T y;     }     static void PatternMatching&lt;T&gt;(Point&lt;T&gt; p) {         switch (p) {             case Point&lt;string&gt; pString:                 Console.WriteLine(\"Point is based on strings\");                 return;             case Point&lt;int&gt; pInt:                 Console.WriteLine(\"Point is based on ints\");                 return;         \u00a0\u00a0}         }</code></li> </ul>"},{"location":"c_sharp/2025.04.13_generic/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>INotifyPropertyChanged </p>"},{"location":"dev/2025.03.20_Git/","title":"2025.03.20 Git","text":""},{"location":"dev/2025.03.20_Git/#git","title":"Git","text":"<ul> <li>working directory    local\uc5d0\uc11c \uc791\uc5c5\uc911\uc778 \uacf5\uac04    repository Git\uc774 \uad00\ub9ac\ud558\uace0 \uc788\ub294 \uacf5\uac04    commit: working dir -&gt; repository    checkout: repository -&gt; working dir   </li> <li>stage    working dir\uc5d0\uc11c \ub2e4\uc74c commmit\uc5d0 repository\uc5d0 \uc801\uc6a9\ud558\ub824\ub294 \uc791\uc5c5 \ub0b4\uc6a9\uc744 \ubaa8\uc544\ub450\ub294 \uacf5\uac04 (Git add)   </li> <li>snapshot    Git\uc774 repository\uc5d0\uc11c \uc791\uc5c5\ubb3c\uc744 \uad00\ub9ac\ud558\ub294 \ub3c4\uad6c    snapshotA\ub97c \uc0dd\uc131\ud55c commit_1 \uc774\ud6c4\uc5d0    \uc0c8\ub85c\uc6b4 commit_2\ub97c \uc0dd\uc131\ud558\uba74 \uc0c8\ub85c\uc6b4 snapshotB\uac00 \ub9cc\ub4e4\uc5b4\uc9c4\ub2e4    snapshotA\ub294 parent\uac00 \ub418\uace0 snapshotB\ub294 child\uac00 \ub41c\ub2e4    snapshotB\ub294 snapshotA\uc5d0\uc11c\uc758 \ubcc0\uacbd\ub0b4\uc6a9\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4   </li> <li>branch    \uc791\uc5c5 \ub0b4\uc6a9\uc774 commit\uc5d0 \uc758\ud574 snapshot\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \ud558\ub098\uc758 \ud750\ub984    label\uc744 \uac00\uc9c0\uace0 \ud2b9\uc815 commit\uc744 \uac00\ub9ac\ud0a4\uace0 \uc788\ub294 \ud3ec\uc778\ud130\uc774\ub2e4   </li> <li>HEAD    \ud604\uc7ac working dir\uc774 \uc0c8\ub85c\uc6b4 commit\uc744 \uc0dd\uc131\ud560 \ub54c parent\uac00 \ub418\ub294 commit\uc744 \uac00\ub9ac\ud0a4\ub294 \ud3ec\uc778\ud130\uc774\ub2e4   </li> </ul>"},{"location":"dev/2025.03.20_Git/#branch","title":"branch","text":"<ul> <li>snapshot\uc5d0 \ub610 \ub2e4\ub978 child\ub97c \ub9cc\ub4e4\uc5b4\uc11c \uc0c8\ub85c\uc6b4 stream\uc744 \ub9cc\ub4dc\ub294 \uac83    \ub2e4\ub978 branch\uc5d0\uc11c \uc6d0\ud558\ub294 \ud30c\uc77c\ub9cc\uc744 checkout \ud560 \uc218 \uc788\ub2e4  <pre><code>git diff &lt;branch&gt; -- &lt;path&gt;\ngit checkout &lt;branch&gt; -- &lt;path&gt;\n</code></pre></li> </ul>"},{"location":"dev/2025.03.20_Git/#merge","title":"merge","text":"<ul> <li>\uc0ac\uc6a9 \uc608\uc2dc    \ud558\ub098\uc758 branch\uc5d0\uc11c\uc758 \uc791\uc5c5\uc744 \ub05d\ub0b4\uc11c \uadf8 \ub0b4\uc6a9\uc744 \uc801\uc6a9\ud558\uace0 \ub354 \uc774\uc0c1 \uadf8 branch\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ub824 \ud560 \ub54c   </li> <li>fast forward merge    checked out branch (HEAD)\uac00 \ub300\uc0c1\uc774 \ub418\ub294 branch\uac00 \uc0dd\uc131\ub41c \uc774\ud6c4 \ubcc0\ub3d9 \uc0ac\ud56d\uc774 \uc5c6\ub294 \uacbd\uc6b0    Git\uc740 \ub2e8\uc21c\ud788 \ud3ec\uc778\ud130\ub97c \ub300\uc0c1 branch\ub85c \uc62e\uae34\ub2e4    old branch -&gt; current branch   </li> <li>no-conflict merge    \uac01 \ud30c\uc77c\uc5d0 \uc11c\ub85c \ub2e4\ub978 \uc791\uc5c5 \ub0b4\uc6a9\uc774 \uc5c6\ub294 \uacbd\uc6b0     Git\uc740 \uc0c8\ub85c\uc6b4 commit\uc744 \uc0dd\uc131\ud55c\ub2e4 \uc0c8\ub85c\uc6b4 snapshot\uc740 \ub450\uac00\uc9c0\uc758 parent snapshot\uc744 \uac00\uc9c4\ub2e4   </li> <li>conflict merge    \uac19\uc740 \ud30c\uc77c\uc5d0 \ub300\ud574 \ub450 branch \ubaa8\ub450 \ubcc0\uacbd\uc774 \uc788\ub294 \uacbd\uc6b0    Git\uc740 commit\uc744 \ud558\uc9c0 \uc54a\uace0 \ucda9\ub3cc\uc774 \uc788\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc744 working dir\uc5d0 \ub0a8\uae34\ub2e4    \uc0ac\uc6a9\uc790\uac00 \ucda9\ub3cc\uc744 \uc5c6\uc560\uace0 commit \ud558\uac70\ub098 abort \ud560 \uc218 \uc788\ub2e4  <pre><code>    git merge -abort\n</code></pre></li> </ul>"},{"location":"dev/2025.03.20_Git/#rebase","title":"rebase","text":"<ul> <li>\uc0ac\uc6a9 \uc608\uc2dc    \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc744 \uc704\ud55c feature branch \uc640 main branch \ub450 \uacf3\uc5d0\uc11c \uc791\uc5c5\uc774 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ub418\uace0 \uc788\uc744 \ub54c   </li> <li>\uc8fc\uc758\uc0ac\ud56d    remote repository\ub97c \ubc18\uc601\ud558\ub294 local branch\ub97c rebase \ud558\uba74 \ub354\uc774\uc0c1 remote repository\ub97c \ubc18\uc601\ud558\uc9c0 \ubabb\ud558\uac8c \ub418\uc5b4 push\uc5d0 \ubb38\uc81c\uac00 \uc0dd\uae34\ub2e4   </li> <li>\ub450\uac1c\uc758 branch\uac00 \uac08\ub77c\uc9c0\ub294 \ubd80\ubd84\uc744 \uc62e\uae30\ub294 \uac83     feature branch\uc5d0\uc11c main branch\uc758 \ubcc0\uacbd\uc0ac\ud56d\uc5d0 \ub9de\uac8c update \ud560 \uc218 \uc788\uc74c   </li> <li>\uc791\ub3d9 \ubc29\uc2dd    <pre><code>    A - - B - - C - D  //(main)   \n            \\ - E - F       //(feature)   \n</code></pre>   feature branch F\uc5d0\uc11c rebase\ub97c \ud558\uba74           Git\uc740 feature branch E \uc774\uc804\uc5d0 B - C - D\uc758 commit\uc744 \ubc18\uc601\ud558\uc5ec           A\uc5d0\uc11c \uac08\ub77c\uc84c\ub358 branch\ub97c D\uc5d0\uc11c \uac08\ub77c\uc9c4 \uac83\uc73c\ub85c \ubcc0\uacbd\ud568    \uc774 \uacfc\uc815\uc5d0\uc11c \ucda9\ub3cc\uc774 \ubc1c\uc0dd\ud558\uba74          Git\uc740 \uadf8 \ucda9\ub3cc\uc774 working dir\uc5d0 \ub0a8\uaca8\uc9c4 \uc0c1\ud0dc\uc5d0\uc11c \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud574\uacb0\ud558\uac8c \ud568      interactively rebases. <pre><code>    git rebase -i -- \n</code></pre></li> </ul>"},{"location":"dev/2025.03.20_Git/#cherry-pick","title":"cherry pick","text":"<ul> <li>\uc0ac\uc6a9\uc608\uc2dc    merge, rebase \ud558\uc9c0 \uc54a\uace0 \uc6d0\ud558\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc744 main \ub610\ub294 \ud604\uc7ac checked out branch\uc5d0 \uc801\uc6a9\uc2dc\ud0a4\ub824 \ud560 \ub54c   </li> <li>\uc791\ub3d9\ubc29\uc2dd    Git\uc740 \uc0ac\uc6a9\uc790\uac00 \uc120\ud0dd\ud55c \ubcc0\uacbd\ub0b4\uc6a9\uc744 \uc801\uc6a9\ud574 \uc0c8\ub85c\uc6b4 commit\uc744 \ub9cc\ub4e0\ub2e4   </li> </ul>"},{"location":"dev/2025.03.20_Git/#revert","title":"revert","text":"<ul> <li>\uc0ac\uc6a9\uc608\uc2dc    \uc774\uc804\uc5d0 commit \ud588\ub358 snapshot\uc73c\ub85c branch\ub97c \ubcc0\uacbd\ud558\uace0 \uc2f6\uc744 \ub54c   </li> <li>\uc791\ub3d9\ubc29\uc2dd    Git\uc740 \uc774\uc804\uc758 snapshot\uacfc \ub3d9\uc77c\ud558\uac8c \ub418\ub3c4\ub85d \uc0c8\ub85c\uc6b4 commit\uc744 \ub9cc\ub4e0\ub2e4   </li> </ul>"},{"location":"dev/2025.03.20_Git/#fetch","title":"fetch","text":"<ul> <li>\uc0ac\uc6a9\uc608\uc2dc    remote repository\uc758 \uc791\uc5c5 \ub0b4\uc6a9\uc744 local\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc744 \ub54c   </li> <li>\uc791\ub3d9\ubc29\uc2dd    fetch\ub97c \ud558\uba74 Git\uc740 FETCH_HEAD\ub97c \ub9cc\ub4e4\uc5b4 remote\uc758 HEAD\uc640 \uac19\uc740 snapshot\uc744 \uac00\ub9ac\ud0a4\uac8c \ud55c\ub2e4 \uc774\ud6c4 checkout\uc744 \ud55c\ub2e4\uba74 local HEAD\ub3c4 \ub3d9\uc77c\ud55c snapshot\uc744 \uac00\ub9ac\ud0a4\uac8c \ub41c\ub2e4   </li> <li>remote\uc640 local\uc740 \uc11c\ub85c \ub2e4\ub978 repository\uc774\uae30 \ub54c\ubb38\uc5d0 Git\uc740 \uad00\uacc4\ub97c \uc815\ud558\uc9c0 \uc54a\uace0 \ub611\uac19\uc774 \ucde8\uae09\ud55c\ub2e4   </li> <li>fetch \ud6c4\uc5d0 FETCH_HEAD\ub97c \uc0ac\uc6a9\ud574\uc11c local branch\uc640 \ub3d9\uc77c\ud558\uac8c \ubaa8\ub4e0 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4   </li> <li>Git\uc740 remote repository\uc758 \uc791\uc5c5 \ub0b4\uc6a9\uc744 local\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5\ud558\uac8c \ub9cc\ub4e4\uace0 remote repository\uc5d0\ub9cc \uc874\uc7ac\ud558\ub294 branch\ub3c4 checkout, merge\ub4f1\uc744 \ud560 \uc218 \uc788\uac8c \ud55c\ub2e4   </li> <li>pull\uc740 fetch -&gt; merge\uc774\ub2e4   </li> </ul>"},{"location":"dev/2025.03.20_Git/#push","title":"push","text":"<ul> <li>\uc0ac\uc6a9\uc608\uc2dc    local\uc758 \uc791\uc5c5\ub0b4\uc6a9\uc744 remote\uc5d0 \uc801\uc6a9\uc2dc\ud0a4\uace0 \uc2f6\uc744 \ub54c   </li> <li>push\ub294 remote repository\uc5d0\uc11c local repository\ub97c fetch \ud55c \uc774\ud6c4 \ubcc0\uacbd\uc0ac\ud56d\uc744 \uc801\uc6a9\uc2dc\ud0a4\ub294 \uac83\uc774\ub2e4   </li> <li>\uc791\ub3d9\ubc29\uc2dd    Git\uc740 remote repository\uc5d0\uc11c local\uc744 fetch \ud558\uac8c \ud55c \ud6c4 \ubcc0\uacbd \ub0b4\uc6a9\uc744 fast-forward merge \ud55c\ub2e4 \uc131\uacf5\ud55c\ub2e4\uba74 local\uc5d0 \uc788\ub294 remote repository\ub97c \ub098\ud0c0\ub0b4\ub294 branch\ub3c4 \uc5c5\ub370\uc774\ud2b8 \ud55c\ub2e4   </li> <li>push\uac00 \ubd88\uac00\ub2a5 \ud560 \ub54c    fast-forward merge\uac00 \ubd88\uac00\ub2a5 \ud560 \ub54c\ub294 abort \ub418\uace0 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc801\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4    local\uc5d0\uc11c remote repository\ub97c fetch \ud558\uace0 merge \ud55c \uc774\ud6c4 \ub2e4\uc2dc push \ud574\uc57c \ud55c\ub2e4</li> </ul> <p>LazyGit :terminal Git util   </p> <p>LazyGit neo vim plugin</p>"},{"location":"linear_algebra/2025.03.16_%EB%B2%A1%ED%84%B0%2C%ED%96%89%EB%A0%AC/","title":"2025.03.16 \ubca1\ud130,\ud589\ub82c","text":""},{"location":"linear_algebra/2025.03.16_%EB%B2%A1%ED%84%B0%2C%ED%96%89%EB%A0%AC/#_1","title":"\ubca1\ud130","text":"<ul> <li>\uc885\ubca1\ud130\ub97c \uc4f0\ub294 \uc774\uc720    \ud568\uc218\ub97c f(x)\ub85c \ub098\ud0c0\ub0b4\ub294 \uac83\uacfc \uac19\uc774 \ud589\ub82c A\ub85c \ub098\ud0c0\ub0bc \uc218 \uc788\ub294 \ud568\uc218\ub97c \ubca1\ud130 x\uc5d0 \uacf1\ud558\ub294 \uac83\uc744 Ax\ub85c \ud45c\ud604</li> <li>\ubca1\ud130\uc758 \ud45c\ud604       3\ucc28\uc6d0 \uc885\ubca1\ud130\ub97c \uac00\ub85c\ub85c \ud45c\ud604 (1, 2, 3)<sup>T</sup>  (\ud6a1\ubca1\ud130\ub97c Transpose)     \ubca1\ud130\ub294 \uad75\uc740 \uae00\uc528\ub85c x, y \uc77c\ubc18 \ubcc0\uc218\ub294 x, y\ub85c \ud45c\ud604   </li> <li>\ubca1\ud130\uc640 \uc88c\ud45c    \ubca1\ud130\uc758 \uc88c\ud45c \ud45c\ud604\uc740 \uae30\uc800\uac00 \ub418\ub294 \ubca1\ud130\uc5d0 \ub530\ub77c \ub2e4\ub974\uac8c \ud45c\ud604\ud560 \uc218 \uc788\ub2e4     \uc77c\ubc18\uc801\uc778 \uc88c\ud45c \ud45c\ud604\uc740 x\ucd95\uacfc \ud3c9\ud589\ud55c \ubca1\ud130 (1, 0)<sup>T</sup> \uc640 y\ucd95\uacfc \ud3c9\ud589\ud55c \ubca1\ud130 (0, 1)<sup>T</sup>\ub85c \ud45c\ud604\ud55c \uac83\uc774\ub2e4   </li> </ul>"},{"location":"linear_algebra/2025.03.16_%EB%B2%A1%ED%84%B0%2C%ED%96%89%EB%A0%AC/#_2","title":"\uc120\ud615\uacb0\ud569","text":"<p>\ud558\ub098\uc758 \ubca1\ud130\ub97c (\uae30\uc800 \ubca1\ud130 * \uc2e4\uc218)\ub4e4\uc758 \ud569\uc73c\ub85c \ud45c\ud604\ud55c \uac83      \ubca1\ud130 A(2, 3)<sup>T</sup>\ub97c x\ucd95 \uae30\uc800 \ubca1\ud130 x (1, 0)<sup>T</sup> \uc640 y\ucd95 \uae30\uc800 \ubca1\ud130 y (0, 1)<sup>T</sup>\ub97c \uc774\uc6a9\ud574 \ub098\ud0c0\ub0b8 \uac83\uacfc \uac19\ub2e4    A = (2, 3)<sup>T</sup> = 2 * (1, 0)<sup>T</sup> + 3 * (0, 1)<sup>T</sup>    \ubca1\ud130\ub97c \uc88c\ud45c\ub97c \uc774\uc6a9\ud574 \ud45c\ud604\ud55c \uac83\ub3c4 \uc120\ud615 \uacb0\ud569\uc774\ub2e4    </p>"},{"location":"linear_algebra/2025.03.16_%EB%B2%A1%ED%84%B0%2C%ED%96%89%EB%A0%AC/#_3","title":"\ud589\ub82c","text":"<ul> <li>\ub9c8\ud06c \ub2e4\uc6b4 \ud589\ub82c \ud45c\ud604     pmatrix \uc790\ub9ac\uc5d0 matrix, bmatrix, Bmatrix \ub4f1\uc73c\ub85c\ub3c4 \uac00\ub2a5 <pre><code>    $\\begin{pmatrix}1&amp;2\\\\3&amp;4\\\\ \\end{pmatrix}$\n</code></pre></li> </ul>"},{"location":"linear_algebra/2025.03.23_%ED%96%89%EB%A0%AC/","title":"2025.03.23 \ud589\ub82c","text":""},{"location":"linear_algebra/2025.03.23_%ED%96%89%EB%A0%AC/#_1","title":"\ud589\ub82c","text":"<ul> <li>mapping    \ud589\ub82c (matrix)\uc740 mapping, morphism\uc758 \uc758\ubbf8\uc774\ub2e4   </li> <li>\ud589\ub82c\uc758 2\ucc28\uc6d0 \uacf5\uac04 \ubcc0\ud658    \ud589\ub82c A  \\(\\begin{pmatrix}a11&amp;a12\\\\a21&amp;a22\\\\ \\end{pmatrix}\\)\uc5d0 \uc758\ud55c \uacf5\uac04 \ubcc0\ud658\uc740     a<sub>11</sub>, a<sub>21</sub>\ub294 ( 1, 0 )<sup>T</sup>\uc758 \ubaa9\uc801\uc9c0\uac00, a<sub>12</sub>, a<sub>22</sub>\ub294 ( 0, 1 )<sup>T</sup>\uc758 \ubaa9\uc801\uc9c0\uac00 \ub41c\ub2e4   </li> <li>m x n \ud589\ub82c A\ub294 n\ucc28\uc6d0\uc744 m\ucc28\uc6d0\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4   </li> <li>\ud589\ub82c\uc758 \uacf1\uc740 \ubcc0\ud658\uc758 \ud569\uc131\uc774\ub2e4     \ud589\ub82c B\uc640 \ud589\ub82c A\uc758 \uacf1 BA = Z\ub77c\uace0 \ud55c\ub2e4\uba74    \ud589\ub82c Z\ub294 \ubca1\ud130 x\ub97c \ud589\ub82c B\uc5d0 \uc758\ud574 \uc774\ub3d9\ud55c \uacb0\uacfc\ub97c \ub2e4\uc2dc \ud589\ub82c A\uc5d0 \uc758\ud574 \uc774\ub3d9\ud558\ub294 \ubcc0\ud658\uc774\ub2e4   </li> </ul>"},{"location":"linear_algebra/2025.03.27_%ED%96%89%EB%A0%AC/","title":"2025.03.27 \ud589\ub82c","text":""},{"location":"linear_algebra/2025.03.27_%ED%96%89%EB%A0%AC/#_1","title":"\uc601\ud589\ub82c","text":"<ul> <li>m x n \uc601\ud589\ub82c\uc740 O<sub>m,n</sub>\uc73c\ub85c n\ucc28 \uc815\ubc29\uc601\ud589\ub82c\uc740 O<sub>n</sub>\uc73c\ub85c \ud45c\uae30   </li> <li>\uc601\ud589\ub82c\uc740 \ubaa8\ub4e0 \uac83\uc744 \uc6d0\uc810\uc73c\ub85c \uc774\ub3d9\uc2dc\ud0a4\ub294 \uc0ac\uc0c1\uc774\ub2e4     \uc601\ubca1\ud130\uac00 o\uc77c \ub54c \uc784\uc758\uc758 \ubca1\ud130 x\uc5d0 \ub300\ud574 Ox = o \uc774\ub2e4   </li> <li>\uc218\uc640\ub294 \ub2e4\ub974\uac8c \\(A \\neq O, B \\neq O\\) \uc774\ub354\ub77c\ub3c4 AB = O \uc774\uac70\ub098 A<sup>2</sup> = O \uc77c \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"linear_algebra/2025.03.27_%ED%96%89%EB%A0%AC/#_2","title":"\ub2e8\uc704\ud589\ub82c","text":""},{"location":"unity/2025.04.14_life_cycle/","title":"2025.04.14 life cycle","text":""},{"location":"unity/2025.04.14_life_cycle/#life-cycle","title":"life cycle","text":""},{"location":"unity/2025.04.14_life_cycle/#_1","title":"\uc804\uccb4\uc801\uc778 \uc21c\uc11c","text":"<ol> <li>Initialization: Awake -&gt; OnEnable -&gt; Start   </li> <li>Physics: FixedUpdate -&gt; OnAnimatorMove -&gt; OnTrigger -&gt; OnCollision   </li> <li>Input event: OnMouse   </li> <li>Game logic: Update -&gt; OnAnimatorMove -&gt; Last   </li> <li>Scene rendering: OnBecameVisible -&gt; Render ( OnWill -&gt; OnPre -&gt; On -&gt; OnPost ) -&gt; OnRenderImage   </li> <li>Gizmo rendering   </li> <li>GUI rendering: OnGUI   </li> <li>Frame end   </li> <li>Pausing: OnApplicationPause   </li> <li>Decommisioning: OnApplicationQuit -&gt; OnDisable -&gt; OnDestroy   </li> <li>FixedUpdate\ub294 \uac01 \ud504\ub808\uc784\ub2f9 \ub192\uc740 frame rates\uc5d0\uc11c\ub294 \ub354 \uc801\uac8c, \ub0ae\uc740 frame rates\uc5d0\uc11c\ub294 \ub354 \uc790\uc8fc \uc2e4\ud589\ub41c\ub2e4   </li> <li>OnApplicationPause\ub294 pause\uac00 \ubc1c\uc0dd\ub41c frame \uc774\ud6c4\uc5d0 \uc2e4\uc81c pause\uac00 \uc2dc\uc791\ub418\ub294 frame \uc774\uc804\uc5d0 \uc2e4\ud589\ub41c\ub2e4   </li> <li>\uc608\uc678\uc801\uc778 \uacbd\uc6b0\ub97c \uc81c\uc678\ud558\uace0 \uc11c\ub85c \ub2e4\ub978 GameObject\ub4e4\uc758 \uac19\uc740 event function \uc0ac\uc774\uc758 \uc21c\uc11c\uc5d0 \uc758\uc874\ud558\uba74 \uc548\ub41c\ub2e4 (\ubcf4\uc7a5\ub418\uc9c0 \uc54a\uc74c)   </li> <li>\uac19\uc740 MonoBehaviour script\uc758 \uc21c\uc11c\ub294 \uc815\ud560 \uc218 \uc5c6\uc9c0\ub9cc \uc11c\ub85c \ub2e4\ub978 script\uc758 \uc21c\uc11c\ub294 \uc870\uc815\ud560 \uc218 \uc788\ub2e4 Script Execution Order: \uac19\uc740 scene \ub0b4\uc5d0\uc11c \uc801\uc6a9\ub428   </li> </ol>"},{"location":"unity/2025.04.14_life_cycle/#initilization","title":"initilization","text":"<ul> <li>Start\ub294 script \ub9c8\ub2e4 1\ubc88\ub9cc \uc2e4\ud589\ub41c\ub2e4   </li> <li>\uac19\uc740 object \ub0b4\uc5d0\uc11c Awake\ub294 \ud56d\uc0c1 OnEnable \uc804\uc5d0 OnEnable\uc740 \ud56d\uc0c1 Start \uc804\uc5d0 \uc2e4\ud589\ub418\ub294 \uac83\uc774 \ubcf4\uc7a5\ub418\uc9c0\ub9cc \uc2dc\uc791\uc2dc GameObject\uac00 active\uac00 \uc544\ub2c8\ub77c\uba74 Awake\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294\ub2e4   </li> <li>runtime\uc5d0 instantiate \ud55c object\ub97c \uc81c\uc678\ud558\uba74 Start \uc804\uc5d0 \ubaa8\ub4e0 object\uc758 Awake, OnEnable\uc774 \uc2e4\ud589\ub41c\ub2e4   </li> <li>Scene\uc758 \ubaa8\ub4e0 object \ub4e4\uc758 OnEnable \uc774\ud6c4\uc640 Start \uc774\uc804\uc5d0 sceneLoaded\uac00 \uc2e4\ud589\ub41c\ub2e4   </li> </ul>"},{"location":"unity/2025.04.14_life_cycle/#frame","title":"frame","text":"<ul> <li>\uccab\ubc88\uc9f8 frame \uc804\uc5d0 script instance\uac00 enabled \ub77c\uba74 Start\uac00 \uc2e4\ud589\ub41c\ub2e4   </li> <li>\uac8c\uc784\uc774 pause \ub418\uc5c8\ub2e4\uba74 \ud574\ub2f9 frame\uacfc \uadf8 \ub2e4\uc74c frame \uc0ac\uc774\uc5d0 OnApplicationPause\uac00 \uc2e4\ud589\ub41c\ub2e4   </li> </ul>"},{"location":"unity/2025.04.14_life_cycle/#update","title":"update","text":"<ul> <li>\uc77c\ubc18\uc801\uc73c\ub85c \ub300\ubd80\ubd84\uc758 logic\uc740 Update\uc5d0\uc11c \ucc98\ub9ac\ud55c\ub2e4   </li> <li>FixedUpdate\ub294 frame rates\uc5d0 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\uace0 \uc77c\uc815\ud55c \uac04\uaca9\uc73c\ub85c \uc2e4\ud589\ub41c\ub2e4    \uc6c0\uc9c1\uc784\uc744 \uacc4\uc0b0\ud560 \ub54cTime.deltaTime\uc73c\ub85c \uc870\uc815\ud560 \ud544\uc694\uac00 \uc5c6\uc74c   </li> <li>script\uc5d0\uc11c \uc9c1\uc811 \uc124\uc815\ud55c Time.fixedDeltaTime\uc5d0 \uc758\ud574 \uc2e4\ud589\ub428   </li> <li>LateUpdate\ub294 Update\uac00 \uc2e4\ud589\ub41c \uc774\ud6c4\uc5d0 \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ub9cc\uc57d \uce90\ub9ad\ud130\uc758 \uc6c0\uc9c1\uc784\uc744 Update\uc5d0\uc11c \ubcc0\uacbd\ud588\ub2e4\uba74 \uce90\ub9ad\ud130\ub97c \ub530\ub77c\uac00\ub294 \uce74\uba54\ub77c\ub97c LateUpdate\uc5d0\uc11c \uc870\uc815\ud560 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.14_life_cycle/#render","title":"render","text":"<ul> <li>OnPreCull, OnPreRender, OnPostRender, OnRenderImage \ub4e4\uc740 enabled \uc0c1\ud0dc\uc778 camera object\uc5d0 \uc788\ub294 MonoBehaviour\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub41c\ub2e4 (\ub2e4\ub978 object\ub294 delegate \uc0ac\uc6a9)   </li> <li>OnRenderObject\uc5d0\uc11c\ub294 DrawMeshNow\ub97c \uc774\uc6a9\ud574 custom geometry\ub97c \uadf8\ub9b4 \uc218 \uc788\ub2e4   </li> <li>OnRenderImage\uc5d0\uc11c\ub294 Post-processing Effects\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.14_life_cycle/#coroutines","title":"coroutines","text":"<p>(\uc0ac\uc6a9 \uc5f0\uc2b5\uc774 \ud544\uc694)  - yield\ub97c Update\uc5d0\uc11c \uc0ac\uc6a9\ud574\uc11c yield WaitFor(FixedUpdate, Seconds)\ub4f1\uc73c\ub85c \uc2e4\ud589\uc744 \uc9c0\uc5f0\uc2dc\ud0a4\ub294 \uae30\ub2a5  - yield WWW\ub85c \ub2e4\uc6b4\ub85c\ub4dc\ub97c \uae30\ub2e4\ub824\uc11c JS\uc758 async\uc640 \uac19\uc774 \uc0ac\uc6a9\ub3c4 \uac00\ub2a5  - yield StartCoroutine\uc73c\ub85c \ub2e4\ub978 coroutine\uc744 chain\ud560 \uc218\ub3c4 \uc788\uc74c   </p>"},{"location":"unity/2025.04.14_life_cycle/#_2","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>script execution order sceneLoaded sceneUnloaded GL Camera.onPreCull, Carmera.onPreRender, Camera.onPostRender </p>"},{"location":"unity/2025.04.15_game_object/","title":"2025.04.15 game object","text":""},{"location":"unity/2025.04.15_game_object/#game-object","title":"game object","text":"<ul> <li>\uc77c\ubd80 component\ub4e4\uc740 \uc11c\ub85c \uc758\uc874\ub418\uc5b4 \uc788\uace0 \ud55c\uac00\uc9c0\ub97c \uc0ad\uc81c\ud558\uba74 \uc81c\ub300\ub85c \ub3d9\uc791\ud558\uc9c0 \uc54a\ub294\ub2e4   </li> <li>game object\ub97c \ub2e8 \ud558\ub098\uc758 tag\ub97c \uac00\uc9c8 \uc218 \uc788\uace0 tag\ub97c \uc0ac\uc6a9\ud558\uba74 \ube60\ub974\uac8c \ucc3e\uc744 \uc218 \uc788\ub2e4  <pre><code>public class Example : MonoBehaviour {\n    public GameObject respawnPrefab;\n    public GameObject respawn;\n    void Start() {\n        if (respawn == null)\n            respawn = GameObject.FindWithTag(\"Respawn\");\n        Instantiate(respawnPrefab, respawn.transform.position,\n        respawn.transform.rotation) as GameObject;\n  }\n}\n</code></pre></li> </ul>"},{"location":"unity/2025.04.15_game_object/#primitives","title":"primitives","text":"<ul> <li>Cylinder\uc758 collider\ub294 capsule\uc774\ub2e4, cylinder \ubaa8\uc591\uc744 \uc6d0\ud55c\ub2e4\uba74 \uc9c1\uc811 mesh\ub97c \ub9cc\ub4e4\uc5b4\uc11c mesh collider\ub97c \ucd94\uac00\ud558\uc790    </li> <li>GUI\ub098 \uc774\ubbf8\uc9c0, \ub3d9\uc601\uc0c1 \ub4f1\uc744 \ud45c\uc2dc\ud560 \ub54c\ub294 Plane \ubcf4\ub2e4 Quad\uac00 \uc88b\uc744 \uc218 \uc788\ub2e4 (Quad\ub294 2\uac1c\uc758 \uc0bc\uac01\ud615, Plane\uc740 200\uac1c\uc758 \uc0bc\uac01\ud615)   </li> </ul>"},{"location":"unity/2025.04.15_game_object/#transform","title":"transform","text":"<ul> <li>game object \uac04\uc758 parent-child\ub294 transform\uc774 \uad00\ub9ac\ud55c\ub2e4   </li> <li>game object\uc5d0\ub294 \ud56d\uc0c1 \ud558\ub098\uc758 transform\uc774 \uc788\ub2e4   </li> <li>position, rotation scale\uc740 \ubd80\ubaa8\ub97c \uae30\uc900\uc73c\ub85c \uce21\uc815\ub418\uace0 \ubd80\ubaa8\uac00 \uc5c6\uc744 \ub54c\ub294 World\uac00 \uae30\uc900\uc774\ub2e4   </li> <li>parent\uc5d0 child\ub97c \ucd94\uac00\ud558\uae30 \uc804\uc5d0 parent\uc758 location\uc744 (0, 0, 0)\uc73c\ub85c \ubcc0\uacbd\ud558\ub294 \uac83\uc774 \uc88b\ub2e4   </li> <li>parent\uc758 scale\uc744 \ubcc0\uacbd\ud558\uba74 child\uc758 position\uc5d0 \uc601\ud5a5\uc774 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.15_game_object/#scaling","title":"scaling","text":"<ul> <li>physics engine\uc740 \uae30\ubcf8\uc801\uc73c\ub85c 1 unit\uc774 1\ubbf8\ud130\uc778 \uac83\uc73c\ub85c \uc0c1\uc815\ub418\uc5b4 \uc788\ub2e4   </li> <li>transform\uc744 \ud1b5\ud574 scale\uc744 \ubc14\uafb8\ub294 \uac83\ubcf4\ub2e4 model\uc758 \ud06c\uae30\ub97c \uc801\uc808\ud558\uac8c \ub9cc\ub4dc\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\ub2e4   </li> <li>\ub610\ub294 Import Settings\uc5d0\uc11c \ubcc0\uacbd\ud558\ub294 \uac83\uc774 transform\uc744 \ud1b5\ud574 \ubcc0\uacbd\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc88b\ub2e4   </li> <li>transform\uc758 scale\uc744 \ubcc0\uacbd\ud55c \uacbd\uc6b0 \uc131\ub2a5\uc5d0 \uc545\uc601\ud5a5\uc774 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.15_game_object/#non-uniform-scaling","title":"Non-Uniform Scaling","text":"<ul> <li>x, y, z\uc758 scale\uc774 \uac01\uac01 \ub2e4\ub978 Non-Uniform scale\uc77c \ub54c\ub294 \uc81c\uc57d\uc774 \uc788\ub2e4   </li> <li>radius\uac00 \uc788\ub294 Sphere Collider, Capsule Collider, Light, Audio Source\ub294 \ud0c0\uc6d0\ud615\uc774 \ub418\uc9c0 \uc54a\uace0 \uc6d0\ud615\uc73c\ub85c \ub0a8\uc544 \uc788\ub294\ub2e4   </li> <li>object\uc758 parent\uac00 Non-Uniform scale\uc744 \uac00\uc9c0\uace0 \uc788\uace0 parent\ub97c \uae30\uc900\uc73c\ub85c \ud68c\uc804\ud55c\ub2e4\uba74 \uc65c\uace1\ub418\uc5b4 \ubcf4\uc77c \uc218 \uc788\ub2e4   </li> <li>Box Collider\uc758 scale\uc744 Non-Uniform scale\ub85c \ubcc0\uacbd\ud558\uba74 render \ud558\uace0 \uc788\ub294 mesh\uc640 \ub9de\uc9c0 \uc54a\uc744 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.15_game_object/#static-gameobject","title":"static GameObject","text":"<ul> <li>runtime\uc5d0 \uc6c0\uc9c1\uc774\uc9c0 \uc54a\ub294 \uacbd\uc6b0 static flag\ub97c \uc0ac\uc6a9\ud558\uba74 \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub2e4 (runtime\uc5d0 flag\ub97c \ubc14\uafd4\ub3c4 \ubbf8\ub9ac \uacc4\uc0b0\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ud6a8\uacfc\uac00 \uc5c6\uc74c)   </li> <li>Baked Global Illumination \uc774\ub098 Enlighten Realtime Global Illumination\uc744 \uc774\uc6a9\ud560 \uacbd\uc6b0 Contribute GI\ub97c \uc0ac\uc6a9\ud574 \ucd5c\uc801\ud654 \ud560 \uc218 \uc788\ub2e4    </li> </ul>"},{"location":"unity/2025.04.15_game_object/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>Layers Camera.main collision GameObjectUtility.SetStaticEditorFlags Built-in Render Pipeline and lighting Static Batching </p>"},{"location":"unity/2025.04.16_prefab%2Csingleton%2Cinput%2Ctime/","title":"2025.04.16 prefab,singleton,input,time","text":""},{"location":"unity/2025.04.16_prefab%2Csingleton%2Cinput%2Ctime/#prefab","title":"prefab","text":"<ul> <li>script\uc5d0 public prefab\uc744 \ud560\ub2f9\ud558\ub294 \uacbd\uc6b0 GameObject \ubcf4\ub2e4\ub294 \ud2b9\uc815\ud55c component\uc758 type\uc744 \uc815\ud558\uba74 \uc798\ubabb \uc124\uc815\ub418\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\ub2e4 (projectile\uc758 \uacbd\uc6b0\uc5d0\ub294 Rigidbody\ub85c \uc124\uc815)   </li> <li>GameObject type\uc758 variable\uc744 \uc0ac\uc6a9\ud558\uba74 Instantiate\ub97c \uc2e4\ud589\ud55c \uac12\uc774 GameObject\uac00 \ub418\uc9c0\ub9cc \ud2b9\uc815 component type variable\uc758 \uacbd\uc6b0 Instantiate\ub97c \uc2e4\ud589\ud558\uba74 \uacb0\uacfc\uc778 GameObject\uc758 \ud574\ub2f9 type\uc744 \uc5bb\uc744 \uc218 \uc788\ub2e4  <pre><code>public class FireProjectile : MonoBehaviour {\n    public Rigidbody projectile;\n    public float speed = 4;\n    void Update() {\n        if (Input.GetButtonDown(\"Fire1\")) {\n            Rigidbody p = Instantiate(projectile, transform.position, transform.rotation);\n            p.velocity = transform.forward * speed;\n        }\n    }\n}\n</code></pre></li> </ul>"},{"location":"unity/2025.04.16_prefab%2Csingleton%2Cinput%2Ctime/#singleton","title":"singleton","text":"<ul> <li>unity\uc5d0\uc11c singleton\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 GameObject\uc5d0 script\ub97c component\ub85c \uc124\uc815\ud558\uace0 \uad00\ub9ac\ud558\uba74 \ub41c\ub2e4  <pre><code>    public class Singleton&lt;T&gt; : MonoBehaviour where T : Component {\n      // create a private reference to T instance\n      private static T instance;\n      public static T Shared {\n        get {\n          // if instance is null\n          if (instance == null) {\n            // find the generic instance\n            instance = FindObjectOfType&lt;T&gt;();\n            // if it's null again create a new object\n            // and attach the generic instance\n            if (instance == null) {\n              GameObject obj = new GameObject();\n              obj.name = typeof(T).Name;\n              instance = obj.AddComponent&lt;T&gt;();\n            }\n          }\n          return instance;\n        }\n      }\n\n      public virtual void Awake() {\n        // create the instance\n        if (instance == null) {\n          instance = this as T;\n          DontDestroyOnLoad(this.gameObject);\n        }\n        else {\n          Destroy(gameObject);\n        }\n      }\n    }\n</code></pre></li> </ul>"},{"location":"unity/2025.04.16_prefab%2Csingleton%2Cinput%2Ctime/#time","title":"time","text":"<ul> <li>Time.timeScale\uc744 \uc0ac\uc6a9\ud574\uc11c \uc2dc\uac04\uc774 \uc9c0\ub098\uac00\ub294 \uc18d\ub3c4\ub97c \ubc14\uafc0 \uc218 \uc788\ub2e4 (\uc2ac\ub85c\uc6b0 \ubaa8\uc158 \ub4f1), timeScale\uc744 \ubcc0\uacbd\ud558\uba74 FixedUpdate\uc774 \uba87 frame \ub9c8\ub2e4 \uc2e4\ud589\ub418\ub294 \ube48\ub3c4\ub3c4 \ubcc0\uacbd\ub41c\ub2e4   </li> <li>Time.maximumDeltaTime\uc744 \uc774\uc6a9\ud558\uba74 1frame \ub2f9 FixedUpdate\uac00 \uc2e4\ud589\ub418\ub294 \ud69f\uc218\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uace0, frame\uc774 \ub290\ub824\uc9c8 \ub54c stuttering \uacfc speed up\uc744 \uc870\uc808\ud560 \uc218 \uc788\ub2e4    </li> <li>1 frame\uc774 \uae38\uc5b4\uc9c0\uba74 \uc5ec\ub7ec\ubc88\uc758 FixedUpdate\uac00 \uc2e4\ud589\ub418\uace0 \uadf8\ub85c \uc778\ud574 \ub610 \ub2e4\uc2dc frame\uc774 \uae38\uc5b4\uc9c4\ub2e4   </li> <li>fixed time step\uc744 \uc904\uc774\uba74 1 frame \ub2f9 \ub354 \ub9ce\uc740 FixedUpdate\uac00 \uc2e4\ud589\ub418\uace0 \ub192\uc740 frame\uc758 rendering \uacfc game logic \ubcf4\ub2e4 \ubb3c\ub9ac \uacc4\uc0b0 \ub4f1\uc744 \ub354 \uc815\ud655\ud558\uac8c \ud558\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4   </li> <li>unscaled(Delta)Time\uc744 \uc0ac\uc6a9\ud558\uba74 frame time spike\uac00 \uc0dd\uacbc\uc744 \ub54c \ubcbd\uc744 \ub6ab\uace0 \ub098\uac00\ub294 \ub4f1\uc758 \ubc84\uadf8\ub97c \ubc29\uc9c0\ud560 \uc218 \uc788\uace0 smooth(Delta)Time\ub97c \uc774\uc6a9\ud558\uba74 \uae09\uaca9\ud55c frame\uc758 \ubcc0\ud654\ub97c \uc644\ud654\ud560 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.16_prefab%2Csingleton%2Cinput%2Ctime/#input","title":"input","text":"<ul> <li>\uc6c0\uc9c1\uc784\uc5d0 \ub300\ud574\uc11c\ub294 Input.GetAxis\ub97c event\uc5d0 \ub300\ud574\uc11c\ub294 Input.GetButton\uc744 \uc0ac\uc6a9   </li> <li>\uc785\ub825\ub41c input flag\ub294 Update\uac00 \uc2e4\ud589\ub418\uae30 \uc804\uae4c\uc9c0\ub294 reset \ub418\uc9c0 \uc54a\ub294\ub2e4   </li> </ul>"},{"location":"unity/2025.04.17_rigidbody%2Ccollision/","title":"2025.04.17 rigidbody,collision","text":""},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#rigidbody","title":"Rigidbody","text":"<ul> <li>Rigidbody.isKinematic\uc744 \uc0ac\uc6a9\ud558\uba74 \ubb3c\ub9ac\uc801\uc778 \ud798\uacfc \ucda9\ub3cc, joint\uc5d0 \ub354 \uc774\uc0c1 \uc601\ud56d\uc744 \ubc1b\uc9c0 \uc54a\ub294\ub2e4 (isKinematic\uc73c\ub85c \uc124\uc815\ud55c Rigidbody\ub97c \ub2e4\ub978 Rigidbody\uc758 joint\ub85c \ud65c\uc6a9\ud560 \uc218 \uc788\uace0, \uce90\ub9ad\ud130\uc758 isKinematic\uc744 true\uc5d0\uc11c false\ub85c \uc124\uc815\ud574 ragdoll\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4)  <pre><code>public class RagdollCharacter: MonoBehaviour {\n    public Rigidbody rb;\n\n    void Start() {\n        rb = GetComponent&lt;Rigidbody&gt;\n    }  \n\n    // Let the rigidbody take control and detect collisions.\n    void EnableRagdoll() {\n        rb.isKinematic = false;\n        rb.detectCollisions = true;\n    }  \n\n    // Let animation control the rigidbody and ignore collisions.\n    void DisableRagdoll() {\n        rb.isKinematic = true;\n        rb.detectCollisions = false;\n    }\n}\n</code></pre></li> </ul>"},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#collision","title":"Collision","text":"<ul> <li>collision class\uc5d0\ub294 impact velocity, contact points\ub4f1\uc758 \uc815\ubcf4\uac00 \uc788\ub2e4   </li> <li>collision event\uac00 \uc791\ub3d9\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud558\ub098 \uc774\uc0c1\uc758 collider\uc5d0 non-kinematic rigidbody\uac00 \uc788\uc5b4\uc57c \ud55c\ub2e4   </li> <li>collision event\ub294 disabled\uc778 MonoBehaviour\uc5d0\ub3c4 \ubcf4\ub0b4\uc9c4\ub2e4   </li> </ul>"},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#continuous-collision-detection","title":"Continuous collision detection","text":""},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#speculative-cdd","title":"Speculative CDD","text":"<ul> <li>\ucda9\ub3cc\uc744 \uc608\uce21\ud558\uc5ec discrete collision detection\ubcf4\ub2e4 \ub354 \uc815\uad50\ud558\uac8c \ucda9\ub3cc\uc744 \ud310\ubcc4\ud560 \uc218 \uc788\ub294 \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\uc9c0\ub9cc \ub354 \ub9ce\uc740 \uc5f0\uc0b0\uc131\ub2a5\uc774 \ud544\uc694\ud558\ub2e4   </li> <li>\uc608\uce21\uc744 \uc774\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 false (ghost) collision\uc774 \uc77c\uc5b4\ub0a0 \uc218 \uc788\ub2e4   </li> <li>broad-phase<sup>1</sup>\uc5d0\uc11c \ucd95\uacfc \ud3c9\ud589\ud55c bounding-box\uc758<sup>2</sup> \ud06c\uae30\ub97c \ub298\ub824\uc11c \ub354 \ub9ce\uc740 \ub300\uc0c1\uc744 \ucda9\ub3cc \uac00\ub2a5\ud55c \ubc94\uc8fc\uc5d0 \ub123\uace0 \uacc4\uc0b0\ud55c\ub2e4   </li> <li>linear movement, angular movement \ubaa8\ub450 \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4   </li> <li>\uac00\uc7a5 \uac00\uae4c\uc6b4 \ucda9\ub3cc \uc9c0\uc810\uc744 \ucc3e\uae30 \ub54c\ubb38\uc5d0 \ucda9\ub3cc \ub300\uc0c1\uc758 normal\uc744 \uc798\ubabb \uc120\ud0dd\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#sweep-based-ccd","title":"sweep-based CCD","text":"<ul> <li>Time-Of-Impact \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud55c\ub2e4    object\uc758 \ud604\uc7ac \uc18d\ub3c4\ub97c \ubc14\ud0d5\uc73c\ub85c \ub2e4\uc74c timestamp\uae4c\uc9c0 \uc9c4\ud589\ud560 \uada4\ub3c4\ub97c \ud0d0\uc9c0\ud55c\ub2e4          \uc9c4\ud589\uc911\uc5d0 \ucda9\ub3cc\uc774 \uac10\uc9c0\ub418\uba74 object\ub97c \ucda9\ub3cc\ud560 \uc9c0\uc810\uae4c\uc9c0 \uc6c0\uc9c1\uc774\ub294 \uac83\uc744 \uacc4\uc0b0\ud55c\ub2e4 \uadf8\ub9ac\uace0 \ucda9\ub3cc \uc774\ud6c4\uc758 \uc18d\ub3c4\ub97c \ub2e4\uc2dc \uacc4\uc0b0 \ud6c4 \ub2e4\uc2dc sweep(based CCD)\uc744 \uc2e4\ud589\ud55c\ub2e4   </li> <li>\uc131\ub2a5\uc5d0 \ud06c\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uae30 \ub54c\ubb38\uc5d0 \ub9ce\uc774 \uc0ac\uc6a9\ud558\uba74 \uc88b\uc9c0 \uc54a\ub2e4, \ud2b9\ud788 \ube60\ub974\uac8c \uc6c0\uc9c1\uc774\ub294 \uc5ec\ub7ec \ubb3c\uccb4\uac04\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ub354\uc6b1 \ub9ce\uc740 \uc5f0\uc0b0\uc774 \ud544\uc694\ud558\ub2e4   collision detection phase\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 solving, intergrating phase\uc5d0\uc11c \ub9ce\uc740 \ud798\uc744 \ubc1b\uc73c\uba74 \ucda9\ub3cc\uc744 \ub193\uce60 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.17_rigidbody%2Ccollision/#_1","title":"\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9","text":"<p>Wheel colliders Physics Material </p> <ol> <li> <p>the physics engine will determine which objects can possibly collide against each other, and then store the potential object collision in a list\u00a0\u21a9</p> </li> <li> <p>axis-aligned minimum bounding box\u00a0\u21a9</p> </li> </ol>"},{"location":"unity/2025.04.20_coroutine%2Craycast/","title":"2025.04.20 coroutine,raycast","text":""},{"location":"unity/2025.04.20_coroutine%2Craycast/#coroutine","title":"coroutine","text":"<ul> <li>coroutine\uc740 thread\uac00 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0 main thread\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 CPU\uc758 \uc2e4\ud589 \uc2dc\uac04\uc744 \uc904\uc5ec\uc8fc\uc9c0 \uc54a\ub294\ub2e4   </li> <li>main thread\uc5d0\uc11c async function\uc744 \uae34 \uc2dc\uac04\uc5d0 \uac78\uccd0 \uc2e4\ud589\ud558\uac70\ub098 \uc5ec\ub7ec frame\uc5d0 \uac78\uccd0 \ub098\ub204\uc5b4 \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4   </li> <li>MonoBehaviour\uc758 SetActive(false)\ub97c \uc2e4\ud589\ud558\uc5ec coroutine\uc744 \uc911\uc9c0\ud560 \uc218 \uc788\ub2e4 (enabled\ub97c false\ub85c \ubc14\uafb8\ub294 \uac83\uc740 \uc911\uc9c0\uc2dc\ud0a4\uc9c0 \uc54a\ub294\ub2e4)   </li> <li>coroutine\uc740 \uccab yield return \uc774\ud6c4\ubd80\ud130\ub294 coroutine\uc744 \uad00\ub9ac\ud558\ub294 class\uc640 \ud568\uaed8DelayedCallManager\uc5d0\uc11c \uc2e4\ud589\ub41c\ub2e4   </li> <li>coroutine\uc744 \uad00\ub9ac\ud558\ub294 class\uc5d0 \ud544\uc694\ud55c \uba54\ubaa8\ub9ac\uc640 coroutine function \ub0b4\ubd80\uc758 local variable\ub4e4\uc744 heap\uc73c\ub85c \ubcf5\uc0ac\ud558\uae30 \uc704\ud55c \uba54\ubaa8\ub9ac overhead\uac00 \ubc1c\uc0dd\ud55c\ub2e4   </li> <li>best practice\ub294 \uc5ec\ub7ec \uae30\ub2a5\uc744 \uc555\ucd95\ud574 coroutine\uc758 \uac1c\uc218\ub97c \uc904\uc774\ub294 \uac83\uc774\ub2e4, nested coroutine\uc740 \ucf54\ub4dc\uac00 \uac04\uacb0\ud574 \uc9c0\uace0 \uc720\uc9c0 \ubcf4\uc218\uac00 \uc26c\uc6cc \uc9c0\uc9c0\ub9cc \uc131\ub2a5 \uc190\uc2e4\uc774 \uc788\ub2e4   </li> <li>coroutine\uc774 Update\ub9c8\ub2e4 \uc2e4\ud589\ub418\uace0 yield\uac00 \uc5c6\uac70\ub098 \uac04\uaca9\uc774 \uae38\ub2e4\uba74 coroutine \ub300\uc2e0 Update\ub098 LateUpdate\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\ub2e4   </li> </ul>"},{"location":"unity/2025.04.20_coroutine%2Craycast/#raycast","title":"raycast","text":""},{"location":"unity/2025.04.20_coroutine%2Craycast/#camera-ray","title":"camera ray","text":"<ul> <li>\uce74\uba54\ub77c\uc5d0\uc11c \ubcf4\uc774\ub294 \ubaa8\ub4e0 \uc9c0\uc810\uc740 \uce74\uba54\ub77c\uc5d0\uc11c \ub098\uc624\ub294 line\uc73c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 Ray object\ub85c \ud45c\ud604\ud560 \uc218 \uc788\ub2e4   </li> <li>ScreenPointToRay\ub294 pixel \uae30\uc900\uc774\uace0 ViewportPointToRay\ub294 normalized\ub41c \uc88c\ud45c\uac00 \uae30\uc900\uc774 \ub41c\ub2e4   </li> <li>camera\uc5d0\uc11c \uc0dd\uc131\ud55c ray\ub294 camera.transform.position\uc774 \uc544\ub2cc near clipping plane\uc758 \ud55c \uc810\uc774 origin\uc774 \ub41c\ub2e4   </li> </ul>"},{"location":"unity/2025.04.20_coroutine%2Craycast/#unity-null","title":"Unity null","text":"<ul> <li>\ub2e4\uc74c\uacfc \uac19\uc774  \uc815\uc0c1\uc801\uc73c\ub85c \uc811\uadfc\ud560 \uc218 \uc788\ub294 c# object\ub77c\ub3c4 unity\uc5d0\uc11c\ub294 null\uc73c\ub85c \ud310\uc815\ub420 \uc218 \uc788\ub2e4 (custom operator == override)   </li> <li>\uc5d0\ub514\ud130\uc5d0\uc11c \ub514\ubc84\uae45\uc5d0 \uc0ac\uc6a9\ud560 \ubaa9\uc801\uc73c\ub85c unity\uac00 \uc0dd\uc131\ud55c object\uc5d0 \uc811\uadfc\ud558\ub824\uace0 \ud55c \uacbd\uc6b0   </li> <li>C#\uc758 G.C\uac00 \uc544\uc9c1 \ucc98\ub9ac\ud558\uc9c0 \uc54a\uc558\uc9c0\ub9cc \ud574\ub2f9 object\uc5d0 \ub300\ud55c Unity engine\uc758 C++ \ucf54\ub4dc\uc758 object\uac00 \uc0ad\uc81c\ub41c \uacbd\uc6b0 (\uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc)   </li> <li>UnityEngine.Object\ub294 obj == null \uacfc obj is null\uc758 \uacb0\uacfc\uac00 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uace0 ?.method() \ub3c4 \ub3d9\uc77c\ud558\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub2e4    <p>\uc77d\uc5b4 \ubcfc \ub0b4\uc6a9</p> </li> <li>UnityEngine.Object </li> <li>C# Job System </li> </ul>"},{"location":"unity/2025.04.21_PointerClick%2Csingleton/","title":"2025.04.21 PointerClick,singleton","text":""},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#pointerclick","title":"PointerClick","text":""},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#_1","title":"2025.04.21 PointerClick,singleton","text":""},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#ipointerclickhander","title":"IPointerClickHander","text":"<ul> <li>OnPointerClick\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c interface\ub85c IEventSystemHandler\ub97c \uae30\ubcf8\uc73c\ub85c \ud55c\ub2e4   </li> <li>scene\uc5d0 click\uc744 \uac10\uc9c0\ud558\ub294 event system\uc774 \uc788\uc5b4\uc57c \ud55c\ub2e4, non-UI GameObject\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub824\uba74 camera\uc5d0 PhysicsRaycaster\uac00 \uc7a5\ucc29\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4   </li> </ul>"},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#singleton","title":"singleton","text":"<ul> <li>unity\uc5d0\uc11c singletone\uc740 MonoBehaviour\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 private constructor\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4 (MonoBehaviour\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5bb\ub294 \uc774\uc810\uc740 \uc774\ud574 \ubd88\uac00)   </li> <li>\uc5d0\ub514\ud130\uc5d0\uc11c scene\uc5d0 \uc9c1\uc811 \ub123\uc9c0 \uc54a\uc544\ub3c4 \uc0dd\uc131 \uac00\ub2a5\ud558\ub2e4, prefab\uc744 \uc0ac\uc6a9\ud558\uba74 \ucd08\uae30 \uc124\uc815\uc744 \ud3b8\ud558\uac8c \ud560 \uc218 \uc788\ub2e4   </li> <li>\uac8c\uc784 \uc885\ub8cc\uc2dc singleton\uc774 \uba3c\uc800 \ud574\uc81c\ub418\uac8c \ub418\uba74 \ubc84\uadf8\uac00 \uc0dd\uae38 \uc218 \uc788\ub2e4   </li> </ul>"},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#_2","title":"\uae30\ubcf8 \ud328\ud134","text":"<pre><code>    class Singleton: MonoBehaviour {\n        private static Singleton instance;\n      public static Singleton Shared {\n        get {\n          if (Singleton.Shared == null) {\n            Singleton.instance = Singleton.createInstance();\n          }\n          return (Singleton.instance);\n        }\n      }\n      private static Singleton createInstance() {\n        var instance = new GameObject().AddComponent&lt;Singleton&gt;();\n        instance.name = Singleton.Shared.GetType().ToString();\n        DontDestroyOnLoad(instance.gameObject);\n        return (instance);\n      }\n    }\n</code></pre>"},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#prefab","title":"prefab\uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud134","text":"<pre><code>class SingletonPrefab: MonoBehaviour {\n  private static SingletonPrefab instance;\n    public static SingletonPrefab Shared {\n    get {\n      if (SingletonPrefab.instance == null) {\n        SingletonPrefab.instance = SingletonPrefab.createInstance();\n      }\n      return SingletonPrefab.instance;\n    }\n  }\n\n  private static SingletonPrefab createInstance() {\n    var prefab = Resources.Load&lt;GameObject&gt;(\"PathToSingletonPrefab\");\n    // create the prefab in your scene\n    var instance = Instantiate&lt;GameObject&gt;(prefab);\n    // try find the instance inside the prefab\n    var singletonInstance = instance.GetComponentInChildren&lt;SingletonPrefab&gt;();\n    if (singletonInstance == null)\n      singletonInstance = instance.AddComponent&lt;SingletonPrefab&gt;();\n    // mark root as DontDestroyOnLoad();\n    DontDestroyOnLoad(instance.transform.root.gameObject);\n    return (singletonInstance);\n  }\n}\n</code></pre>"},{"location":"unity/2025.04.21_PointerClick%2Csingleton/#static-init","title":"static init\uc744 \uc0ac\uc6a9\ud558\ub294 \ud328\ud134","text":"<ul> <li>RuntimeInitializeOnLoadMethodAttribute\ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95    <pre><code>class Singleton: MonoBehaviour {\n    private static Singleton instance;\n    public static Singleton Shared =&gt; Singleton.instance;\n    public static void createInstance() {\n        if (Singleton.instance != null)\n            return ;\n        var instance = new GameObject().AddComponent&lt;Singleton&gt;();\n        instance.name = Singleton.Shared.GetType().ToString();\n        DontDestroyOnLoad(instance.gameObject);\n        Singleton.instance = instance;\n    }\n\n    static class Loader {\n        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]\n        private static void createInstance() {\n            Singleton.createInstance(); \n        }\n    }\n}\n</code></pre></li> </ul>"}]}